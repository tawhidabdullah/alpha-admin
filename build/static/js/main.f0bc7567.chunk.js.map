{"version":3,"sources":["components/Field/Input.tsx","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","pages/auth/login/Login.tsx","pages/auth/login/index.ts","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/globalState/reducers.js","state/ducks/globalState/types.js","state/ducks/globalState/actions.js","state/ducks/globalState/index.js","utils/index.ts","layout/sider/Sider.tsx","layout/sider/index.ts","components/Empty/index.ts","components/Empty/Empty.tsx","layout/header/Header.tsx","layout/header/index.ts","pages/overview/ApiVisits.tsx","pages/overview/OrderOverView.tsx","pages/overview/PlatformVisits.tsx","pages/overview/PageVisits.tsx","pages/overview/Overview.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/MetaTags.tsx","pages/category/CategoryNewQuickEdit.tsx","components/Placeholders/DataTableSkeleton.tsx","pages/category/CategoryList.tsx","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/category/CategoryNewEdit.tsx","pages/category/NewCategoryDetail.tsx","components/Field/InputSmall.tsx","components/Notification/Notification.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","pages/productBundle/ProductBundleQuickEdit.tsx","pages/productBundle/SelectProducts.tsx","pages/order/AddNewOrderProductItem.tsx","pages/productBundle/SelectedProductItems.tsx","pages/productBundle/AddNewProductBundle.tsx","pages/productBundle/ProductBundleList.tsx","pages/productBundle/ProductBundleEdit.tsx","pages/coupon/CouponProducts.tsx","pages/productBundle/ProductBundleDetail.tsx","pages/brand/AddNewBrand.tsx","pages/brand/BrandQuickEdit.tsx","pages/brand/BrandList.tsx","pages/brand/BrandEdit.tsx","pages/brand/NewBrandDetail.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/ProductQuickEdit.tsx","pages/product/ProductList.tsx","pages/product/ProductEdit.tsx","pages/product/NewProductDetail.tsx","pages/tag/TagQuickEdit.tsx","pages/tag/AddNewTag.tsx","pages/tag/TagList.tsx","pages/tag/TagEdit.tsx","pages/tag/NewTagDetail.tsx","pages/coupon/OrderedProductsSelectProducts.tsx","pages/coupon/OrderedProductsSelectedProductItems.tsx","pages/coupon/CouponEdit.tsx","pages/coupon/CouponDetail.tsx","pages/coupon/CouponQuickEdit.tsx","pages/coupon/AddNewCoupon.tsx","pages/coupon/CouponList.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/customer/CustomerEdit.tsx","pages/customer/CustomerDetail.tsx","pages/pages/PagesList.tsx","pages/pages/PageDetail.tsx","pages/pages/AddNewPage.tsx","pages/pages/PageEdit.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/OrderInvoice.jsx","pages/order/productItemForOrderDetail.tsx","pages/order/QuickEdit.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/order/OrderEdit.tsx","pages/order/OrderNoteEdit.tsx","pages/order/OrderDetail.tsx","pages/order/orderAnalytics/ThisMonthOrderReport.tsx","pages/order/orderAnalytics/ThisWeekOrderReport.tsx","pages/order/orderAnalytics/DateOrderReport.tsx","pages/order/orderAnalytics/HourOrderReport.tsx","pages/order/orderAnalytics/MonthOrderReport.tsx","pages/order/orderAnalytics/YearOrderReport.tsx","pages/order/orderAnalytics/DeliveryRegionReport.tsx","pages/order/orderAnalytics/index.ts","pages/order/orderAnalytics/OrderOverviewReport.tsx","pages/order/ConfigOrderStatus.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteSeo.tsx","pages/settings/ChangeAdminPassword.tsx","pages/settings/SiteInfo.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","pages/sms/SendCustomSMS.tsx","pages/sms/SMSConfiguaration.tsx","pages/sms/Sms.tsx","pages/sms/index.ts","pages/email/ConfigureSTMP.tsx","pages/email/NewCustomerTemplate.tsx","pages/email/OrderStatusTemplateAutoEmail.tsx","pages/email/OrderTemplateAutoEmail.tsx","pages/email/ConfigureAutoEmail.tsx","pages/email/ComposeCustomEmail.tsx","pages/email/InboxEmailDetails.tsx","pages/email/Inbox.tsx","pages/email/Email.tsx","pages/notification/NotificationList.tsx","pages/admins/AccessCheckbox.tsx","state/ducks/credentials/reducers.js","state/ducks/credentials/types.js","state/ducks/credentials/actions.js","state/ducks/credentials/index.js","pages/admins/QuickEdit.tsx","pages/admins/AddNewAdmin.tsx","pages/admins/AdminList.tsx","pages/admins/AdminEdit.tsx","pages/admins/AdminDetail.tsx","pages/post/Tags.tsx","pages/post/Categories.tsx","pages/post/SelectProducts.tsx","pages/post/SelectedProductItems.tsx","pages/post/PostQuickEdit.tsx","pages/post/AddNewPost.tsx","pages/post/PostList.tsx","pages/post/PostEdit.tsx","pages/post/PostDetail.tsx","pages/post/postTags/QuickEdit.tsx","pages/post/postTags/AddNewPostTag.tsx","pages/post/postTags/PostTagList.tsx","pages/post/postTags/TagEdit.tsx","pages/post/postTags/NewPostTagDetail.tsx","pages/post/postCategory/MetaTags.tsx","pages/post/postCategory/QuickEdit.tsx","pages/post/postCategory/AddNewPostCategory.tsx","pages/post/postCategory/PostCategoryList.tsx","pages/post/postCategory/PostCategoryEdit.tsx","pages/post/postCategory/NewPostCategoryDetail.tsx","components/Field/DatePicker.tsx","pages/staff/AddNewStaff.tsx","pages/staff/QuickEdit.tsx","pages/staff/StaffList.tsx","pages/staff/StaffEdit.tsx","pages/staff/StaffDetail.tsx","pages/expense/QuickEdit.tsx","pages/expense/AddNewExpense.tsx","pages/expense/ExpenseList.tsx","pages/expense/ExpenseEdit.tsx","pages/expense/ExpenseDetail.tsx","pages/dealer/Areas.tsx","pages/dealer/AddNewDealer.tsx","pages/dealer/QuickEdit.tsx","pages/dealer/DealerList.tsx","pages/dealer/DealerEdit.tsx","pages/dealer/DealerDetail.tsx","pages/dealer/Area/AreaQuickEdit.tsx","pages/dealer/Area/AddNewArea.tsx","pages/dealer/Area/AreaList.tsx","pages/dealer/Area/AreaEdit.tsx","pages/dealer/Area/AreaDetail.tsx","layout/content/Content.tsx","layout/content/index.ts","App.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Demo","Input","TextArea","required","addonBefore","label","type","value","defaultValue","onChange","disabled","isError","errorString","name","placeHolder","min","className","Item","validateStatus","help","style","borderRadius","placeholder","isObjectEmpty","Object","keys","length","manupulateURL","url","urlOptions","params","placeHolders","split","map","currentValue","includes","console","log","actualPlaceholderValue","replace","fuckValue","item","join","param","slice","indexOf","converter","resData","data","formatedData","category","id","_id","key","description","productCount","parent","cover","config","thumbnail","icon","image","img","medium","added","title","labels","alt","caption","subCount","subCategory","children","subCat","original","notiData","forEach","not","read","push","noti","heading","text","link","page","next","convertedData","product","regularPrice","price","offerPrice","unit","pricing","date","time","venue","brand","tags","parseInt","available","minimum","cartItems","items","cartItem","quantity","cartKey","updated","status","avalable","isNext","post","body","preparationTime","servingSize","cookingTime","requiredProducts","detail","category2","cat","anotherPrice","startDate","endDate","actualPrice","products","visit","count","itemId","firstName","lastName","country","city","email","phone","address1","address2","created","code","minimumOrder","maximumOrder","freeProducts","orderedProductsCount","orderedProducts","freeProductsCount","amountType","amount","freeDelivery","maxUsePerUser","tag","recipient","subject","html","event","success","msg","succes","customer","dealerName","dealer","address","commission","depositMoney","theme","components","component","region","pickUpLocation","countryCode","countryName","charge","availableStock","minimumStock","primaryCategory","inserted","topic","order","shippingAddress","shortCode","total","totalPrice","deliveryCharge","deliveryRegion","deliveryName","deliveryPickUpLocation","deliveryCountryName","date_created","paymentMethod","paymentStatus","payment","customerId","billingAddress","generalFormat","dataMap","line_items","paymentItems","number","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","options","format","api","apiMap","server","method","credentials","headers","Headers","JSON","stringify","fetch","baseURL","res","formattedData","error","connector","dataFetchReducer","state","action","isLoading","done","payload","Error","useFetch","dependencies","initialData","initialState","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","validationSchema","Yup","shape","username","password","initialValues","Login","loginState","handleLoginFetch","handleSubmit","values","actions","setSubmitting","getisSubmitButtonDisabled","isValid","onSubmit","validateOnBlur","enableReinitialize","handleChange","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","maxWidth","margin","e","onClick","loading","reducerMap","reducer","Accept","isomorphicFetch","then","Promise","resolve","reject","response","parseStatus","json","globalState","createReducer","roles","saveRoles","isAccess","role","adminRoles","Sider","Layout","Header","Content","Footer","SubMenu","Menu","mapDispathToProps","glboalOperations","connect","useState","collapsed","setcollapsed","width","boxShadow","border","collapsible","onCollapse","selectable","mode","PieChartOutlined","to","GoldOutlined","RadarChartOutlined","TagsOutlined","TagOutlined","BranchesOutlined","FireOutlined","CarOutlined","CalculatorOutlined","UsergroupAddOutlined","MoneyCollectOutlined","ShoppingCartOutlined","TeamOutlined","GlobalOutlined","UserOutlined","MailOutlined","MessageOutlined","FileOutlined","FileSearchOutlined","FileAddOutlined","SettingOutlined","UserAddOutlined","SlidersOutlined","BgColorsOutlined","Empty","height","display","justifyContent","alignItems","PRESENTED_IMAGE_SIMPLE","props","history","useHistory","getAllNotificationState","handleGetAllNOticationFetch","handleMarkNotificationAsReadFetch","handleMarkAllNotificationAsReadFetch","notificationList","setnotificationList","sortItem","sortOrderValue","limitNumber","getAllNotification","handleNotificationAsRead","handleAllNotificationAsRead","notification","message","CheckCircleOutlined","color","typeIcon","background","zIndex","transition","alignContent","marginTop","marginLeft","cursor","marginRight","placement","overlay","backgroundColor","padding","textAlign","fontSize","href","index","moment","overflowCount","showZero","TwitterSquareFilled","fontWeight","BellOutlined","LogoutOutlined","Option","Select","RangePicker","DatePicker","MONTHS","TooltipContainerStyles","ApiVisits","selectedApiValue","setSelectedApiValue","setStartDate","setEndDate","demoGraphicVisitsState","handleDemoGraphicVisitsStateFetch","userData","setuserData","metricType","startDateValue","endDateValue","uservisitsDataRes","getDemoGraphicVisitsValue","Date","thisMonth","getMonth","bordered","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","size","x1","y1","x2","y2","offset","stopColor","vertical","strokeDasharray","stroke","dataKey","tickFormatter","orientation","axisLine","tickLine","contentStyle","formatter","fill","showTime","picker","orderAnalyticsVisitsState","handleOrderAnalyticsVisitsStateFetch","orderData","setorderData","ordersDataRes","getAnalyticsOrders","localOptions","COLORS","PlatformVisits","demographicData","setdemographicData","RADIAN","Math","PI","marginBottom","outerRadius","innerRadius","nameKey","cx","cy","midAngle","percent","radius","x","cos","y","sin","dominantBaseline","toFixed","labelLine","entry","CalendarOutlined","Column","Table","ColumnGroup","PageVisits","pageVisitsState","handlePageVisitsStateFetch","visitType","getPageVisitsValue","pagination","defaultPageSize","dataSource","tableLayout","onHeaderRow","column","dataIndex","render","record","textTransform","Overview","handleAnalyticsProductVisitCountFetch","handleAnalyticsCategoryVisitCountFetch","handleGetTotalUserCountFetch","getTotalUserCount","getProductVisitCount","getCategoryVisitCount","OrderOverView","rows","Dragger","Upload","TabPane","Tabs","openSuccessNotification","MediaLibrary","visible","setvisible","setmyImages","isModalOpenForImages","myImages","isModalOpenForThumbnail","setmyThumbnailImage","myThumbnailImage","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","imageListFromLibraryState","handleImageListFromLibraryFetch","handleDeleteImageFromLibraryFetch","localImageList","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","newImageList","filter","getImageList","imageListRes","handleUpload","formData","FormData","file","append","reqwest","processData","withCredentials","uploadProps","multiple","onRemove","filelist","newFileList","splice","beforeUpload","xflelist","handleAddToSelectedList","find","newselectedImages","handleUpdateSubmit","captoin","updateImageLibraryItemRes","positionInImageList","updatedItem","assign","updateImageList","openErrorNotification","getisUpdateSubmitButtonDisabled","top","onOk","onCancel","bodyStyle","okText","defaultActiveKey","tab","listType","FileImageOutlined","ArrowUpOutlined","lenght","CloseOutlined","CheckOutlined","DeleteOutlined","ImageItemMenu","EllipsisOutlined","onConfirm","cancelText","MetaTags","inputVisible","inputValue","editInputIndex","editInputValue","handleClose","removedTag","setTags","showInput","setState","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onBlur","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","preventDefault","PlusOutlined","React","Component","bnName","bnDescription","metaTitle","bnMetaTitle","metaDescription","bnMetaDescription","metaTags","bnMetaTags","displayOrder","AddNewCategory","addNewCategoryVisible","setAddNewCategoryVisible","categoryList","setcategoryList","categoryDetailData","addCategoryState","handleAddCategoryFetch","handleUpdateCategoryIconFetch","isparentCategoryChecked","setisparentcategoryChecked","selectedParentId","setselectedParentId","imageUrl","setImageUrl","loadingThumnail","setLoadingThumbnail","imageFile","setImagefile","bnTags","setBnTags","coverImageId","setCoverImageId","handleAttachImageToItemMultipleFetch","handleAttachImageToItemSingleFetch","handleDetachImageFromItemSingleFetch","handleSetImageAsThumbnailToItemFetch","mahImages","handleSetImageAsThumnail","handleDetachSingleImage","imageId","collection","thumbnailRes","imagesIds","trim","aboutToUpdatedImageIds","bn","addCategoryRes","resetForm","onSwitchChange","checked","handleCancel","onChangeSelect","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","setNewIcon","iconUrl","uploadButton","LoadingOutlined","destroyOnClose","okButtonProps","htmlType","defaultChecked","InfoCircleOutlined","showUploadList","newImages","handleImagesDelete","FileImageFilled","DataTable","speed","viewBox","foregroundColor","rx","ry","r","metadata","github","filename","Search","MyTable","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","handleDeleteCategory","deleteCategoryRes","newCategoryList","objectFit","align","EditOutlined","CategoryNewQuickEdit","withRouter","categoryState","handleCategoryListFetch","isSubCategory","productCountValue","categories","setCategories","enterButton","handleSearch","DataTableSkeleton","setisModalOpenForThumbnail","setisModalOpenForImages","bnData","bnFormData","get","err","i","setcategoryDetailData","CoolInput","categoryDetailState","handleCategoryDetailFetch","categoryProductsState","handleCategoryProductsFetch","useParams","categoryId","categoryEditVisible","setCategoryEditVisible","categoryDetail","setcategoryDetail","categoryDetailDataRes","getCategoryDetail","getCategoryProducts","row","imgs","columns","localIndex","columnNumber","getImagesInCollumn","CategoryNewEdit","avatar","paragraph","paddingTop","overflow","allowClear","ExclamationCircleOutlined","CheckableTag","Tag","Tags","setTagIds","setSelectedTags","selectedTags","setoptions","tagState","handleTagListFetch","searchValue","setsearchValue","selectedCategoryIds","selectedcategory","tagListRes","tagOptions","borderColor","onSearch","categoryNames","newOptions","nextSelectedTags","t","Brands","setBrandId","brandId","productDetailState","setSelectedBrandId","brandState","brandListRes","brandOptions","setBrands","onFocus","val","Categories","setcategoryIds","categoryOptions","setCategoryOptions","categoryListRes","checkable","checkedKeys","onSelect","selectedKeys","info","onCheck","checkedIds","treeData","defaultExpandAll","checkStrictly","bundlePrice","AddNewProduct","bundleList","productList","setBundleList","setProductList","productDetailData","updateProductState","handleProductDetailFetch","categoryids","tagIds","setPricing","setDateFeild","setTimeFeild","setDescription","setBNDescription","setMetaTags","setBnMetaTags","productIds","setProductIds","addProductState","handleAddProductFetch","getProductDetail","regular","offer","setPrice","variation","model","metaUnit","addProductRes","positionInAttribute","updateProductList","newProductList","isTrue","categoryIds","editor","ClassicEditor","onInit","getData","InputSmall","selectedOpions","setselectedOptions","isProductIdsfirstTime","selectItems","o","CartOverLayCartItem","productId","handleProductFetch","setProduct","setIsLoading","modifiedPrice","setModifiedPrice","selectedVariationId","setSelectedVariationId","getAndSetProduct","handleChangeQuantity","updateAttributeList","convertAttributeValuesToStringValue","attribute","attributeValue","pricingOptions","pricingItem","pricingOption","getPricingOptions","priceItem","getPriceByVariationId","tagId","handleAttributeChange","AddNewOrderSummary","flexDirection","AddNewOrderProductItem","SelectProducts","SelectedProductItems","setTagList","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","ProductBundleQuickEdit","TagList","tagList","productType","newTagList","AddNewProductBundle","CouponProducts","NewBrandDetail","productEditVisible","setProductEditVisible","ProductBundleEdit","AddNewBrand","brandList","setBrandList","updateBrandState","handleUpdateBrandFetch","visibleMedia","setvisibleMedia","addBrandRes","brandDetailData","brandEditVisible","setBrandEditVisible","brandDetailState","handleBrandDetailFetch","myGoddamnImages","setMyGoddamnImages","getBrandDetail","updateBrandRes","handleDeleteBrandFetch","handleDeleteBrand","deleteBrandRes","newBrandList","BrandQuickEdit","handlebrandListFetch","brands","setBrandDetailData","brandProductsState","handleBrandProductsFetch","brandDetailRes","getBrandProducts","BrandEdit","Complete","setAttributeList","attributeList","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","manupulatedOptions","suggestedOption","toUpperCase","Pricing","handleAddPricing","handleUpdatePricing","isPricingEditActive","setprice","stock","setStock","attributeListItems","attributeKey","handlePriceChange","handleStockChange","Attributes","minHeight","purchaseLimit","bnUnit","editpricingItem","setEditPricingItem","pricingTagActiveKey","setpricingTagActiveKey","seTisPricingEditActive","updatePricingList","animated","tabPosition","activeKey","handleEditPricing","newPricing","handleDeletePricing","textDecoration","handleUpdateProductFetch","updatedProductRes","handleDeleteProductFetch","handleUpdateOrderStatusFetch","handleDeleteProduct","deleteProductRes","handleUpdateOrderStatus","newStatus","inStock","updateOrderStatusRes","positionInTag","updateOrderList","StatusItemMenu","DownOutlined","ProductQuickEdit","productState","handleProductListFetch","setProducts","setProductDetailData","productDetailRes","ProductEdit","QuickEdit","tagEditVisible","setTagEditVisible","tagDetailData","updateTagState","handleUpdateCategoryFetch","updateTagRes","updateTagList","addTagState","handleAddTagFetch","addTagRes","TagQuickEdit","AddNewTag","setTagDetailData","tagDetailState","handleTagDetailFetch","tagProductsState","handleTagProductsFetch","tagDetailRes","getTagProducts","TagEdit","selecttedOptions","addCouponState","handleAddCouponStateFetch","couponDetailState","handleCouponDetailFetch","freeProductIds","freeProductList","setFreeProductList","OrderedProductsSelectProducts","OrderedProductsSelectedProductItems","CouponEdit","CouponQuickEdit","Couponlist","AddNewCoupon","max","zipCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","orderStatusFilterValue","setorderStatusFilterValue","getSorttingvalue","customers","setCustomers","AddNewCustomer","setCustomerDetailData","customerDetailState","handleCustomerDetailFetch","orderListState","handleOrderListFetch","customerDetailData","customerDetailDataRes","getCustomerDetail","getOrderList","CustomerEdit","handleDeletePageFetch","handleDeletePage","deletePageRes","pageList","setPageList","pageState","handlePagsListFetch","pages","setPages","ReactHtmlParser","Steps","Step","content","bnContent","AddNewPage","addPageState","handleAddPageFetch","setContent","setBnContent","handleAddPageSubmit","addOrderRes","updateCategoryState","EditableTagGroup","AttributeList","AddAttributeValues","setShowInvoice","showInvoice","orderDetailState","handleOrderDetailFetch","getOrderDetail","window","print","cellPadding","cellSpacing","bgcolor","fontFamily","lineHeight","verticalAlign","letterSpacing","colSpan","unitPrice","borderBottom","whiteSpace","setOrderList","orderList","updateOrderState","handleUpdateOrderFetch","addRegionRes","updateRegionList","OrderInvoice","newOrderstatus","orderState","deliveryRegionNameValue","setdeliveryRegionNameValue","statusValue","regions","setOrders","regionList","setRegionList","handleRegionListFetch","regionListOptions","setRegions","joiningDate","Status","newOrderList","DownloadOutlined","memo","ShopOutlined","setCustomerId","setSelectedCustomerData","customerData","productListState","productOptions","additionalInfo","steps","AddNewOrder","addOrderState","handleOrderFetch","selectedCustomerData","current","setCurrent","customerListState","handleDeliveryRegionFetch","deliveryRegionName","setDeliveryRegionName","setSelectedRegion","regionDeliveryCharge","setregionDeliveryCharge","isDeliveryChargeExists","cityName","deliveryRegionState","getAndSetShippingDeliveryCharge","selectedRegion","handleCheckoutSubmit","delivery","CustomersId","AddProducts","Group","flexWrap","deliveryRegionItem","handleDeviliveryRegionChange","ClockCircleOutlined","CaretRightOutlined","CaretLeftOutlined","summary","note","setOrderNotes","orderNotes","activeNote","orderDetailNotesState","handleOrderDetailNotesFetch","handleDeleteOrderNoteFetch","activeOrderNote","setActiveOrderNote","isOrderNoteEdit","setIsOrderNoteEdit","isInvoiceShow","setIsInvoiceShow","handleDeleteOrderNote","newOrderNoteList","OrderNoteEdit","OrderEdit","EyeOutlined","flex","minWidth","noteItem","getMonthNameByOrder","WEEEK","getWeekNameByOrder","getHourFormatter","DeliveryRegionReport","OrderOverviewReport","ThisWeekOrderReport","ThisMonthOrderReport","DateOrderReport","HourOrderReport","MonthOrderReport","YearOrderReport","ConfigOrderStatus","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","isLoadingUpdate","Set","SaveOutlined","updateComponentByAddingItem","componentId","Panel","Collapse","genExtra","updateComponentByDeleting","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","updateComponentState","handleUpdateComponentFetch","imageValue","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","manupulatedLocalComponentForTheReq","componentItems","imgItem","updatedItems","manupulatedUpdatedItems","manupulatedUpdatedItem","updateComponentRes","accordion","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","footer","themeList","setThemeList","addThemeState","handleAddthemeFetch","setselectedThemeTypeValue","setname","thumbnailFile","setThumbnailFile","addThemeRes","path","InboxOutlined","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminEmail","adminName","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","siteSettingsState","handlSiteSettingsFetch","getSiteSettings","addSiteInfoRes","invoiceTitle","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","InvoiceSettingsState","handlSiteInvoiceSettingsFetch","updateInvoiceRes","UpdateSiteSEO","newPassword","newPassword2","oneOf","newPass","ChangeAdminPassword","newPassRepeat","paddingRight","SiteInfo","handleUpdateSiteLogoAndIconFetch","iconimageUrl","setIconImageUrl","loadingIcon","setloadingIcon","appLogo","setAppLogo","loadingAppLogo","setloadingAppLogo","iconUploadButton","appIconUploadButton","AdminSiteInfo","onError","SiteSeo","SiteInfoInvoice","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","handleDeliveryChargeChange","updatedValue","handleAttributeDelete","AddNewRegion","addRegionState","handleRegionFetch","floor","random","handleAddDeliveryCharge","updateRegionState","handleUpdateRegionFetch","deliveryChargeListFromRegionDetail","chargeKey","handleDeleteRegioFetch","handleDeleteRegion","deleteRegionRes","newRegionList","regionState","SendCustomSMS","setText","setrecipient","tokenSeparators","SendOutlined","InfoCircleFilled","SMSConfiguaration","configureSMSStata","handleconfigureSMSFetch","Sms","ConfigureSTMP","getEmailConfigurationState","handleGetEmailConfigurationFetch","emailConfigurationState","handleEmailConfigurationFetch","isAuthenticated","setIsAuthenticated","configurationData","setConfigurationData","getEmailConfiguration","fromEmail","fromName","host","encryption","port","smtpUsername","smtpPassword","handleAuthenticatedChange","setVisible","autoEmailTemplate","handleAutoEmailTemplateFetch","setcustomer","admin","setadmin","getConfigurationAutoEmailTemplateRes","eventName","getCustomerAutoEmail","overflowY","ConfigureAutoEmail","getAutoEmailConfigurationState","handleGetAutoEmailConfigurationFetch","configureAutoEmailConfigurationState","handleAutoEmailConfigurationFetch","isnewCustomerAdmin","setnewCustomerAdmin","isnewCustomerCustomer","setnewCustomerCustomer","isorderAdmin","setorderAdmin","isorderStatusAdmin","setorderStatusAdmin","isorderCustomer","setorderCustomer","isorderStatusCustomer","setIsorderStatusCustomer","newcustomermodal","setnewcustomermodal","ordermodal","setordermodal","orderStatusmodal","setorderStatusmodal","autoEmailData","setAutoEmailData","getAutoEmailConfiguration","handleUpdateAutoEmail","newCustomer","user","orderStatus","updateAutoEmailRes","NewCustomerTemplate","OrderStatusTemplateAutoEmail","OrderTemplateAutoEmail","ComposeCustomEmail","sendCustomerEmailState","handleSendCustomEmailFetch","sethtml","InboxEmailDetails","setSelectedEmailId","getEmailDetailState","handleGetEmailListFetch","LeftOutlined","Inbox","getEmailListState","selectedEmailId","limitCount","substring","PlusCircleOutlined","NotificationList","AccessCheckbox","checkedList","setCheckedList","plainOptions","interminate","setInterminate","checkAll","setCheckAll","indeterminate","accessItem","span","saveCredentials","credentialsOperations","accesscheckedList","setAccessCheckedList","unshift","access","password2","passwordConfirmation","AddNewAdminRoles","deleteTagState","AddNewAdmin","AdminEdit","bnBody","bnPreparationTime","bnServingSize","bnCookingTime","setBody","setBnBody","setPostDetailData","postDetailData","categoryOne","tagsOne","AddNewPostCategory","DatePickerComponent","withTime","salary","designation","fatherName","motherName","NID","handleTimeChange","dateString","StaffQuickEdit","AddNewStaff","setCustomer","customerDetail","setCustomerDetail","StaffEdit","staff","AddNewExpense","ExpenseEdit","dealerArea","Areas","area","areas","registeredCustomerListState","handleRegisteredCustomerListFetch","getRegisteredOrderList","hasSider","exact","NewCategoryDetail","BrandList","NewProductDetail","ProductBundleList","ProductBundleDetail","CouponList","PostList","PostTagList","PostCategoryList","PostDetail","NewPostTagDetail","NewPostCategoryDetail","CouponDetail","NewTagDetail","OrderList","OrderDetail","DealerList","AreaList","AreaDetail","DealerDetail","StaffList","StaffDetail","ExpenseList","ExpenseDetail","CustomerDetail","PagesList","PageEdit","PageDetail","Delivery","ManageThemes","AdminList","AdminDetail","Email","handleAdminCredentCialsFetch","getCredenCials","actionShouldBlock","meta","async","blocking","actionFinished","utils","productPositionInCart","cart","newCartItem","isSelectedForCheckout","tempArrayWithOutOldProduct","productPositionInWishList","wishList","wishlist","ADD","queryPositionInQueryList","queryList","query","types","currentItem","oldQuery","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","redirectAfterLogin","cartReducer","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","pReducer","persistReducer","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f0bc7567.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\ninterface Props {\r\n  label?: string;\r\n  type?: string;\r\n  defaultValue?: string;\r\n  value?: string;\r\n  onChange?: any;\r\n  disabled?: boolean;\r\n  isError?: boolean;\r\n  errorString?: string;\r\n  name?: string;\r\n  addonBefore?: string;\r\n  required?: boolean;\r\n  placeHolder?: string;\r\n  min?: any;\r\n}\r\n\r\nconst Demo = ({\r\n  required,\r\n  addonBefore,\r\n  label,\r\n  type,\r\n  defaultValue,\r\n  value,\r\n  onChange,\r\n  disabled,\r\n  isError,\r\n  errorString,\r\n  name,\r\n  placeHolder,\r\n  min,\r\n}: Props) => {\r\n  return (\r\n    <>\r\n      {label && <h3 className='inputFieldLabel'>{label}</h3>}\r\n\r\n      <Form.Item\r\n        // hasFeedback={true}\r\n        validateStatus={isError ? 'error' : ''}\r\n        // hasFeedback validateStatus=\"success\"\r\n        help={errorString}\r\n        // rules={[{ required: true }]}\r\n      >\r\n        <Input\r\n          min={min}\r\n          required={required}\r\n          type={type}\r\n          addonBefore={addonBefore}\r\n          style={{\r\n            borderRadius: '0',\r\n          }}\r\n          name={name}\r\n          disabled={disabled}\r\n          value={value}\r\n          onChange={onChange}\r\n          className='inputclassName'\r\n          placeholder={placeHolder}\r\n        />\r\n      </Form.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","const isObjectEmpty = value => {\r\n  return !value || !Object.keys(value).length > 0;\r\n};\r\n\r\nconst manupulateURL = (url, urlOptions = {}) => {\r\n  if (isObjectEmpty(urlOptions)) return url;\r\n\r\n  const params = urlOptions.params || {};\r\n  const placeHolders = urlOptions.placeHolders || {};\r\n\r\n\r\n\r\n  return url\r\n    .split('/')\r\n    .map(currentValue => {\r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders) && !currentValue.includes('?')) {\r\n        console.log('currentValue',currentValue);\r\n        let actualPlaceholderValue = placeHolders[currentValue.replace(':', '')];\r\n        console.log('actualPlaceholderValue',actualPlaceholderValue);\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n      \r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders) && currentValue.includes('?')) {\r\n        let fuckValue = currentValue.split('?'); \r\n        if(fuckValue && fuckValue.length > 0){\r\n          fuckValue = fuckValue.map(item => {\r\n            return placeHolders[item.replace(':', '')] ? placeHolders[item.replace(':', '')] : item\r\n          })\r\n        }\r\n        console.log('fuckValue',fuckValue);\r\n        let actualPlaceholderValue = fuckValue.join('?');\r\n        console.log('actualPlaceholderValue',actualPlaceholderValue,'currentVAlue',currentValue);\r\n        console.log('placeHolders',placeHolders);\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n\r\n      if (currentValue.includes('?')) {\r\n        currentValue = currentValue\r\n          .split('&')\r\n          .map(currentValue => {\r\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\r\n            return currentValue.replace(param, params[param] || '');\r\n          })\r\n          .join('&');\r\n      }\r\n      return currentValue;\r\n    })\r\n    .join('/');\r\n};\r\n\r\nexport default manupulateURL;\r\n","import config from '../config.json';\r\nimport apiMap from '../apiMap.json';\r\nimport Converter from './converter.js';\r\n\r\n// import utils\r\nimport { manupulateURL } from './utils';\r\n\r\nlet converter = new Converter();\r\n\r\nclass Connector {\r\n  //TODO\r\n  constructor() {\r\n    this.options = {};\r\n  }\r\n\r\n  /**\r\n   * @method request sends request to server\r\n   * this function determines api url and method from config.json\r\n   * and sends request and converts recieved data to general format\r\n   * @param {String} item\r\n   * @param {String} format\r\n   * @param {Object} data optional\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async request(item, format = 'json', options = {}) {\r\n    let api = apiMap[config.server][item]; //api url & method\r\n\r\n    // configuring options for fetch request\r\n\r\n    this.options = {\r\n      ...this.options,\r\n      method: api.method,\r\n      credentials: 'include',\r\n      headers: new Headers({\r\n        ...(format === 'json' && {\r\n        'Content-Type': 'application/json',\r\n        }),\r\n        ...(options.headers && {\r\n          ...options.headers,\r\n        }),\r\n      }),\r\n\r\n      ...(format === 'json' ? {\r\n        body: api.method !== 'get' ? JSON.stringify(options.body) : null,\r\n      } : {\r\n          body: api.method !== 'get' ? options.body : null,\r\n        }),\r\n    };\r\n\r\n    //*replace variable parts in url with actual data if params exists |or| just return the url\r\n\r\n    const url = manupulateURL(api.url, options.urlOptions);\r\n    console.log('url',api.url)\r\n    console.log('urlOptions',this.options);\r\n    console.log('format',format);\r\n\r\n    // change the formate to text if the server is wooCommerce\r\n    if (config['server'] === 'wooCommerce') {\r\n      // format = 'text';\r\n    }\r\n\r\n    try {\r\n      let res = await fetch(config.baseURL + url, this.options);\r\n\r\n      if (res.status >= 200 && res.status < 300) {\r\n        let formattedData = await res['json'](); //await res.json(), res.text()\r\n        if (formattedData.status === 'error') {\r\n          throw formattedData.error;\r\n        }\r\n\r\n        let convertedData = await converter[item](formattedData); //convert recieved data to app general format\r\n        return convertedData;\r\n      } else {\r\n        let error = await res['json']();\r\n\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n\r\n      throw err;\r\n      //TODO: breakdown errors\r\n    }\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import config from '../config.json';\r\nimport dataMap from '../dataMap.json';\r\nimport moment from 'moment';\r\n\r\nclass Converter {\r\n  /**\r\n   * @public\r\n   * @method categoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categoryList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const formatedData =\r\n      data.length > 0 &&\r\n      data.map((category) => {\r\n        return {\r\n          ...category,\r\n          id: category._id || '',\r\n          key: category._id || '',\r\n          name: category.name && category.name,\r\n          description: category.description && category.description,\r\n          productCount: category.productCount || 0,\r\n          parent: category.parent || '',\r\n          cover: category.cover\r\n            ? `${config['baseURL']}${category.cover.thumbnail}`\r\n            : null,\r\n          icon: category.icon ? `${config['baseURL']}${category.icon}` : null,\r\n          image:\r\n            (data.image &&\r\n              data.image.length > 0 &&\r\n              data.image.map((img) => {\r\n                return {\r\n                  id: img._id || '',\r\n                  name: img.name && img.name,\r\n                  cover: `${config['baseURL']}${img.medium}`,\r\n                  added: img.added,\r\n                  title: img.title,\r\n                  labels: img.labels,\r\n                  alt: img.alt,\r\n                  caption: img.caption,\r\n                };\r\n              })) ||\r\n            [],\r\n          subCount:\r\n            category.subCategory.length === 1\r\n              ? category.subCategory[0] && category.subCategory[0].name\r\n                ? category.subCategory.length\r\n                : 0\r\n              : category.subCategory.length,\r\n          ...(category.subCategory &&\r\n            category.subCategory.length > 0 &&\r\n            category.subCategory[0] &&\r\n            category.subCategory[0]['name'] && {\r\n              children: category.subCategory.map((subCat) => {\r\n                return {\r\n                  id: subCat._id || '',\r\n                  key: subCat._id,\r\n                  name: subCat.name && subCat.name,\r\n                  description: subCat.description && subCat.description,\r\n                  cover: subCat.cover\r\n                    ? `${config['baseURL']}${subCat.cover.thumbnail}`\r\n                    : '',\r\n                };\r\n              }),\r\n            }),\r\n        };\r\n      });\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postCategoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryList(resData) {\r\n    const data = resData.data && resData.data ? resData.data : [];\r\n\r\n    const formatedData =\r\n      data.length > 0 &&\r\n      data.map((category) => {\r\n        return {\r\n          id: category._id || '',\r\n          key: category._id || '',\r\n          name: category.name && category.name,\r\n          description: category.description && category.description,\r\n          cover: category.cover\r\n            ? `${config['baseURL']}${category.cover.thumbnail}`\r\n            : null,\r\n          icon: category.icon ? `${config['baseURL']}${category.icon}` : null,\r\n        };\r\n      });\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postCategoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryDetail(resData) {\r\n    const data = resData;\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        name: data.name && data.name,\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.cover ? data.cover.original && data.cover.original : ''\r\n          }`,\r\n          id: data.cover ? data.cover._id : '',\r\n        },\r\n        url: data.url,\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAllNotification convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAllNotification(resData) {\r\n    const data = resData.data || [];\r\n\r\n    let notiData = [];\r\n    if (data && data.length > 0) {\r\n      data.forEach((not) => {\r\n        if (!not.read) {\r\n          notiData.push(not);\r\n        }\r\n      });\r\n    }\r\n\r\n    return notiData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAllNotificationPage convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAllNotificationPage(resData) {\r\n    const data = resData.data || [];\r\n    const formatedData =\r\n      data.length > 0 &&\r\n      data.map((noti) => {\r\n        return {\r\n          id: noti._id || '',\r\n          key: noti._id || '',\r\n          heading: noti.heading && noti.heading,\r\n          text: noti.text && noti.text,\r\n          type: noti.type,\r\n          link: noti.link || '',\r\n          added: noti.added || '',\r\n          read: noti.read,\r\n        };\r\n      });\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categorySelectist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categorySelectist(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const formatedData =\r\n      data.length > 0 &&\r\n      data.map((category) => {\r\n        return {\r\n          id: category._id || '',\r\n          key: category._id || '',\r\n          title: category.name && category.name,\r\n          ...(category.subCategory &&\r\n            category.subCategory.length > 0 &&\r\n            category.subCategory[0] &&\r\n            category.subCategory[0]['name'] && {\r\n              children: category.subCategory.map((subCat) => {\r\n                return {\r\n                  id: subCat._id || '',\r\n                  key: subCat._id,\r\n                  title: subCat.name && subCat.name,\r\n                  cover: subCat.cover\r\n                    ? `${config['baseURL']}${\r\n                        subCat.cover.thumbnail ? subCat.cover.thumbnail : ''\r\n                      }`\r\n                    : '',\r\n                };\r\n              }),\r\n            }),\r\n        };\r\n      });\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categorySelectist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postSelectCategoryList(resData) {\r\n    const data = resData.data;\r\n\r\n    const formatedData =\r\n      data.length > 0 &&\r\n      data.map((category) => {\r\n        return {\r\n          id: category._id || '',\r\n          key: category._id || '',\r\n          title: category.name && category.name,\r\n        };\r\n      });\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categoryProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categoryProducts(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          description: product.description && product.description,\r\n          cover: `${config['baseURL']}${\r\n            (product.cover && product.cover['thumbnail']) || ''\r\n          }`,\r\n          regularPrice: product.price && product.price['regular'],\r\n          offerPrice: product.price && product.price['offer'],\r\n          url: product.url,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n          venue: product.venue,\r\n          brand: product.brand,\r\n          tags: product.tags,\r\n          price:\r\n            parseInt(product.price['offer']) >\r\n            parseInt(product.price['regular'])\r\n              ? product.price['offer']\r\n              : product.price['regular'],\r\n          available:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['available']\r\n              : 0,\r\n          minimum:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['minimum']\r\n              : 0,\r\n        };\r\n      });\r\n\r\n    // return {\r\n    // \tdata: convertedData,\r\n    // \tisNext: isNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getCart(resData) {\r\n    const cartItems = resData.items || [];\r\n    const convertedData =\r\n      cartItems.length > 0 &&\r\n      cartItems.map((cartItem) => {\r\n        return {\r\n          id: cartItem._id || '',\r\n          name: cartItem.name && cartItem.name,\r\n          cover: `${config['baseURL']}${cartItem.cover.medium}`,\r\n          regularPrice: cartItem.price && cartItem.price['regular'],\r\n          offerPrice: cartItem.price && cartItem.price['offer'],\r\n          quantity: cartItem.quantity,\r\n          url: cartItem.url,\r\n          cartKey: cartItem.cartKey,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addtoCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addtoCart(resData) {\r\n    let data = false;\r\n\r\n    if (resData['inserted']) {\r\n      data = {\r\n        id: resData['inserted']._id || '',\r\n        name: resData['inserted'].name && resData['inserted'].name,\r\n        cover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\r\n        regularPrice:\r\n          resData['inserted'].price && resData['inserted'].price['regular'],\r\n        offerPrice:\r\n          resData['inserted'].price && resData['inserted'].price['offer'],\r\n        quantity: resData['inserted'].quantity,\r\n        url: resData['inserted'].url,\r\n        cartKey: resData['inserted'].cartKey,\r\n      };\r\n    }\r\n\r\n    const convertedData = data;\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method removeFromCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async removeFromCart(resData) {\r\n    let convertedData = false;\r\n    if (resData) {\r\n      convertedData = true;\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateCartItem convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateCartItem(resData) {\r\n    let convertedData = false;\r\n    if (resData['updated']) {\r\n      convertedData = {\r\n        quantity: resData.updated['quantity'],\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method clearCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async clearCart(data) {\r\n    if (data && data['msg']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getWishlist(resData) {\r\n    // const cartItems = resData.items || [];\r\n    const convertedData = resData;\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addWishlist(resData) {\r\n    if (resData && resData['msg'] === 'wishlist updated') {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method removeFromWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async removeFromWishlist(resData) {\r\n    if (resData && resData['msg'] === 'wishlist updated') {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method removeAllWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async removeAllWishlist(resData) {\r\n    if (resData && resData['msg'] === 'wishlist updated') {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method tagProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async tagProducts(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          description: product.description && product.description,\r\n          cover: `${config['baseURL']}${\r\n            (product.cover && product.cover['thumbnail']) || ''\r\n          }`,\r\n          regularPrice: product.price && product.price['regular'],\r\n          offerPrice: product.price && product.price['offer'],\r\n          url: product.url,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n          venue: product.venue,\r\n          brand: product.brand,\r\n          tags: product.tags,\r\n          price:\r\n            parseInt(product.price['offer']) >\r\n            parseInt(product.price['regular'])\r\n              ? product.price['offer']\r\n              : product.price['regular'],\r\n          avalable:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['available']\r\n              : 0,\r\n          minimum:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['minimum']\r\n              : 0,\r\n        };\r\n      });\r\n\r\n    // return {\r\n    // \tdata: convertedData,\r\n    // \tisNext: isNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method brandProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async brandProducts(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          description: product.description && product.description,\r\n          cover: `${config['baseURL']}${\r\n            (product.cover && product.cover['thumbnail']) || ''\r\n          }`,\r\n          regularPrice: product.price && product.price['regular'],\r\n          offerPrice: product.price && product.price['offer'],\r\n          url: product.url,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n          venue: product.venue,\r\n          brand: product.brand,\r\n          tags: product.tags,\r\n          price:\r\n            parseInt(product.price['offer']) >\r\n            parseInt(product.price['regular'])\r\n              ? product.price['offer']\r\n              : product.price['regular'],\r\n          avalable:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['available']\r\n              : 0,\r\n          minimum:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['minimum']\r\n              : 0,\r\n        };\r\n      });\r\n\r\n    // return {\r\n    // \tdata: convertedData,\r\n    // \tisNext: isNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method productSearch convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async productSearch(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    const convertedData =\r\n      (data.length > 0 &&\r\n        data.map((product) => {\r\n          return {\r\n            id: product._id || '',\r\n            name: product.name && product.name,\r\n            description: product.description && product.description,\r\n            cover: `${config['baseURL']}${product.cover.thumbnail}`,\r\n            regularPrice: product.price && product.price['regular'],\r\n            offerPrice: product.price && product.price['offer'],\r\n            url: product.url,\r\n            unit: product.unit,\r\n            date: product.date,\r\n            venue: product.venue,\r\n            pricing: product.pricing,\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    return {\r\n      data: convertedData,\r\n      isNext,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method productList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async productList(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          ...product,\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          description: product.description && product.description,\r\n          cover: product.cover\r\n            ? `${config['baseURL']}${\r\n                (product.cover && product.cover['thumbnail']) || ''\r\n              }`\r\n            : product.cover,\r\n          regularPrice: product.price && product.price['regular'],\r\n          offerPrice: product.price && product.price['offer'],\r\n          url: product.url,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          image:\r\n            (data.image &&\r\n              data.image.length > 0 &&\r\n              data.image.map((img) => {\r\n                return {\r\n                  id: img._id || '',\r\n                  name: img.name && img.name,\r\n                  cover: `${config['baseURL']}${img.original}`,\r\n                  added: img.added,\r\n                  title: img.title,\r\n                  labels: img.labels,\r\n                  alt: img.alt,\r\n                  caption: img.caption,\r\n                };\r\n              })) ||\r\n            [],\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n          venue: product.venue,\r\n          brand: product.brand,\r\n          tags: product.tags,\r\n          price:\r\n            parseInt(product.price['offer']) >\r\n            parseInt(product.price['regular'])\r\n              ? product.price['offer']\r\n              : product.price['regular'],\r\n          available:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['available']\r\n              : 0,\r\n          minimum:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['minimum']\r\n              : 0,\r\n        };\r\n      });\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postList(resData) {\r\n    const data = resData.data;\r\n    // const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((post) => {\r\n        return {\r\n          ...post,\r\n          id: post._id || '',\r\n          name: post.name && post.name,\r\n          body: post.body && post.body,\r\n          preparationTime: post.preparationTime && post.preparationTime,\r\n          servingSize: post.servingSize && post.servingSize,\r\n          cookingTime: post.cookingTime && post.cookingTime,\r\n          cover: `${config['baseURL']}${\r\n            (post.cover && post.cover['thumbnail']) || ''\r\n          }`,\r\n          url: post.url,\r\n          category: post.category,\r\n          tags: post.tags,\r\n        };\r\n      });\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method tagPostList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async tagPostList(resData) {\r\n    const data = resData.data;\r\n    // const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((post) => {\r\n        return {\r\n          ...post,\r\n          id: post._id || '',\r\n          name: post.name && post.name,\r\n          body: post.body && post.body,\r\n          preparationTime: post.preparationTime && post.preparationTime,\r\n          servingSize: post.servingSize && post.servingSize,\r\n          cookingTime: post.cookingTime && post.cookingTime,\r\n          cover: `${config['baseURL']}${\r\n            (post.cover && post.cover['thumbnail']) || ''\r\n          }`,\r\n          url: post.url,\r\n          category: post.category,\r\n          tags: post.tags,\r\n        };\r\n      });\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categoryPostList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categoryPostList(resData) {\r\n    const data = resData.data;\r\n    // const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((post) => {\r\n        return {\r\n          ...post,\r\n          id: post._id || '',\r\n          name: post.name && post.name,\r\n          body: post.body && post.body,\r\n          preparationTime: post.preparationTime && post.preparationTime,\r\n          servingSize: post.servingSize && post.servingSize,\r\n          cookingTime: post.cookingTime && post.cookingTime,\r\n          cover: `${config['baseURL']}${\r\n            (post.cover && post.cover['thumbnail']) || ''\r\n          }`,\r\n          url: post.url,\r\n          category: post.category,\r\n          tags: post.tags,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postDetail(resData) {\r\n    const data = resData;\r\n    // const isNext = resData.page.next;\r\n\r\n    console.log('upconvertedpostDetail', resData);\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        name: data.name && data.name,\r\n        body: data.body && data.body,\r\n        preparationTime: data.preparationTime && data.preparationTime,\r\n        servingSize: data.servingSize && data.servingSize,\r\n        cookingTime: data.cookingTime && data.cookingTime,\r\n        cover: `${config['baseURL']}${\r\n          (data.cover && data.cover['medium']) || ''\r\n        }`,\r\n        url: data.url,\r\n        requiredProducts:\r\n          data.requiredProducts && data.requiredProducts.length > 0\r\n            ? data.requiredProducts.map((item) => {\r\n                return {\r\n                  ...item,\r\n                  id: item.id,\r\n                  ...(item.detail &&\r\n                    Object.keys(item.detail).length > 0 && {\r\n                      ...item.detail,\r\n                      cover: {\r\n                        cover: `${config['baseURL']}${\r\n                          item.detail.cover\r\n                            ? item.detail.cover.original &&\r\n                              item.detail.cover.original\r\n                            : ''\r\n                        }`,\r\n                        id: item.detail.cover ? item.detail.cover._id : '',\r\n                      },\r\n                      price:\r\n                        parseInt(item.detail.price['offer']) >\r\n                        parseInt(item.detail.price['regular'])\r\n                          ? item.detail.price['offer']\r\n                          : item.detail.price['regular'],\r\n                      image:\r\n                        (item.detail.image &&\r\n                          item.detail.image.length > 0 &&\r\n                          item.detail.image.map((img) => {\r\n                            return {\r\n                              id: img._id || '',\r\n                              name: img.name && img.name,\r\n                              cover: `${config['baseURL']}${img.original}`,\r\n                              added: img.added,\r\n                              title: img.title,\r\n                              labels: img.labels,\r\n                              alt: img.alt,\r\n                              caption: img.caption,\r\n                            };\r\n                          })) ||\r\n                        [],\r\n                    }),\r\n                };\r\n              })\r\n            : [],\r\n        category2:\r\n          (data.category &&\r\n            data.category.length > 0 &&\r\n            data.category.map((cat) => {\r\n              return {\r\n                id: cat._id,\r\n                name: cat.name,\r\n              };\r\n            })) ||\r\n          data.category,\r\n        category:\r\n          (data.category &&\r\n            data.category.length > 0 &&\r\n            data.category.map((cat) => {\r\n              return cat._id;\r\n            })) ||\r\n          data.category,\r\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postDetailEdit convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postDetailEdit(resData) {\r\n    const data = resData;\r\n    // const isNext = resData.page.next;\r\n\r\n    console.log('upconvertedpostDetail', resData);\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        name: data.name && data.name,\r\n        body: data.body && data.body,\r\n        preparationTime: data.preparationTime && data.preparationTime,\r\n        servingSize: data.servingSize && data.servingSize,\r\n        cookingTime: data.cookingTime && data.cookingTime,\r\n        cover: `${config['baseURL']}${\r\n          (data.cover && data.cover['medium']) || ''\r\n        }`,\r\n        url: data.url,\r\n        requiredProducts:\r\n          data.requiredProducts && data.requiredProducts.length > 0\r\n            ? data.requiredProducts.map((item) => {\r\n                return {\r\n                  ...item,\r\n                  id: item.id,\r\n                  ...(item.detail &&\r\n                    Object.keys(item.detail).length > 0 && {\r\n                      ...item.detail,\r\n                      cover: {\r\n                        cover: `${config['baseURL']}${\r\n                          item.detail.cover\r\n                            ? item.detail.cover.original &&\r\n                              item.detail.cover.original\r\n                            : ''\r\n                        }`,\r\n                        id: item.detail.cover ? item.detail.cover._id : '',\r\n                      },\r\n                      price:\r\n                        parseInt(item.detail.price['offer']) >\r\n                        parseInt(item.detail.price['regular'])\r\n                          ? item.detail.price['offer']\r\n                          : item.detail.price['regular'],\r\n                      image:\r\n                        (item.detail.image &&\r\n                          item.detail.image.length > 0 &&\r\n                          item.detail.image.map((img) => {\r\n                            return {\r\n                              id: img._id || '',\r\n                              name: img.name && img.name,\r\n                              cover: `${config['baseURL']}${img.original}`,\r\n                              added: img.added,\r\n                              title: img.title,\r\n                              labels: img.labels,\r\n                              alt: img.alt,\r\n                              caption: img.caption,\r\n                            };\r\n                          })) ||\r\n                        [],\r\n                    }),\r\n                };\r\n              })\r\n            : [],\r\n        category: data.category,\r\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method bundleList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async bundleList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          ...product,\r\n          anotherPrice: product.price,\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          description: product.description && product.description,\r\n          cover: product.cover\r\n            ? `${config['baseURL']}${\r\n                (product.cover && product.cover['thumbnail']) || ''\r\n              }`\r\n            : product.cover,\r\n          regularPrice: product.price && product.price['regular'],\r\n          offerPrice: product.price && product.price['offer'],\r\n          url: product.url,\r\n          startDate: product.startDate,\r\n          endDate: product.endDate,\r\n          actualPrice: product.actualPrice,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n          venue: product.venue,\r\n          brand: product.brand,\r\n          tags: product.tags,\r\n          product: product['product'],\r\n          productCount: product['product'].length,\r\n          price:\r\n            parseInt(product.price['offer']) >\r\n            parseInt(product.price['regular'])\r\n              ? product.price['offer']\r\n              : product.price['regular'],\r\n        };\r\n      });\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method bundleDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async bundleDetail(resData) {\r\n    const data = resData || {};\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        id: data._id || '',\r\n        name: data.name && data.name,\r\n        description: data.description && data.description,\r\n        cover: data.cover\r\n          ? `${config['baseURL']}${\r\n              (data.cover && data.cover['thumbnail']) || ''\r\n            }`\r\n          : '',\r\n        regularPrice: data.price && data.price['regular'],\r\n        offerPrice: data.price && data.price['offer'],\r\n        url: data.url,\r\n        startDate: data.startDate,\r\n        endDate: data.endDate,\r\n        actualPrice: data.actualPrice,\r\n        unit: data.unit,\r\n        category: data.category,\r\n        pricing: data.pricing,\r\n        date: data.date,\r\n        time: data.time,\r\n        venue: data.venue,\r\n        brand: data.brand,\r\n        tags: data.tags,\r\n        products: data.product,\r\n        productCount: data['product'].length,\r\n        price:\r\n          parseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n            ? data.price['offer']\r\n            : data.price['regular'],\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      };\r\n    } else return data;\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAnalyticsPageVisits convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsPageVisits(resData) {\r\n    const data = resData && resData.data ? resData.data : [];\r\n\r\n    console.log('getAnalyticsPageVisits', resData);\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((item) => {\r\n        return {\r\n          id: item._id || '',\r\n          visit: item.count || '',\r\n          name:\r\n            item['detail'] && item['detail'][0] && item['detail'][0]['name'],\r\n          url: item['detail'] && item['detail'][0] && item['detail'][0]['url'],\r\n          itemId:\r\n            item['detail'] && item['detail'][0] && item['detail'][0]['_id'],\r\n        };\r\n      });\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAnalyticsPageVisitCount convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsPageVisitCount(resData) {\r\n    return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAnalyticsDemographicVisits convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsDemographicVisits(resData) {\r\n    const data = resData && resData.data ? resData.data : [];\r\n    if (data) {\r\n      return data;\r\n    } else return [];\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAnalyticsOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsOrders(resData) {\r\n    const data = resData.data || [];\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAnalyticsTotalUserCount convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsTotalUserCount(resData) {\r\n    return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method customerDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async customerDetail(resData) {\r\n    if (resData) {\r\n      return {\r\n        ...resData,\r\n        id: resData._id || '',\r\n        key: resData._id || '',\r\n        firstName: resData.firstName || '',\r\n        lastName: resData.lastName || '',\r\n        name: resData.firstName + ' ' + resData.lastName,\r\n        country: resData.country || '',\r\n        city: resData.city || '',\r\n        email: resData.email || '',\r\n        phone: resData.phone || '',\r\n        address1: resData.address1 || '',\r\n        address2: resData.address2 || '',\r\n        created: resData.created || '',\r\n      };\r\n    } else return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method couponList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async couponList(resData) {\r\n    const data = resData || [];\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          ...data,\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          code: product.code,\r\n          cover: product.cover\r\n            ? `${config['baseURL']}${\r\n                (product.cover && product.cover['thumbnail']) || ''\r\n              }`\r\n            : product.cover,\r\n          minimumOrder: product.minimumOrder,\r\n          maximumOrder: product.maximumOrder,\r\n          offerPrice: product.price && product.price['offer'],\r\n          freeProducts: product.freeProducts,\r\n          orderedProductsCount:\r\n            product.orderedProducts && product.orderedProducts.length,\r\n          freeProductsCount:\r\n            product.freeProducts && product.freeProducts.length,\r\n          amountType: product.amountType,\r\n          amount: product.amount,\r\n          freeDelivery: product.freeDelivery,\r\n          startDate: product.startDate,\r\n          endDate: product.endDate,\r\n          maxUsePerUser: product.maxUsePerUser,\r\n          actualPrice: product.actualPrice,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n        };\r\n      });\r\n\r\n    console.log('convertedCouponData', convertedData);\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method tagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async tagList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((tag) => {\r\n        return {\r\n          ...tag,\r\n          id: tag._id || '',\r\n          key: tag._id || '',\r\n          name: tag.name && tag.name,\r\n          description: tag.description && tag.description,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getSetEmailList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSetEmailList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((email) => {\r\n        return {\r\n          ...email,\r\n          id: email._id || '',\r\n          key: email._id || '',\r\n          recipient: email.recipient,\r\n          subject: email.subject,\r\n          html: email.html,\r\n          text: email.text,\r\n          time: email.time,\r\n          event: email.event,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postTagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postTagList(resData) {\r\n    const data = resData.data;\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((tag) => {\r\n        return {\r\n          id: tag._id || '',\r\n          key: tag._id || '',\r\n          name: tag.name && tag.name,\r\n          description: tag.description && tag.description,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postTagDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postTagDetail(resData) {\r\n    const data = resData;\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        key: data._id || '',\r\n        name: data.name && data.name,\r\n        description: data.description && data.description,\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n\t\r\n   * @method dealerAreaDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerAreaDetail(resData) {\r\n    const data = resData;\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        key: data._id || '',\r\n        name: data.name && data.name,\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method brandList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async brandList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((brand) => {\r\n        return {\r\n          id: brand._id || '',\r\n          key: brand._id || '',\r\n          name: brand.name && brand.name,\r\n          description: brand.description && brand.description,\r\n          cover: `${config['baseURL']}${\r\n            brand.cover ? brand.cover.thumbnail : ''\r\n          }`,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method setImageAsThumbnailToItem convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async setImageAsThumbnailToItem(resData) {\r\n    if (resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteAdmin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteAdmin(resData) {\r\n    if (resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method markAllNotificationAsRead convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async markAllNotificationAsRead(resData) {\r\n    if (resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  success;\r\n\r\n  /**\r\n   * @public\r\n   * @method configureEmailSTMP convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async configureEmailSTMP(resData) {\r\n    if (resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getEmailConfiguration convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getEmailConfiguration(resData) {\r\n    console.log('resGetEmail', resData);\r\n    if (resData && Object.keys(resData).length > 0) {\r\n      return {\r\n        ...resData,\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method sendCustomEmail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async sendCustomEmail(resData) {\r\n    if (resData && resData.msg) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateSiteLogoAndIcon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateSiteLogoAndIcon(resData) {\r\n    if (resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateStock convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateStock(resData) {\r\n    if (resData.succes) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method brandDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async brandDetail(resData) {\r\n    const data = Object.keys(resData).length > 0 ? resData : null;\r\n    if (data) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        key: data._id || '',\r\n        name: data.name && data.name,\r\n        description: data.description && data.description,\r\n        url: data.url && data.url,\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.cover ? data.cover.original && data.cover.original : ''\r\n          }`,\r\n          id: data.cover ? data.cover._id : '',\r\n        },\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.thumbnail}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method tagDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async tagDetail(resData) {\r\n    const data = Object.keys(resData).length > 0 ? resData : null;\r\n    if (data) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        key: data._id || '',\r\n        name: data.name && data.name,\r\n        url: data.url && data.url,\r\n        description: data.description && data.description,\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method customerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async customerList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((customer) => {\r\n        return {\r\n          ...customer,\r\n          id: customer._id || '',\r\n          key: customer._id || '',\r\n          firstName: customer.firstName || '',\r\n          lastName: customer.lastName || '',\r\n          name: customer.firstName + ' ' + customer.lastName,\r\n          dealerName:\r\n            customer.dealer && Object.keys(customer.dealer).length > 0\r\n              ? customer['dealer'].firstName + ' ' + customer['dealer'].lastName\r\n              : 'None',\r\n          country: customer.country || '',\r\n          city: customer.city || '',\r\n          email: customer.email || '',\r\n          phone: customer.phone || '',\r\n          address1: customer.address1 || '',\r\n          address2: customer.address2 || '',\r\n          created: customer.added || '',\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method staffList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async staffList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((customer) => {\r\n        return {\r\n          ...customer,\r\n          id: customer._id || '',\r\n          key: customer._id || '',\r\n          firstName: customer.firstName || '',\r\n          lastName: customer.lastName || '',\r\n          name: customer.firstName + ' ' + customer.lastName,\r\n          country: customer.country || '',\r\n          city: customer.city || '',\r\n          email: customer.email || '',\r\n          phone: customer.phone || '',\r\n          address: customer.address || '',\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerRegisteredCustomerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerRegisteredCustomerList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((customer) => {\r\n        return {\r\n          ...customer,\r\n          id: customer._id || '',\r\n          key: customer._id || '',\r\n          firstName: customer.firstName || '',\r\n          lastName: customer.lastName || '',\r\n          name: customer.firstName + ' ' + customer.lastName,\r\n          dealerName:\r\n            customer.dealer && Object.keys(customer.dealer).length > 0\r\n              ? customer['dealer'].firstName + ' ' + customer['dealer'].lastName\r\n              : 'None',\r\n          country: customer.country || '',\r\n          city: customer.city || '',\r\n          email: customer.email || '',\r\n          phone: customer.phone || '',\r\n          address1: customer.address1 || '',\r\n          address2: customer.address2 || '',\r\n          created: customer.added || '',\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((customer) => {\r\n        return {\r\n          ...customer,\r\n          id: customer._id || '',\r\n          key: customer._id || '',\r\n          code: customer.code || '',\r\n          commission: customer.commission || '',\r\n          depositMoney: customer.depositMoney || '',\r\n          name: customer.firstName + ' ' + customer.lastName,\r\n          country: customer.country || '',\r\n          city: customer.city || '',\r\n          email: customer.email || '',\r\n          phone: customer.phone || '',\r\n          address1: customer.address1 || '',\r\n          address2: customer.address2 || '',\r\n          created: customer.added || '',\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerListByArea convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerListByArea(resData) {\r\n    const data = resData || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((customer) => {\r\n        return {\r\n          ...customer,\r\n          id: customer._id || '',\r\n          key: customer._id || '',\r\n          code: customer.code || '',\r\n          commission: customer.commission || '',\r\n          depositMoney: customer.depositMoney || '',\r\n          name: customer.firstName + ' ' + customer.lastName,\r\n          country: customer.country || '',\r\n          city: customer.city || '',\r\n          email: customer.email || '',\r\n          phone: customer.phone || '',\r\n          address1: customer.address1 || '',\r\n          address2: customer.address2 || '',\r\n          created: customer.added || '',\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerDetail(resData) {\r\n    if (resData) {\r\n      return {\r\n        ...resData,\r\n        id: resData._id || '',\r\n        key: resData._id || '',\r\n        code: resData.code || '',\r\n        commission: resData.commission || '',\r\n        depositMoney: resData.depositMoney || '',\r\n        name: resData.firstName + ' ' + resData.lastName,\r\n        country: resData.country || '',\r\n        city: resData.city || '',\r\n        email: resData.email || '',\r\n        phone: resData.phone || '',\r\n        address1: resData.address1 || '',\r\n        address2: resData.address2 || '',\r\n        created: resData.added || '',\r\n      };\r\n    } else return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method pageList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async pageList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((page) => {\r\n        return {\r\n          ...page,\r\n          id: page._id || '',\r\n          key: page._id || '',\r\n          name: page.name && page.name,\r\n          description: page.description && page.description,\r\n          cover: `${config['baseURL']}${\r\n            page.cover ? page.cover.thumbnail : ''\r\n          }`,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method themeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async themeList(resData) {\r\n    const data = resData || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((theme) => {\r\n        return {\r\n          id: theme._id || '',\r\n          key: theme._id || '',\r\n          name: theme.name || '',\r\n          added: theme.added || '',\r\n          thumbnail: `${config['baseURL']}${\r\n            theme.thumbnail ? theme.thumbnail : ''\r\n          }`,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method componentList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async componentList(resData) {\r\n    const components = resData.components || {};\r\n\r\n    if (components && components.length > 0) {\r\n      const convertedData =\r\n        components.length > 0 &&\r\n        components.map((component) => {\r\n          return {\r\n            id: component._id || '',\r\n            key: component._id || '',\r\n            name: component.name || '',\r\n            items:\r\n              component.items.length > 0\r\n                ? component.items.map((item) => {\r\n                    return {\r\n                      ...item,\r\n                      image:\r\n                        item.image.length > 0\r\n                          ? item.image.map((img) => {\r\n                              return {\r\n                                cover: `${config['baseURL']}${\r\n                                  img.thumbnail ? img.thumbnail : ''\r\n                                }`,\r\n                                id: img._id,\r\n                                name: img.name && img.name,\r\n                                added: img.added,\r\n                                title: img.title,\r\n                                labels: img.labels,\r\n                                alt: img.alt,\r\n                                caption: img.caption,\r\n                              };\r\n                            })\r\n                          : [],\r\n                    };\r\n                  })\r\n                : [],\r\n          };\r\n        });\r\n\r\n      return convertedData;\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method regionList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async regionList(data) {\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((region) => {\r\n        return {\r\n          id: region._id || '',\r\n          key: region._id || '',\r\n          name: region.name || '',\r\n          pickUpLocation: region.pickUpLocation || '',\r\n          country: region.country || '',\r\n          countryCode: region.countryCode || '',\r\n          countryName: region.countryName || '',\r\n          city: region.city || '',\r\n          time: region.time || '',\r\n          charge: region.charge || {},\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method attributeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async attributeList(data) {\r\n    const convertedData = Object.keys(data).length > 0 && data;\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async ImageListFromLibrary(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((image) => {\r\n        return {\r\n          id: image._id || '',\r\n          name: image.name && image.name,\r\n          cover: `${config['baseURL']}${image.thumbnail}`,\r\n          added: image.added,\r\n          title: image.title,\r\n          labels: image.labels,\r\n          alt: image.alt,\r\n          caption: image.caption,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method countryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async countryList(resData) {\r\n    const data = resData || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((country) => {\r\n        return {\r\n          id: country._id || '',\r\n          name: country.name && country.name,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getDeliveryRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async getDeliveryRegion(data) {\r\n    const convertedData = data;\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method cityList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async cityList(resData) {\r\n    const data = resData || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((city) => {\r\n        return {\r\n          id: city._id || '',\r\n          name: city.name && city.name,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method forAnalytics convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async forAnalytics(resData) {\r\n    return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method productDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async productDetail(data) {\r\n    const convertedData =\r\n      (Object.keys(data).length > 0 && {\r\n        ...data,\r\n        id: data._id || data.id || '',\r\n        name: data.name || '',\r\n        description: data.description.replace(/<[^>]+>/g, '') || '',\r\n        regularPrice: data.price && data.price['regular'],\r\n        offerPrice: data.price && data.price['offer'],\r\n        url: data.url,\r\n        availableStock: data.availableStock,\r\n        minimumStock: data.minimumStock,\r\n        unit: data.unit,\r\n        date: data.date,\r\n        venue: data.venue,\r\n        brand:\r\n          data.brand && Object.key(data.brand).length > 0\r\n            ? {\r\n                id: data.brand.id,\r\n                name: data.brand.name,\r\n              }\r\n            : {},\r\n        price:\r\n          parseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n            ? data.price['offer']\r\n            : data.price['regular'],\r\n        pricing: data.pricing,\r\n        category:\r\n          (data.category &&\r\n            data.category.length > 0 &&\r\n            data.category.map((cat) => {\r\n              return {\r\n                id: cat._id,\r\n                name: cat.name,\r\n              };\r\n            })) ||\r\n          data.category,\r\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.cover ? data.cover.original && data.cover.original : ''\r\n          }`,\r\n          id: data.cover ? data.cover._id : '',\r\n        },\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n        available:\r\n          data.pricing && data.pricing.length > 0\r\n            ? data.pricing[0]['stock'] && data.pricing[0]['stock']['available']\r\n            : 0,\r\n        minimum:\r\n          data.pricing && data.pricing.length > 0\r\n            ? data.pricing[0]['stock'] && data.pricing[0]['stock']['minimum']\r\n            : 0,\r\n      }) ||\r\n      {};\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method couponDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async couponDetail(data) {\r\n    const convertedData =\r\n      (Object.keys(data).length > 0 && {\r\n        ...data,\r\n        id: data._id || '',\r\n        name: data.name && data.name,\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.cover ? data.cover.original && data.cover.original : ''\r\n          }`,\r\n          id: data.cover ? data.cover._id : '',\r\n        },\r\n        code: data.code,\r\n        minimumOrder: data.minimumOrder,\r\n        maximumOrder: data.maximumOrder,\r\n        freeProducts: data.freeProducts || [],\r\n        orderedProducts:\r\n          data.orderedProducts && data.orderedProducts.length > 0\r\n            ? data.orderedProducts.map((item) => {\r\n                console.log('fuckingOrderProduct', item);\r\n                return {\r\n                  ...item,\r\n                  id: item.id,\r\n                  ...(item.detail &&\r\n                    Object.keys(item.detail).length > 0 && {\r\n                      ...item.detail,\r\n                      cover: {\r\n                        cover: `${config['baseURL']}${\r\n                          item.detail.cover\r\n                            ? item.detail.cover.original &&\r\n                              item.detail.cover.original\r\n                            : ''\r\n                        }`,\r\n                        id: item.detail.cover ? item.detail.cover._id : '',\r\n                      },\r\n                      price:\r\n                        parseInt(item.detail.price['offer']) >\r\n                        parseInt(item.detail.price['regular'])\r\n                          ? item.detail.price['offer']\r\n                          : item.detail.price['regular'],\r\n                    }),\r\n                };\r\n              })\r\n            : [],\r\n        freeProductsCount: data.freeProducts && data.orderedProducts.length,\r\n        amountType: data.amountType,\r\n        amount: data.amount,\r\n        freeDelivery: data.freeDelivery,\r\n        startDate: data.startDate,\r\n        endDate: data.endDate,\r\n        maxUsePerUser: data.maxUsePerUser,\r\n        actualPrice: data.actualPrice,\r\n        unit: data.unit,\r\n        category: data.category,\r\n        pricing: data.pricing,\r\n        date: data.date,\r\n        time: data.time,\r\n        venue: data.venue,\r\n        brand: data.brand,\r\n        tags: data.tags,\r\n      }) ||\r\n      {};\r\n\r\n    console.log('fuckingOrderProduct', convertedData);\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method productDetailById convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async productDetailById(data) {\r\n    const convertedData =\r\n      (Object.keys(data).length > 0 && {\r\n        ...data,\r\n        id: data._id || data.id || '',\r\n        name: data.name || '',\r\n        description: data.description.replace(/<[^>]+>/g, '') || '',\r\n        regularPrice: data.price && data.price['regular'],\r\n        offerPrice: data.price && data.price['offer'],\r\n        url: data.url,\r\n        unit: data.unit,\r\n        date: data.date,\r\n        venue: data.venue,\r\n        pricing: data.pricing,\r\n        price:\r\n          parseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n            ? data.price['offer']\r\n            : data.price['regular'],\r\n        category:\r\n          (data.category &&\r\n            data.category.length > 0 &&\r\n            data.category.map((cat) => {\r\n              return {\r\n                id: cat._id,\r\n                name: cat.name,\r\n                cover: `${config['baseURL']}${\r\n                  cat.cover ? cat.cover.original && cat.cover.original : ''\r\n                }`,\r\n              };\r\n            })) ||\r\n          data.category,\r\n        brand:\r\n          data.brand && Object.keys(data.brand).length > 0\r\n            ? {\r\n                id: data.brand._id,\r\n                name: data.brand.name,\r\n                cover: `${config['baseURL']}${\r\n                  data.brand.cover\r\n                    ? data.brand.cover.original && data.brand.cover.original\r\n                    : ''\r\n                }`,\r\n              }\r\n            : data.brand,\r\n        primaryCategory:\r\n          data.primaryCategory && Object.keys(data.primaryCategory).length > 0\r\n            ? {\r\n                id: data.primaryCategory._id,\r\n                name: data.primaryCategory.name,\r\n                cover: `${config['baseURL']}${\r\n                  data.primaryCategory.cover\r\n                    ? data.primaryCategory.cover.original &&\r\n                      data.primaryCategory.cover.original\r\n                    : ''\r\n                }`,\r\n              }\r\n            : data.primaryCategory,\r\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n        availableStock: data.availableStock,\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.cover ? data.cover.original && data.cover.original : ''\r\n          }`,\r\n          id: data.cover ? data.cover._id : '',\r\n        },\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      }) ||\r\n      {};\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateProduct(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        id: data.updated._id || data.updated.id || '',\r\n        name: data.updated.name || '',\r\n        description: data.updated.description.replace(/<[^>]+>/g, '') || '',\r\n        regularPrice: data.updated.price && data.updated.price['regular'],\r\n        offerPrice: data.updated.price && data.updated.price['offer'],\r\n        url: data.updated.url,\r\n        availableStock: data.updated.availableStock,\r\n        minimumStock: data.updated.minimumStock,\r\n        unit: data.updated.unit,\r\n        date: data.updated.date,\r\n        venue: data.updated.venue,\r\n        brand:\r\n          data.updated.brand && Object.key(data.updated.brand).length > 0\r\n            ? {\r\n                id: data.updated.brand.id,\r\n                name: data.updated.brand.name,\r\n              }\r\n            : {},\r\n        price:\r\n          parseInt(data.updated.price['offer']) >\r\n          parseInt(data.updated.price['regular'])\r\n            ? data.updated.price['offer']\r\n            : data.updated.price['regular'],\r\n        pricing: data.updated.pricing,\r\n        category:\r\n          (data.updated.category &&\r\n            data.updated.category.length > 0 &&\r\n            data.updated.category.map((cat) => {\r\n              return {\r\n                id: cat._id,\r\n                name: cat.name,\r\n              };\r\n            })) ||\r\n          data.updated.category,\r\n        tags:\r\n          data.updated.tags && data.updated.tags.length > 0\r\n            ? data.updated.tags\r\n            : [],\r\n\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.updated.cover\r\n              ? data.updated.cover.original && data.updated.cover.original\r\n              : ''\r\n          }`,\r\n          id: data.updated.cover ? data.updated.cover._id : '',\r\n        },\r\n        image:\r\n          (data.updated.image &&\r\n            data.updated.image.length > 0 &&\r\n            data.updated.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updatePost convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updatePost(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated && data.updated[0]) {\r\n      console.log('dataUpdate', data.updated);\r\n      return {\r\n        ...data.updated[0],\r\n        id: data.updated[0]._id || data.updated[0].id || '',\r\n        name: data.updated[0].name || '',\r\n        url: data.updated[0].url,\r\n        category: data.updated[0].category,\r\n        tags:\r\n          data.updated[0].tags && data.updated[0].tags.length > 0\r\n            ? data.updated[0].tags\r\n            : [],\r\n\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.updated[0].cover\r\n              ? data.updated[0].cover.original && data.updated[0].cover.original\r\n              : ''\r\n          }`,\r\n          id: data.updated[0].cover ? data.updated[0].cover._id : '',\r\n        },\r\n        image:\r\n          (data.updated[0].image &&\r\n            data.updated[0].image.length > 0 &&\r\n            data.updated[0].image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateComponent(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateCoupon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateCoupon(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categoryUpdateIcon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categoryUpdateIcon(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateImageFromLibrary(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateTag(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateDealerArea convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateDealerArea(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateDealer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateDealer(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updatePage convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updatePage(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateBrand(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateBundle convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateBundle(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateCategory(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateCustomer(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateStaff convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateStaff(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && Object.keys(data).length > 0) {\r\n      return {\r\n        ...convertedData,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateRegion(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteProduct(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteExpense convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteExpense(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postCategoryDelete convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryDelete(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deletePost convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deletePost(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteBundle convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteBundle(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteCoupon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteCoupon(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method pageDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async pageDetail(data) {\r\n    const convertedData = data;\r\n    if (convertedData && Object.keys(convertedData).length > 0) {\r\n      return {\r\n        ...convertedData,\r\n        id: convertedData._id,\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            convertedData.cover\r\n              ? convertedData.cover.original && convertedData.cover.original\r\n              : ''\r\n          }`,\r\n          id: convertedData.cover ? convertedData.cover._id : '',\r\n        },\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateOrderStatus convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateOrderStatus(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        ...data,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postUpdateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postUpdateTag(data) {\r\n    const convertedData = data;\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n\r\n        name: data.updated.name && data.updated.name,\r\n        description: data.updated.description && data.updated.description,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateExpense convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateExpense(data) {\r\n    const convertedData = data;\r\n    if (data && Object.keys(convertedData).length > 0) {\r\n      return {\r\n        ...data,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteImageFromLibrary(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deletePage convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deletePage(data) {\r\n    const convertedData = data;\r\n    if (data && data.msg) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addTag(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addExpense convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addExpense(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addStaff convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addStaff(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method staffDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async staffDetail(data) {\r\n    const convertedData = data;\r\n    if (convertedData && Object.keys(convertedData).length > 0) {\r\n      return {\r\n        ...convertedData,\r\n        id: convertedData._id || '',\r\n        key: convertedData._id || '',\r\n        firstName: convertedData.firstName || '',\r\n        lastName: convertedData.lastName || '',\r\n        name: convertedData.firstName + ' ' + convertedData.lastName,\r\n        country: convertedData.country || '',\r\n        city: convertedData.city || '',\r\n        email: convertedData.email || '',\r\n        phone: convertedData.phone || '',\r\n        address: convertedData.address || '',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method expenseDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async expenseDetail(data) {\r\n    const convertedData = data;\r\n    if (convertedData && Object.keys(convertedData).length > 0) {\r\n      return {\r\n        ...convertedData,\r\n        id: convertedData._id || '',\r\n        key: convertedData._id || '',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addDealerArea convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addDealerArea(data) {\r\n    const convertedData = data;\r\n    if (data && data[0]) {\r\n      return {\r\n        ...data[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postAddCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postAddCategory(data) {\r\n    const convertedData = data;\r\n    if (data && data[0]) {\r\n      return {\r\n        ...data[0],\r\n        cover: data[0].cover\r\n          ? `${config['baseURL']}${\r\n              data[0].cover ? data[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postCategoryUpdate convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryUpdate(data) {\r\n    const convertedData = data;\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data['updated'],\r\n        cover: data['updated'].cover\r\n          ? `${config['baseURL']}${\r\n              data['updated'].cover ? data['updated'].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerAreaList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerAreaList(resData) {\r\n    const data = resData || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((tag) => {\r\n        return {\r\n          ...tag,\r\n          id: tag._id || '',\r\n          key: tag._id || '',\r\n          name: tag.name && tag.name,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method expenseList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async expenseList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    console.log('expenseList', data);\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((tag) => {\r\n        return {\r\n          ...tag,\r\n          id: tag._id || '',\r\n          key: tag._id || '',\r\n          topic: tag.topic && tag.topic,\r\n          amount: tag.amount && tag.amount,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n  tag;\r\n  /**\r\n   * @public\r\n   * @method addDealer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addDealer(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addCategory(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n        cover: data.inserted[0].cover\r\n          ? `${config['baseURL']}${\r\n              data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postAddCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postAddCategory(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addProduct(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n        cover: data.inserted[0].cover\r\n          ? `${config['baseURL']}${\r\n              data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addPost convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addPost(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n        cover: data.inserted[0].cover\r\n          ? `${config['baseURL']}${\r\n              data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addOrderNote convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addOrderNote(data) {\r\n    const convertedData = data;\r\n    if (data && data[0]) {\r\n      return {\r\n        ...data[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateOrderNote convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async updateOrderNote(data) {\r\n    const convertedData = data;\r\n    if (data && data['updated']) {\r\n      return {\r\n        ...data['updated'],\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateAdminRole convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async updateAdminRole(data) {\r\n    const convertedData = data;\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postAddTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async postAddTag(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addOrder(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getOrderNote convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async getOrderNote(data) {\r\n    const convertedData = data;\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addTheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addTheme(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postDeleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postDeleteTag(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteOrderNote convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteOrderNote(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addPage convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addPage(data) {\r\n    const convertedData = data;\r\n    if (data && data[0]) {\r\n      return {\r\n        ...data[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addBrand(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n        cover: data.inserted[0].cover\r\n          ? `${config['baseURL']}${\r\n              data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n  /**\r\n   * @public\r\n   * @method addComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addComponent(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addCustomer(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addRegion(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteTag(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteDealerArea convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteDealerArea(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteDealer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteDealer(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method logout convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async logout(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method activeTheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async activeTheme(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deletetheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deletetheme(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteCustomer(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteStaff convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteStaff(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteComponent(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteBrand(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteCategory(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteRegion(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method siteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async siteSettings(resData) {\r\n    const convertedData = resData;\r\n\r\n    if (resData.data) {\r\n      return {\r\n        ...resData.data,\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getSiteSEO convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSiteSEO(resData) {\r\n    const convertedData = resData;\r\n\r\n    if (resData.data) {\r\n      return {\r\n        ...resData.data,\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAdminCredential convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAdminCredential(resData) {\r\n    const convertedData = resData;\r\n\r\n    if (resData.data) {\r\n      return {\r\n        ...resData.data,\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateSiteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateSiteSettings(data) {\r\n    if (data['updated']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateSiteSEO convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateSiteSEO(data) {\r\n    if (data['updated']) {\r\n      return {\r\n        ...data['updated'],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateAdminCredential convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateAdminCredential(data) {\r\n    if (data && Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method adminUpdatePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async adminUpdatePassword(data) {\r\n    if (data['updated']) {\r\n      return {\r\n        ...data['updated'],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateInvoiceSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateInvoiceSettings(data) {\r\n    if (data['updated']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method invoiceSettingsDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async invoiceSettingsDetail(resData) {\r\n    const convertedData = resData;\r\n\r\n    if (resData.data) {\r\n      return {\r\n        ...resData.data,\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categoryDetail(data) {\r\n    const convertedData = {\r\n      ...data,\r\n      id: data.id || data._id || '',\r\n      name: data.name && data.name,\r\n      description: data.description && data.description,\r\n      productCount: data.productCount || 0,\r\n      icon: data.icon ? `${config['baseURL']}${data.icon}` : '',\r\n      type:\r\n        data.subCategory.length > 0 &&\r\n        data.subCategory[0] &&\r\n        data.subCategory[0]['name']\r\n          ? 'Top category'\r\n          : 'Child category',\r\n      url: data.url || '',\r\n      subCategory:\r\n        data.subCategory.length > 0 &&\r\n        data.subCategory[0] &&\r\n        data.subCategory[0]['name']\r\n          ? data.subCategory.map((subCat) => {\r\n              return {\r\n                id: subCat._id || '',\r\n                name: subCat.name && subCat.name,\r\n                description: subCat.description && subCat.description,\r\n                cover: subCat.cover\r\n                  ? `${config['baseURL']}${subCat.cover.medium}`\r\n                  : '',\r\n              };\r\n            })\r\n          : [],\r\n      cover: {\r\n        cover: `${config['baseURL']}${\r\n          data.cover ? data.cover.original && data.cover.original : ''\r\n        }`,\r\n        id: data.cover ? data.cover._id : '',\r\n      },\r\n      image:\r\n        (data.image &&\r\n          data.image.length > 0 &&\r\n          data.image.map((img) => {\r\n            return {\r\n              id: img._id || '',\r\n              name: img.name && img.name,\r\n              cover: `${config['baseURL']}${img.medium}`,\r\n              added: img.added,\r\n              title: img.title,\r\n              labels: img.labels,\r\n              alt: img.alt,\r\n              caption: img.caption,\r\n            };\r\n          })) ||\r\n        [],\r\n    };\r\n\r\n    return convertedData;\r\n  }\r\n  /**\r\n   * @public\r\n   * @method createOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async createOrder(data) {\r\n    //map props\r\n\r\n    const formatedData = {\r\n      ...data,\r\n    };\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method adminRoleRegister convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async adminRoleRegister(data) {\r\n    //map props\r\n\r\n    if (data && data.length > 0) {\r\n      return {\r\n        status: 'ok',\r\n        ...data[0],\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method adminList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async adminList(resData) {\r\n    //map props\r\n    return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method adminDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async adminDetail(resData) {\r\n    //map props\r\n\r\n    return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method orderDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async orderDetail(data) {\r\n    //map props\r\n    const order = data.order || false;\r\n    if (order) {\r\n      return {\r\n        ...order,\r\n        id: order.id || order._id,\r\n        shippingAddress: order.shippingAddress,\r\n        name:\r\n          order.shippingAddress['firstName'] +\r\n          ' ' +\r\n          order.shippingAddress['lastName'],\r\n        country: order.shippingAddress['country'],\r\n        city: order.shippingAddress['city'],\r\n        address: order.shippingAddress['address'],\r\n        phone: order.shippingAddress['phone'],\r\n        email: order.shippingAddress['email'],\r\n        shortCode: order.shortCode || '',\r\n        status:\r\n          typeof order.status === 'string'\r\n            ? order.status\r\n            : order.status && Object.keys(order.status).length > 0\r\n            ? order.status['name']\r\n            : 'pending',\r\n        total: order.totalPrice,\r\n        deliveryCharge: order.totalPrice,\r\n        deliveryRegion: order.deliveryRegion,\r\n        deliveryName: order.deliveryRegion && order.deliveryRegion['name'],\r\n        deliveryPickUpLocation:\r\n          order.deliveryRegion && order.deliveryRegion['pickUpLocation'],\r\n        deliveryCountryName:\r\n          order.deliveryRegion && order.deliveryRegion['countryName'],\r\n        products:\r\n          order.products && order.products.length > 0\r\n            ? order.products.map((product) => {\r\n                return {\r\n                  ...product,\r\n                  id: product._id || '',\r\n                  name: product.name && product.name,\r\n                  description: product.description && product.description,\r\n                  cover: `${config['baseURL']}${\r\n                    (product.cover && product.cover['thumbnail']) || ''\r\n                  }`,\r\n                  regularPrice: product.price && product.price['regular'],\r\n                  offerPrice: product.price && product.price['offer'],\r\n                  url: product.url,\r\n                  unit: product.unit,\r\n                  category: product.category,\r\n                  pricing: product.pricing,\r\n                  date: product.date,\r\n                  time: product.time,\r\n                  venue: product.venue,\r\n                  brand: product.brand,\r\n                  tags: product.tags,\r\n                  price: product.price,\r\n                  available:\r\n                    product.pricing && product.pricing.length > 0\r\n                      ? product.pricing[0]['stock'] &&\r\n                        product.pricing[0]['stock']['available']\r\n                      : 0,\r\n                  minimum:\r\n                    product.pricing && product.pricing.length > 0\r\n                      ? product.pricing[0]['stock'] &&\r\n                        product.pricing[0]['stock']['minimum']\r\n                      : 0,\r\n                };\r\n              })\r\n            : [],\r\n        date_created: order.added,\r\n        paymentMethod: order['payment']['paymentMethod'],\r\n        paymentStatus: order['payment']['status'],\r\n        payment: order['payment'],\r\n        customerId: order['customer'] ? order['customer']['_id'] : '',\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method signup convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async signup(data) {\r\n    return {\r\n      status: 'ok',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method signin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async signin(data) {\r\n    if (data['msg']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method login convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async login(data) {\r\n    if (data['msg']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addImageToLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addImageToLibrary(data) {\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getCurrentUserData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getCurrentCustomerData(data) {\r\n    //map props\r\n    // let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\r\n\r\n    const formatedData = {\r\n      ...data,\r\n    };\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAutoEmailConfiguration convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAutoEmailConfiguration(data) {\r\n    const formatedData = {\r\n      ...data,\r\n    };\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getEmailDetails convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getEmailDetails(data) {\r\n    const formatedData = {\r\n      ...data,\r\n    };\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method currentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async currentCustomerData(data) {\r\n    //map props\r\n    // let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\r\n\r\n    const convertedData = {\r\n      ...data,\r\n    };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateCurrentCustomerData(data) {\r\n    //map props\r\n    // let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\r\n\r\n    const convertedData = {\r\n      status: 'ok',\r\n    };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method changePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async changePassword(data) {\r\n    if (data['success']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method configureAutoEmail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async configureAutoEmail(data) {\r\n    if (data['success']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getCurrentUserOrders(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      (data.length > 0 &&\r\n        data.map((item) => {\r\n          return {\r\n            ...item,\r\n            id: item.id || item._id,\r\n            billingAddress: item.billingAddress,\r\n            status: item.status,\r\n            total: item.totalPrice,\r\n            products: item.products,\r\n            date_created: item.date,\r\n            paymentMethod: item['payment']['paymentMethod'],\r\n            customerId: item.customer['_id'],\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    convertedData = {\r\n      data: convertedData,\r\n      isNext,\r\n    };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method orderList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async orderList(resData) {\r\n    const data = resData.data || [];\r\n    // const isNext = resData.page.next;\r\n\r\n    console.log('orderListDAta', data);\r\n\r\n    let convertedData =\r\n      (data.length > 0 &&\r\n        data.map((item) => {\r\n          return {\r\n            ...item,\r\n            id: item.id || item._id,\r\n            shippingAddress: item.billingAddress,\r\n            shortCode: item.shortCode || '',\r\n            name:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['firstName'] &&\r\n              item.shippingAddress['firstName'] + ' ' + item.shippingAddress &&\r\n              item.shippingAddress['lastName'] &&\r\n              item.shippingAddress['lastName'],\r\n            country:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['country'] &&\r\n              item.shippingAddress['country'],\r\n            city:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['city'] &&\r\n              item.shippingAddress['city'],\r\n            status:\r\n              typeof item.status === 'string'\r\n                ? item.status\r\n                : item.status && Object.keys(item.status).length > 0\r\n                ? item.status['name']\r\n                : 'pending',\r\n            total: item.totalPrice,\r\n            products: item.products,\r\n            date_created: item.added,\r\n            paymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n            paymentStatus: item['payment'] && item['payment']['status'],\r\n            payment: item['payment'],\r\n            customerId: item['customer'] ? item['customer']['_id'] : '',\r\n            deliveryName:\r\n              item.deliveryRegion && Object.keys(item.deliveryRegion).length > 0\r\n                ? `${item.deliveryRegion['name']}`\r\n                : '',\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerOrderList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerOrderList(resData) {\r\n    const data = resData.data || [];\r\n    // const isNext = resData.page.next;\r\n\r\n    console.log('orderListDAta', data);\r\n\r\n    let convertedData =\r\n      (data.length > 0 &&\r\n        data.map((item) => {\r\n          return {\r\n            ...item,\r\n            id: item.id || item._id,\r\n            shippingAddress: item.billingAddress,\r\n            shortCode: item.shortCode || '',\r\n            name:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['firstName'] &&\r\n              item.shippingAddress['firstName'] + ' ' + item.shippingAddress &&\r\n              item.shippingAddress['lastName'] &&\r\n              item.shippingAddress['lastName'],\r\n            country:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['country'] &&\r\n              item.shippingAddress['country'],\r\n            city:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['city'] &&\r\n              item.shippingAddress['city'],\r\n            status:\r\n              typeof item.status === 'string'\r\n                ? item.status\r\n                : item.status && Object.keys(item.status).length > 0\r\n                ? item.status['name']\r\n                : 'pending',\r\n            total: item.totalPrice,\r\n            products: item.products,\r\n            date_created: item.added,\r\n            paymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n            paymentStatus: item['payment'] && item['payment']['status'],\r\n            payment: item['payment'],\r\n            customerId: item['customer'] ? item['customer']['_id'] : '',\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method orderListForCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async orderListForCustomer(resData) {\r\n    const data = resData.data || [];\r\n    // const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      (data.length > 0 &&\r\n        data.map((item) => {\r\n          return {\r\n            id: item.id || item._id,\r\n            shortCode: item.shortCode || '',\r\n            shippingAddress: item.billingAddress,\r\n            status:\r\n              typeof item.status === 'string'\r\n                ? item.status\r\n                : item.status && Object.keys(item.status).length > 0\r\n                ? item.status['name']\r\n                : 'pending',\r\n            name:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['firstName'] &&\r\n              item.shippingAddress['firstName'] + ' ' + item.shippingAddress &&\r\n              item.shippingAddress['lastName'] &&\r\n              item.shippingAddress['lastName'],\r\n            country:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['country'] &&\r\n              item.shippingAddress['country'],\r\n            city:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['city'] &&\r\n              item.shippingAddress['city'],\r\n            total: item.totalPrice,\r\n            products: item.products,\r\n            date_created: item.added,\r\n            paymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n            paymentStatus: item['payment'] && item['payment']['status'],\r\n            payment: item['payment'],\r\n            customerId: item['customer'] ? item['customer']['_id'] : '',\r\n            deliveryName:\r\n              item.deliveryRegion && Object.keys(item.deliveryRegion).length > 0\r\n                ? `${item.deliveryRegion['name']}`\r\n                : '',\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method currentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async currentUserOrders(data) {\r\n    //map props\r\n    let generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\r\n\r\n    const convertedData =\r\n      (data.length > 0 &&\r\n        data.map((item) => {\r\n          return {\r\n            ...generalFormat,\r\n            id: item.id,\r\n            status: item.status,\r\n            total: item.total,\r\n            line_items: item.line_items,\r\n            date_created: item.date_created,\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method payment convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async payment(data) {\r\n    const paymentItems = data.items;\r\n    if (!paymentItems.length > 0) {\r\n      return paymentItems;\r\n    }\r\n\r\n    const items = paymentItems.map((item) => {\r\n      return {\r\n        name: item.name || '',\r\n        number: item.text || '',\r\n      };\r\n    });\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method welcome convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async welcome(data) {\r\n    return {\r\n      text: data.text,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method logo convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async logo(data) {\r\n    const src =\r\n      data.image && data.image.length > 0\r\n        ? `${config['baseURL']}${data.image[0]['original']}`\r\n        : '';\r\n    return {\r\n      src,\r\n      target: data.target,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method hotline convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async hotline(data) {\r\n    return {\r\n      text: data.text,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method navLinks convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async navLinks(data) {\r\n    const navLinkItems = data.items;\r\n    if (!navLinkItems.length > 0) {\r\n      return [];\r\n    }\r\n\r\n    const items = navLinkItems.map((item) => {\r\n      return {\r\n        text: item.name || item.text,\r\n        target: item.target,\r\n      };\r\n    });\r\n\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method slider convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async slider(data) {\r\n    const sliderItems = data.items;\r\n    if (!sliderItems.length > 0) {\r\n      return sliderItems;\r\n    }\r\n\r\n    const images = sliderItems.map((item) => {\r\n      return {\r\n        target: item.target,\r\n        src: `${config['baseURL']}${item.image[0]['medium']}`,\r\n      };\r\n    });\r\n    return images;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method sliderRight convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async sliderRight(data) {\r\n    const sliderRightItems = data.items;\r\n    if (!sliderRightItems.length > 0) {\r\n      return sliderRightItems;\r\n    }\r\n\r\n    const images = sliderRightItems.map((item) => {\r\n      return {\r\n        target: item.target,\r\n        src: `${config['baseURL']}${item.image[0]['medium']}`,\r\n      };\r\n    });\r\n    return images;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method address convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async address(data) {\r\n    return {\r\n      name: data.name,\r\n      text: data.text,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method Links convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async Links(data) {\r\n    const servicesItems = data.items;\r\n    if (!servicesItems.length > 0) {\r\n      return servicesItems;\r\n    }\r\n\r\n    const items = servicesItems.map((item) => {\r\n      return {\r\n        target: item.target,\r\n        name: item.name || item.text,\r\n      };\r\n    });\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method Account convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async Account(data) {\r\n    const accountItems = data.items;\r\n    if (!accountItems.length > 0) {\r\n      return accountItems;\r\n    }\r\n\r\n    const items = accountItems.map((item) => {\r\n      return {\r\n        target: item.target,\r\n        name: item.name || item.text,\r\n      };\r\n    });\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method 'About Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async 'About Us'(data) {\r\n    const aboutUsItems = data.items;\r\n    if (!aboutUsItems.length > 0) {\r\n      return aboutUsItems;\r\n    }\r\n\r\n    const items = aboutUsItems.map((item) => {\r\n      return {\r\n        target: item.target,\r\n        name: item.name || item.text,\r\n      };\r\n    });\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method 'getTotalUserCount Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getTotalUserCount(data) {\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addCoupon Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addCoupon(data) {\r\n    if (data && data[0]) {\r\n      return {\r\n        status: 'ok',\r\n        ...data[0],\r\n        cover: data[0].cover\r\n          ? `${config['baseURL']}${\r\n              data[0].cover ? data[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addBundle Us convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addBundle(data) {\r\n    if (data && data[0]) {\r\n      return {\r\n        status: 'ok',\r\n        ...data[0],\r\n        price:\r\n          parseInt(data[0].price['offer']) > parseInt(data[0].price['regular'])\r\n            ? data[0].price['offer']\r\n            : data[0].price['regular'],\r\n        cover: data[0].cover\r\n          ? `${config['baseURL']}${\r\n              data[0].cover ? data[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n}\r\n\r\nexport default Converter;\r\n","import { useEffect, useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype Tdependecies = any[] | [];\r\ntype TItem = string;\r\ntype IFormat = string | undefined;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n          done: true,\r\n        },\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useFetch = (\r\n  dependencies: Tdependecies = [],\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  options?: any,\r\n  format?: IFormat\r\n): IState => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_INIT' });\r\n      try {\r\n        // @ts-ignore\r\n        let data = await connector.request(item, format, options);\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, dependencies);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import { useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype TItem = string;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n        },\r\n        done: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useHandleFetch = (\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  format?: string\r\n): [IState, (values: any) => void] => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  const handlePost = async (options: any) => {\r\n    dispatch({ type: 'FETCH_INIT' });\r\n\r\n    try {\r\n      // @ts-ignore\r\n      let data = await connector.request(item, format || 'json', options);\r\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n      return initialData;\r\n    }\r\n  };\r\n\r\n  return [state, handlePost];\r\n};\r\n\r\nexport default useHandleFetch;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tusername: Yup.string()\r\n\t\t.label('Username')\r\n\t\t.required('Username is required')\r\n\t\t.min(3, 'Username must have at least 3 characters'),\r\n\r\n\tpassword: Yup.string().label('Password').required('Password is required'),\r\n});\r\n\r\nconst initialValues = {\r\n\tusername: '',\r\n\tpassword: '',\r\n};\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst QuickEdit = ({ }: Props) => {\r\n\tconst [loginState, handleLoginFetch] = useHandleFetch({}, 'login');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleLoginFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tusername: values.username,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.username || !values.password || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmaxWidth: '400px',\r\n\t\t\t\t\t\t\tmargin: '20px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Username'\r\n\t\t\t\t\t\t\t\tvalue={values.username}\r\n\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\tisError={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('username');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import Login from './Login';\r\nexport default Login;\r\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\r\n    const reducer = reducerMap[ action.type ];\r\n    return reducer ? reducer( state, action ) : state;\r\n};\r\n","import isomorphicFetch from 'isomorphic-fetch';\r\n\r\nexport default (url, method, body) => {\r\n\tconst options = {\r\n\t\tmethod,\r\n\t\theaders: requestHeaders(),\r\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\r\n\t};\r\n\r\n\treturn isomorphicFetch(url, options).then(res =>\r\n\t\tparseStatus(res.status, res.json())\r\n\t);\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (status >= 200 && status < 300) {\r\n\t\t\tres.then(response => resolve(response));\r\n\t\t} else {\r\n\t\t\tres.then(response => reject({ status, response }));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction requestHeaders() {\r\n\treturn {\r\n\t\tAccept: 'application/json',\r\n\t\t'Content-Type': 'application/json'\r\n\t};\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst globalState = createReducer([])({\r\n  [types.SAVE_ROLES]: (state, action) => {\r\n    const roles = action.payload;\r\n    return [...roles];\r\n  },\r\n});\r\n\r\nexport default globalState; ","export const SAVE_ROLES = \"session/SAVE_ROLES\";\r\n","import * as types from \"./types\";\r\n\r\nexport const saveRoles = (roles) => ({\r\n    type: types.SAVE_ROLES,\r\n    payload: roles\r\n});\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as glboalOperations from \"./operations\";\r\n\r\nexport {\r\n    glboalOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import getDeliveryChargeTotal from \"./getDeliveryChargeTotal\";\r\n\r\nconst allRoles = [\r\n    'getCatalogue', 'postCatalogue', \r\n    'getDelivery', 'postDelivery', \r\n    'getOrder', 'postOrder',\r\n    'getBlog', 'postBlog', \r\n    'getPage', 'postPage',\r\n    'analytics',\r\n    'accounts',\r\n    'superAdmin'\r\n  ];\r\n\r\n\r\n  \r\n  const isAccess = (role, adminRoles) => {\r\n      if(!adminRoles || !adminRoles[0]) return false; \r\n      if(adminRoles.includes('superAdmin')) return true; \r\n      return adminRoles.includes(role); \r\n  }; \r\n\r\n  \r\n\r\nexport {\r\n    getDeliveryChargeTotal,\r\n    isAccess\r\n}","import React, { useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  Switch,\r\n  withRouter,\r\n} from 'react-router-dom';\r\nimport { Layout, Menu, Upload, message } from 'antd';\r\n\r\nimport {\r\n  PieChartOutlined,\r\n  FileOutlined,\r\n  TeamOutlined,\r\n  TagOutlined,\r\n  BranchesOutlined,\r\n  GoldOutlined,\r\n  FilterOutlined,\r\n  TagsOutlined,\r\n  CarOutlined,\r\n  ShoppingCartOutlined,\r\n  MailOutlined,\r\n  SettingOutlined,\r\n  InboxOutlined,\r\n  SlidersOutlined,\r\n  DesktopOutlined,\r\n  RadarChartOutlined,\r\n  MessageOutlined,\r\n  UserOutlined,\r\n  FileAddOutlined,\r\n  FileSearchOutlined,\r\n  BgColorsOutlined,\r\n  BankOutlined,\r\n  FireOutlined,\r\n  MailTwoTone,\r\n  UserAddOutlined,\r\n  GlobalOutlined,\r\n  CalculatorOutlined,\r\n  UsergroupAddOutlined,\r\n  MoneyCollectOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import state\r\nimport { glboalOperations } from '../../state/ducks/globalState';\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderComponent = ({ roles }: any) => {\r\n  const [collapsed, setcollapsed] = useState(false);\r\n  const onCollapse = (collapsed: any) => {\r\n    // console.log(collapsed);\r\n    setcollapsed(collapsed);\r\n  };\r\n\r\n  return (\r\n    <Sider\r\n      width={260}\r\n      style={{\r\n        boxShadow: '7px 0 60px rgba(0,0,0,.05)',\r\n        border: 'none',\r\n      }}\r\n      collapsible\r\n      collapsed={collapsed}\r\n      onCollapse={onCollapse}\r\n      theme='light'\r\n    >\r\n      <Menu selectable={true} mode='inline'>\r\n        {isAccess('analytics', roles) && (\r\n          <Menu.Item key='1' icon={<PieChartOutlined />}>\r\n            <Link to='/admin'>Dashboard</Link>\r\n          </Menu.Item>\r\n        )}\r\n\r\n        {isAccess('getCatalogue', roles) && (\r\n          <SubMenu\r\n            key='sub3'\r\n            icon={<GoldOutlined />}\r\n            title='Product'\r\n            // onTitleClick={() => props.history.push('/product')}\r\n          >\r\n            <Menu.Item icon={<RadarChartOutlined />} key='6'>\r\n              <Link to='/admin/product'>Products</Link>\r\n            </Menu.Item>\r\n\r\n            {/* <Menu.Item\r\n                      icon={<BankOutlined />}\r\n                      key='2222'>\r\n                      <Link to='/admin/bundle'>Bundle</Link>\r\n                  </Menu.Item> */}\r\n\r\n            <Menu.Item key='9' icon={<TagsOutlined />}>\r\n              <Link to='/admin/tag'>Tags</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key='2' icon={<TagOutlined />}>\r\n              <Link to='/admin/category'>Categories</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key='5' icon={<BranchesOutlined />}>\r\n              <Link to='/admin/brand'>Brand</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        )}\r\n\r\n        <SubMenu\r\n          key='sub333'\r\n          icon={<GoldOutlined />}\r\n          title='Recipes'\r\n          // onTitleClick={() => props.history.push('/product')}\r\n        >\r\n          <Menu.Item icon={<RadarChartOutlined />} key='655'>\r\n            <Link to='/admin/posts'>List Recipe</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item icon={<TagOutlined />} key='2222444'>\r\n            <Link to='/admin/posts/category'>Recipe Category</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key='955' icon={<TagsOutlined />}>\r\n            <Link to='/admin/posts/tag'>Recipe Tags</Link>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        {/* <Menu.Item key='9' icon={<TagsOutlined />}>\r\n\t\t\t\t\t<Link to='/tag'>Tags</Link>\r\n\t\t\t\t</Menu.Item> */}\r\n        {/* <Menu.Item key='1012' icon={<FileExcelOutlined />}>\r\n                    <Link to='/admin/posts'>\r\n                        Recipies\r\n                    </Link>\r\n                </Menu.Item> */}\r\n        <Menu.Item key='1011' icon={<FireOutlined />}>\r\n          <Link to='/admin/coupon'>Coupon</Link>\r\n        </Menu.Item>\r\n\r\n        {isAccess('getDelivery', roles) && (\r\n          <Menu.Item key='10' icon={<CarOutlined />}>\r\n            <Link to='/admin/delivery'>Delivery</Link>\r\n          </Menu.Item>\r\n        )}\r\n\r\n        {isAccess('accounts', roles) && (\r\n          <SubMenu key='sub33' icon={<CalculatorOutlined />} title='Accounting'>\r\n            <Menu.Item icon={<UsergroupAddOutlined />} key='66'>\r\n              <Link to='/admin/staff'>Staff</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item icon={<MoneyCollectOutlined />} key='67'>\r\n              <Link to='/admin/expense'>Expense</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key='675454'>\r\n              <Link to='/admin/acccounting/overview'>Order report</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        )}\r\n\r\n        {isAccess('getOrder', roles) && (\r\n          <SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\r\n            <Menu.Item key='11'>\r\n              <Link to='/admin/order'>List Orders</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='11222'>\r\n              <Link to='/admin/order/overview'>Order Analytics</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='12'>\r\n              <Link to='/admin/order/new'>Add Order</Link>\r\n            </Menu.Item>\r\n            {/* <Menu.Item key='12'>\r\n                          <Link to='/admin/order/config'>\r\n                              Configure order status\r\n                          </Link>\r\n                      </Menu.Item> */}\r\n          </SubMenu>\r\n        )}\r\n\r\n        {isAccess('getDealer', roles) && (\r\n          <SubMenu\r\n            key='sub5553'\r\n            icon={<TeamOutlined />}\r\n            title='Dealer'\r\n            // onTitleClick={() => props.history.push('/product')}\r\n          >\r\n            <Menu.Item icon={<TeamOutlined />} key='666655'>\r\n              <Link to='/admin/dealer'>List dealer</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item icon={<GlobalOutlined />} key='22534522444'>\r\n              <Link to='/admin/dealer/area'>Dealer Areas</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        )}\r\n\r\n        <Menu.Item key='13' icon={<UserOutlined />}>\r\n          <Link to='/admin/customer'>Customer</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key='1888' icon={<MailOutlined />}>\r\n          <Link to='/admin/email'>Email</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key='199' icon={<MessageOutlined />}>\r\n          <Link to='/admin/sms'>SMS</Link>\r\n        </Menu.Item>\r\n\r\n        {isAccess('getDealer', roles) && (\r\n          <SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\r\n            <Menu.Item key='18' icon={<FileSearchOutlined />}>\r\n              <Link to='/admin/page'> List Pages</Link>\r\n            </Menu.Item>\r\n            <Menu.Item icon={<FileAddOutlined />} key='17'>\r\n              <Link to='/admin/page/new'> Add new Page</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        )}\r\n\r\n        <SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\r\n          <Menu.Item icon={<UserOutlined />} key='19'>\r\n            <Link to='/admin/settings/siteInfo'>Site information</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item icon={<UserAddOutlined />} key='19999'>\r\n            <Link to='/admin/settings/admins'>Admins</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key='23' icon={<SlidersOutlined />}>\r\n            <Link to='/admin/settings/components'>Components</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item icon={<BgColorsOutlined />} key='20'>\r\n            <Link to='/admin/settings/themes'>Themes</Link>\r\n          </Menu.Item>\r\n\r\n          {/* <Menu.Item key='21'>\r\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\r\n\t\t\t\t\t</Menu.Item> */}\r\n          {/* <Menu.Item key='22'>\r\n                        <Link to='/admin/settings/invoice'>Invoice</Link>\r\n                    </Menu.Item> */}\r\n        </SubMenu>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nconst mapDispathToProps = {\r\n  saveRoles: glboalOperations.saveRoles,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, mapDispathToProps)(SiderComponent);\r\n","import Sider from \"./Sider\";\r\nexport default Sider; ","import Empty from \"./Empty\";\r\nexport default Empty; ","import React from 'react'\r\nimport { Empty } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    title?: string;\r\n    height?: number\r\n}\r\n\r\nconst EmptyComponent = ({\r\n    title = 'No Data found',\r\n    height = 300\r\n}: Props) => {\r\n    return (\r\n        <div style={{\r\n            height: height,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyComponent\r\n","// @ts-nocheck\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\n// import { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Empty from '../../components/Empty';\r\n\r\n// import libraries\r\nimport { useHistory } from 'react-router';\r\nimport {\r\n  LogoutOutlined,\r\n  BellOutlined,\r\n  OrderedListOutlined,\r\n  TwitterSquareFilled,\r\n  ShoppingCartOutlined,\r\n  CheckCircleOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\nimport { Layout, Badge, Dropdown, Menu, Spin, notification } from 'antd';\r\nimport moment from 'moment';\r\nconst { Header } = Layout;\r\n\r\n// import styles\r\n\r\nconst openSuccessNotification = (msg?: any) => {\r\n  notification.success({\r\n    message: msg || 'Product Deleted',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst HeaderComponent = (props: Props) => {\r\n  const history = useHistory();\r\n\r\n  const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch(\r\n    {},\r\n    'getAllNotification'\r\n  );\r\n  const [\r\n    getMarkNotificationAsReadState,\r\n    handleMarkNotificationAsReadFetch,\r\n  ] = useHandleFetch({}, 'markNotificationAsRead');\r\n  const [\r\n    getMarkAllNotificationAsReadState,\r\n    handleMarkAllNotificationAsReadFetch,\r\n  ] = useHandleFetch({}, 'markAllNotificationAsRead');\r\n\r\n  const [notificationList, setnotificationList] = useState({});\r\n\r\n  const handleMenuClick = (e) => {\r\n    if (e.key === '3') {\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getAllNotification = async () => {\r\n      const res = await handleGetAllNOticationFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            limitNumber: 100000,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (res) {\r\n        // @ts-ignore\r\n        setnotificationList(res);\r\n      }\r\n    };\r\n\r\n    getAllNotification();\r\n  }, []);\r\n\r\n  const handleNotificationAsRead = async (id) => {\r\n    await handleMarkNotificationAsReadFetch({\r\n      body: {\r\n        id: [id],\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleAllNotificationAsRead = async () => {\r\n    const res = await handleMarkAllNotificationAsReadFetch({});\r\n    // @ts-ignore\r\n    if (res && res.status === 'ok') {\r\n      openSuccessNotification('Notification cleared!');\r\n      setnotificationList([]);\r\n    }\r\n  };\r\n\r\n  console.log('getAllNotificationState', getAllNotificationState);\r\n\r\n  const typeIcon = {\r\n    customer: <UserOutlined />,\r\n    order: <ShoppingCartOutlined />,\r\n  };\r\n\r\n  const menu = () => {\r\n    if (getAllNotificationState.isLoading)\r\n      return (\r\n        <div\r\n          style={{\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            backgroundColor: '#fff',\r\n            padding: '0 50px',\r\n          }}\r\n        >\r\n          <Spin />\r\n        </div>\r\n      );\r\n\r\n    if (\r\n      getAllNotificationState.done &&\r\n      notificationList &&\r\n      !notificationList[0]\r\n    ) {\r\n      return (\r\n        <div\r\n          className='notificationListItemContainer'\r\n          style={{\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            backgroundColor: '#fff',\r\n            padding: '0 50px',\r\n          }}\r\n        >\r\n          <Empty title='No Notification found' />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div style={{}} className='notificationListItemContainer'>\r\n        {getAllNotificationState.done && notificationList[0] && (\r\n          <div style={{}}>\r\n            <div\r\n              style={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'space-around',\r\n              }}\r\n            >\r\n              <a\r\n                onClick={() => handleAllNotificationAsRead()}\r\n                style={{\r\n                  textAlign: 'center',\r\n                  backgroundColor: '#f7f7f7',\r\n                  padding: '10px',\r\n                  width: '50%',\r\n                  fontSize: '13px',\r\n                }}\r\n                href='##'\r\n              >\r\n                CLEAR ALL\r\n              </a>\r\n              <a\r\n                onClick={() => history.push('/admin/notification')}\r\n                style={{\r\n                  textAlign: 'center',\r\n                  backgroundColor: '#eee',\r\n                  padding: '10px',\r\n                  width: '50%',\r\n                  fontSize: '13px',\r\n                }}\r\n                href='##'\r\n              >\r\n                SEE ALL\r\n              </a>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {getAllNotificationState.done &&\r\n          notificationList[0] &&\r\n          notificationList.map((item, index) => {\r\n            console.log('notificationItem', item);\r\n            return (\r\n              <div\r\n                onClick={() => {\r\n                  handleNotificationAsRead(item._id);\r\n                  history.push(`/admin/${item.type}/${item._id}`);\r\n                }}\r\n                className={\r\n                  !item.read\r\n                    ? 'notificationListItemContainer__item notificationListItemContainer__item-active'\r\n                    : 'notificationListItemContainer__item'\r\n                }\r\n              >\r\n                <span className='notificationListItemContainer__item-icon'>\r\n                  {typeIcon[item['type']]}\r\n                </span>\r\n                <div className='notificationListItemContainer__item-info'>\r\n                  <h3>{item.heading}</h3>\r\n                  <h4>{item.text}</h4>\r\n                  <h2>\r\n                    {item.added &&\r\n                      moment(item.added).format('MMMM Do YYYY, h:mm a')}\r\n                  </h2>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  console.log('notificationList', notificationList);\r\n\r\n  return (\r\n    <Header\r\n      style={{\r\n        background: '#fff',\r\n        height: '60px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        boxShadow:\r\n          '0 0.46875rem 2.1875rem rgba(8,10,37,.01), 0 0.9375rem 1.40625rem rgba(8,10,37,.01), 0 0.25rem 0.53125rem rgba(8,10,37,.02), 0 0.125rem 0.1875rem rgba(8,10,37,.01)',\r\n        zIndex: 10,\r\n        transition: ' all .2s',\r\n        alignItems: 'center',\r\n        alignContent: 'center',\r\n      }}\r\n    >\r\n      <h2\r\n        onClick={() => history.push('/admin')}\r\n        style={{\r\n          color: '#0072EA',\r\n          marginTop: '10px',\r\n          marginLeft: '-20px',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        Admin\r\n      </h2>\r\n\r\n      <div\r\n        style={{\r\n          marginRight: '-28px',\r\n        }}\r\n      >\r\n        <Dropdown\r\n          placement='bottomLeft'\r\n          overlay={menu}\r\n          // visible={this.state.visible}\r\n        >\r\n          <a\r\n            style={{\r\n              marginRight: '10px',\r\n            }}\r\n            href='###'\r\n            className='notificationIconContainer'\r\n          >\r\n            <Badge\r\n              overflowCount={100}\r\n              // @ts-ignore\r\n              showZero={TwitterSquareFilled}\r\n              count={\r\n                getAllNotificationState.done && !notificationList\r\n                  ? 0\r\n                  : notificationList && notificationList.length\r\n                  ? notificationList.length\r\n                  : 0\r\n              }\r\n            >\r\n              <span\r\n                style={{\r\n                  marginLeft: '10px',\r\n                  fontWeight: 600,\r\n                  borderRadius: '25px',\r\n                  color: '#1890ff',\r\n                  padding: '2px 20px',\r\n                  cursor: 'pointer',\r\n                  marginRight: '-5px',\r\n                }}\r\n              >\r\n                <BellOutlined />\r\n              </span>\r\n            </Badge>\r\n          </a>\r\n        </Dropdown>\r\n\r\n        <a href='/admin/auth/logout'>\r\n          <span\r\n            style={{\r\n              marginLeft: '10px',\r\n              fontWeight: 600,\r\n              borderRadius: '25px',\r\n              color: '#1890ff',\r\n              padding: '2px 20px',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            <LogoutOutlined />\r\n            <span\r\n              style={{\r\n                marginLeft: '10px',\r\n              }}\r\n            >\r\n              logout\r\n            </span>\r\n          </span>\r\n        </a>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default HeaderComponent;\r\n","import Header from \"./Header\";\r\nexport default Header; ","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n// import libraries \r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\nimport { Select, Button, Spin, Empty,DatePicker } from 'antd';\r\nimport Moment from \"react-moment\";\r\nimport moment from 'moment'; \r\n\r\nconst { Option } = Select;\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\n\r\n\r\nexport const RAINFALL = {\r\n    \"2018\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 65.4\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 1.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 23\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 65.6\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 43.2\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 19.4\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 42.8\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 97.8\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 104.8\r\n        }\r\n    ],\r\n    \"2019\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 11.2\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 18.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 12\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 7.2\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 53.4\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 49.8\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 45.2\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 51.4\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 41\r\n        },\r\n        {\r\n            month: 10,\r\n            rainfall: 24\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 54.4\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 6.2\r\n        }\r\n    ]\r\n};\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    }, {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\nconst ApiVisits = (props: Props) => {\r\n    const [selectedApiValue, setSelectedApiValue] = useState('date');\r\n    const [startDate,setStartDate] = useState('');\r\n    const [endDate,setEndDate] = useState('');\r\n\r\n\r\n\r\n    \r\n\r\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\r\n\r\n\r\n    const [userData, setuserData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getDemoGraphicVisitsValue = async () => {\r\n            const uservisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                        startDateValue: startDate,\r\n                        endDateValue: endDate\r\n                    }\r\n                }\r\n            }); \r\n\r\n           console.log('uservisitsData',uservisitsDataRes); \r\n\r\n           // @ts-ignore\r\n           if(uservisitsDataRes){\r\n            // @ts-ignore\r\n            setuserData(uservisitsDataRes)\r\n           }\r\n\r\n\r\n           };\r\n\r\n\r\n           getDemoGraphicVisitsValue(); \r\n\r\n    },[selectedApiValue,startDate,endDate])\r\n\r\n\r\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState);\r\n\r\n\r\n\r\n    \r\n    const options = [\r\n        {\r\n            value: 'date',\r\n            name: 'Date'\r\n        },\r\n        {\r\n            value: 'hour',\r\n            name: 'Hour'\r\n        },\r\n        {\r\n            value: 'dayOfWeek',\r\n            name: 'Day of week'\r\n        },\r\n        {\r\n            value: 'dayOfMonth',\r\n            name: 'Day of month'\r\n        },\r\n         {\r\n            value: 'month',\r\n            name: 'Month'\r\n        },\r\n        {\r\n            value: 'year',\r\n            name: 'Year'\r\n        }\r\n    ]\r\n\r\n    \r\n\r\n    const date = new Date();\r\n    const thisMonth = MONTHS[date.getMonth()]\r\n    \r\n\r\n\r\n    const getFormateDateValue = (order) => {\r\n\r\n        if(selectedApiValue === 'day'){\r\n            return order ? moment(order).format('MMMM Do YYYY, h:mm:ss a') : order;\r\n        }\r\n        else if (selectedApiValue === 'date'){\r\n            return order ? moment(order).format('MMMM Do YYYY') : order;\r\n        }\r\n        else if (selectedApiValue === 'month'){\r\n            return order ? MONTHS[order - 1] : order; ;\r\n        }\r\n        return order; \r\n    }\r\n    \r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    const handleStartEndDateRangeDate = (e) => {\r\n       if(e && e[0]){\r\n        const startDate = new Date(moment(e[0]).format()); \r\n        const endDate = new Date(moment(e[1]).format()); \r\n        // @ts-ignore\r\n        setStartDate(startDate);\r\n        // @ts-ignore\r\n        setEndDate(endDate);\r\n       }\r\n      \r\n    }; \r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__userVisits'>\r\n            <div className='overviewContainer__body-apiVisits-header'>\r\n                <div className='overviewContainer__body-apiVisits-header-info'>\r\n                    <h2>\r\n                        Users \r\n                    </h2>\r\n\r\n                        <h3>\r\n                          All users that visited\r\n                        </h3>\r\n                </div>\r\n\r\n\r\n                <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n            </div>\r\n\r\n            <div className='overviewContainer__body-body'>\r\n            {demoGraphicVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                margin:'100px 0',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n              <Spin size='large' />\r\n            </div>\r\n\r\n            </>\r\n        )}\r\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No User visited`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n               {demoGraphicVisitsState.done && userData && userData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={userData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis dataKey={selectedApiValue} \r\n                        tickFormatter={getFormateDateValue}\r\n                         />\r\n                        <YAxis\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            unit={selectedApiValue === 'month' ? thisMonth : ''}\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n            </div>\r\n            <div className=\"overviewContainer__body-footer\">\r\n                  <RangePicker \r\n                  showTime={true}\r\n                  onChange={handleStartEndDateRangeDate}\r\n                  bordered={false}\r\n                  picker=\"date\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApiVisits\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n// import libraries \r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Area,\r\n} from \"recharts\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\nimport { Select, Button, Spin, Empty, DatePicker } from 'antd';\r\nimport Moment from \"react-moment\";\r\nimport moment from 'moment';\r\n\r\nconst { Option } = Select;\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\nexport const RAINFALL = {\r\n    \"2018\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 65.4\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 1.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 23\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 65.6\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 43.2\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 19.4\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 42.8\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 97.8\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 104.8\r\n        }\r\n    ],\r\n    \"2019\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 11.2\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 18.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 12\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 7.2\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 53.4\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 49.8\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 45.2\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 51.4\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 41\r\n        },\r\n        {\r\n            month: 10,\r\n            rainfall: 24\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 54.4\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 6.2\r\n        }\r\n    ]\r\n};\r\n\r\n\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n    MONTHS[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    }, {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n]\r\n\r\nconst ApiVisits = (props: Props) => {\r\n    const [selectedApiValue, setSelectedApiValue] = useState('date');\r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n    const [startDate,setStartDate] = useState('');\r\n    const [endDate,setEndDate] = useState('');\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                        startDateValue: startDate,\r\n                        endDateValue: endDate\r\n                    }\r\n                }\r\n            }); \r\n\r\n           console.log('ordersDataRes',ordersDataRes); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[selectedApiValue,startDate,endDate]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    const options = [\r\n        {\r\n            value: 'date',\r\n            name: 'Date'\r\n        },\r\n        {\r\n            value: 'hour',\r\n            name: 'Hour'\r\n        },\r\n        {\r\n            value: 'dayOfWeek',\r\n            name: 'Day of week'\r\n        },\r\n        {\r\n            value: 'dayOfMonth',\r\n            name: 'Day of month'\r\n        },\r\n         {\r\n            value: 'month',\r\n            name: 'Month'\r\n        },\r\n        {\r\n            value: 'year',\r\n            name: 'Year'\r\n        }\r\n    ]\r\n\r\n\r\n\r\n    const date = new Date();\r\n    const thisMonth = MONTHS[date.getMonth()]\r\n    \r\n\r\n    const getFormateDateValue = (order) => {\r\n\r\n        if(selectedApiValue === 'day'){\r\n            return order ? moment(order).format('MMMM Do YYYY, h:mm:ss a') : order;\r\n        }\r\n        else if (selectedApiValue === 'date'){\r\n            return order ? moment(order).format('MMMM Do YYYY') : order;\r\n        }\r\n        else if (selectedApiValue === 'month'){\r\n            return MONTHS[order - 1];\r\n        }\r\n        return order; \r\n    }\r\n\r\n    const getDatePickerValue = () => {\r\n        if (selectedApiValue === 'hour'){\r\n            return 'time';\r\n        }\r\n        if (selectedApiValue === 'month'){\r\n            return 'month';\r\n        }\r\n        else if (selectedApiValue === 'dayOfWeek'){\r\n            return 'week';\r\n        }\r\n        else if (selectedApiValue === 'year'){\r\n            return 'year';\r\n        }\r\n        \r\n        return 'date'; \r\n    }\r\n    \r\n\r\n    const handleStartEndDateRangeDate = (e) => {\r\n        console.log('dateOrder',moment(e[0]).format());\r\n        console.log('dateOff',moment(e[1]).format());\r\n        const startDate = new Date(moment(e[0]).format()); \r\n        const endDate = new Date(moment(e[1]).format()); \r\n        // @ts-ignore\r\n        setStartDate(startDate);\r\n        // @ts-ignore\r\n        setEndDate(endDate);\r\n    }; \r\n\r\n    return (\r\n        <div className='overviewContainer__userVisits'>\r\n            <div className='overviewContainer__body-apiVisits-header'>\r\n                <div className='overviewContainer__body-apiVisits-header-info'>\r\n                    <h2>\r\n                        Orders \r\n                    </h2>\r\n\r\n                        <h3>\r\n                          All orders that visited\r\n                        </h3>\r\n                </div>\r\n\r\n                <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n            </div>\r\n\r\n            <div className='overviewContainer__body-body'>\r\n            {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n\r\n            <div style={{\r\n                margin:'100px 0',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n                <Spin size='large' />\r\n             </div>\r\n            </>\r\n          )}\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Orders Created`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n               {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                        dataKey={selectedApiValue} \r\n                        tickFormatter={getFormateDateValue}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            unit={selectedApiValue === 'month' ? thisMonth : ''}\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n            </div>\r\n            <div className=\"overviewContainer__body-footer\">\r\n                  <RangePicker\r\n                    showTime={true}\r\n                    onChange={handleStartEndDateRangeDate}\r\n                    picker={'date'} \r\n                    bordered={false}\r\n                    />\r\n            </div>\r\n        </div>\r\n    ); \r\n\r\n}\r\n\r\nexport default ApiVisits\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\n// import lib \r\n\r\nimport { ResponsiveContainer, PieChart, Tooltip, Pie, Cell } from \"recharts\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Select, Button, Spin, Empty } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'browser',\r\n        name: 'Browser'\r\n    },\r\n    {\r\n        value: 'device',\r\n        name: 'Device'\r\n    },\r\n    {\r\n        value: 'os',\r\n        name: 'OS'\r\n    }, {\r\n        value: 'platform',\r\n        name: 'Platform'\r\n    },\r\n  \r\n\r\n];\r\n\r\n\r\nexport const AGE_GROUP = [\r\n    {\r\n        device: \"18-24\",\r\n        percentage: 14\r\n    },\r\n    {\r\n        device: \"25-34\",\r\n        percentage: 24\r\n    },\r\n    {\r\n        device: \"35-44\",\r\n        percentage: 22\r\n    },\r\n    {\r\n        device: \"45-54\",\r\n        percentage: 18\r\n    },\r\n    {\r\n        device: \"55-64\",\r\n        percentage: 16\r\n    },\r\n    {\r\n        device: \"65+\",\r\n        percentage: 6\r\n    }\r\n];\r\n\r\nexport const COLORS = [\r\n    '#1890ff',\r\n    '#20A39E',\r\n    '#61D095',\r\n    '#FFBA49',\r\n    '#EF5B5B',\r\n    '#A4036F',\r\n];\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\nconst PlatformVisits = (props: Props) => {\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('browser');\r\n\r\n\r\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\r\n\r\n\r\n    const [demographicData, setdemographicData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getDemoGraphicVisitsValue = async () => {\r\n            const demograpicVisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                    }\r\n                }\r\n            }); \r\n           };\r\n\r\n           getDemoGraphicVisitsValue(); \r\n\r\n    },[selectedApiValue])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(demoGraphicVisitsState.done && demoGraphicVisitsState.data){\r\n            setdemographicData(demoGraphicVisitsState.data); \r\n        }; \r\n    },[demoGraphicVisitsState])\r\n\r\n\r\n\r\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState)\r\n    console.log('demographicData',demographicData)\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n    const RADIAN = Math.PI / 180;\r\n\r\n\r\n    const renderCustomizedLabel = ({\r\n        cx,\r\n        cy,\r\n        midAngle,\r\n        innerRadius,\r\n        outerRadius,\r\n        value,\r\n        name,\r\n        index,\r\n        percent,\r\n    }) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN) - 10;\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n        console.log('percent..',percent);\r\n        return (\r\n            <text x={x} y={y} fill=\"white\" fontSize={12} dominantBaseline=\"central\">\r\n                {`${(percent * 100).toFixed(0)}%`}\r\n            </text>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__body-platformVisits'>\r\n            <div className='overviewContainer__body-platformVisits-header'>\r\n                <div className='overviewContainer__body-platformVisits-header-info'>\r\n                    <h2>\r\n                        Demographic\r\n                        </h2>\r\n                    <h3>\r\n                       {selectedApiValue} demography\r\n                        </h3>\r\n                </div>\r\n                <div className='overviewContainer__body-platformVisits-header-controller'>\r\n                    <Select\r\n                        bordered={false}\r\n                        showSearch\r\n                        style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                        placeholder='Select Type'\r\n                        optionFilterProp='children'\r\n                        onChange={onChange}\r\n                        defaultValue={'browser'}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        {\r\n                            options.map((option) => {\r\n                                return <Option value={option.value}>{option.name}</Option>;\r\n                            })}\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-body\">\r\n\r\n            {demoGraphicVisitsState.isLoading && (\r\n            <>\r\n                <div style={{\r\n                    display:'flex',\r\n                    justifyContent:'center',\r\n                    alignItems:\"center\",\r\n                    marginTop:'100px',\r\n                    marginBottom:'100px',\r\n                }}>\r\n                <Spin\r\n                size='large'\r\n                />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n                    {demoGraphicVisitsState.done && demographicData && demographicData.length > 0 && (\r\n                        <ResponsiveContainer width=\"100%\" height={300}>\r\n                        <PieChart fontSize={14}>\r\n                            <Tooltip\r\n                                cursor={false}\r\n                                contentStyle={TooltipContainerStyles}\r\n                                formatter={(value, name) => [`${value}`, `${name}`]}\r\n                            />\r\n\r\n                            <Pie\r\n                                dataKey=\"count\"\r\n                                data={demographicData}\r\n                                outerRadius={100}\r\n                                innerRadius={40}\r\n                                name={selectedApiValue}\r\n                                nameKey={selectedApiValue}\r\n                                unit=\"%\"\r\n                                label={renderCustomizedLabel}\r\n                                labelLine={false}\r\n                            >\r\n                                {demographicData && demographicData.map((entry, index) => (\r\n                                    <Cell\r\n                                        key={`cell-${index}`}\r\n                                        fill={COLORS[index % COLORS.length]}\r\n                                    />\r\n                                ))}\r\n                            </Pie>\r\n                            </PieChart>\r\n                        </ResponsiveContainer>\r\n                    )}\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-footer\">\r\n                <h3>\r\n                    <span>\r\n                        <CalendarOutlined />\r\n                    </span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlatformVisits\r\n\r\n\r\n// http://localhost:5000/admin/analytics/user?metric=day?start=date&end=datae\r\n// /http://localhost:5000/admin/analytics/item?type=product&item=534534534534&metric=day","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n\r\n    const history = useHistory(); \r\n\r\n\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('product');\r\n    const [pageVisitsState, handlePageVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsPageVisits');\r\n\r\n\r\n    useEffect(()=>{\r\n        const getPageVisitsValue = async () => {\r\n            const pageVisitsDataRes =  await handlePageVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        visitType: selectedApiValue,\r\n                        item: 'item',\r\n                    }\r\n                }\r\n            }); \r\n           };\r\n\r\n           getPageVisitsValue(); \r\n\r\n    },[selectedApiValue])\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    console.log('pageVisitsState',pageVisitsState)\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    Popularity\r\n                    </h2>\r\n                <h3>\r\n                      All {selectedApiValue} that were visited\r\n                    </h3>\r\n            </div>\r\n            <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {pageVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n                {pageVisitsState.done && !(pageVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {pageVisitsState.done && pageVisitsState.data && pageVisitsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                        pagination={{ defaultPageSize: 6}}\r\n                            style={{\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={pageVisitsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                \r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                       <a href='##'>\r\n                                       <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/${selectedApiValue && selectedApiValue.toLowerCase()}/${record.itemId}`)\r\n                                            }}  \r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                textTransform:'uppercase',\r\n                                                cursor: 'pointer'\r\n                                            }}>\r\n                                            {text || `${selectedApiValue} Deleted`}\r\n                                        </h4>\r\n                                       </a>\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Count\"\r\n                                dataIndex=\"visit\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// import components \r\nimport ApiVisits from \"./ApiVisits\";\r\nimport OrderOverView from \"./OrderOverView\";\r\nimport PlatformVisits from \"./PlatformVisits\";\r\nimport PageVisits from \"./PageVisits\";\r\n\r\n// import lib \r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tUserOutlined,\r\n\tCalendarOutlined,\r\n\tGoldOutlined,\r\n\tShoppingCartOutlined,\r\n\tTagOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst getTotalUserCount = async () => {\r\n\t\t\tawait handleGetTotalUserCountFetch({});\r\n\t\t}\r\n\r\n\t\tgetTotalUserCount();\r\n\t}, []);\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst getProductVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\r\n\t\t\t\tparams: 'product'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetProductVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst getCategoryVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\r\n\t\t\t\tparams: 'category'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetCategoryVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='overviewContainer'>\r\n\t\t\t{/* <div className=\"overviewContainer__header\">\r\n\r\n\t\t\t\t{totalUserCountState.done && totalUserCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Users\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{totalUserCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t{analyticsProductVisitCountState.done && analyticsProductVisitCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Products\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{analyticsProductVisitCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\t\t\t\t{analyticsCategoryVisitCountState.done && analyticsCategoryVisitCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Category\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{analyticsCategoryVisitCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<ShoppingCartOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Orders\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t8503\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n */}\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<PageVisits />\r\n\t\t\t\t<PlatformVisits />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t</div>\r\n\t\t\t<OrderOverView />\r\n\t\t\t<ApiVisits />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    rows?: number\r\n    placeholder?:any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, \r\n    onChange, disabled, isError,\r\n     errorString, name, rows = 4,\r\n     placeholder\r\n     }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                help={errorString}\r\n            // rules={[{ required: true }]}\r\n            >\r\n                <TextArea\r\n                    disabled={disabled}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    name={name}\r\n                    className='inputclassName'\r\n                    rows={rows} \r\n                    placeholder={placeholder}\r\n                    />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\n\r\n// import libraries\r\nimport { Upload, Button, Modal, Tabs, message, notification, Popconfirm, Menu, Dropdown, } from 'antd';\r\nimport reqwest from 'reqwest';\r\nimport { Formik } from 'formik';\r\nimport Moment from 'react-moment';\r\n// import * as Yup from 'yup';\r\n\r\n\r\nimport {\r\n\tCheckOutlined,\r\n\tArrowUpOutlined,\r\n\tCheckCircleOutlined,\r\n\tEllipsisOutlined,\r\n\tFileImageOutlined,\r\n\tDeleteOutlined,\r\n\tCloseOutlined\r\n\r\n} from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nconst { Dragger } = Upload;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tvisible: boolean;\r\n\tsetvisible: (isVisible: any) => void;\r\n\tsetmyImages?: any;\r\n\tsetmyThumbnailImage?: any;\r\n\tisModalOpenForThumbnail?: boolean;\r\n\tisModalOpenForImages?: boolean;\r\n\tmyImages?: any;\r\n\tmyThumbnailImage?: any;\r\n\tsetMyGoddamnImages?: any;\r\n\tmyGoddamnImages?: any;\r\n}\r\n\r\n\r\nconst MediaLibrary = ({\r\n\tvisible,\r\n\tsetvisible,\r\n\tsetmyImages,\r\n\tisModalOpenForImages,\r\n\tisModalOpenForThumbnail,\r\n\tsetmyThumbnailImage,\r\n\tmyImages,\r\n\tmyThumbnailImage,\r\n\t...rest\r\n}: Props) => {\r\n\r\n\tconst [fileList, setfileList] = useState([]);\r\n\tconst [uploading, setuploading] = useState(false);\r\n\tconst [selectedimages, setselectedImages] = useState([]);\r\n\tconst [activeImageItem, setactiveImageItem] = useState(false);\r\n\tconst [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch({}, 'updateImageFromLibrary');\r\n\tconst [imageListFromLibraryState, handleImageListFromLibraryFetch] = useHandleFetch({}, 'ImageListFromLibrary');\r\n\tconst [deleteImageFromLibraryFetchState, handleDeleteImageFromLibraryFetch] = useHandleFetch({}, 'deleteImageFromLibrary');\r\n\tconst [localImageList, setLocalImageList] = useState([]);\r\n\tconst [isDoneOk, setisDoneOk] = useState(false);\r\n\r\n\r\n\tconst handleDeleteImageFromImageLibrary = async (id) => {\r\n\r\n\t\tconst deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteImageLibraryItemRes && deleteImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Imaged Deleted');\r\n\t\t\tconst newImageList = localImageList.filter(item => item.id !== id);\r\n\t\t\tsetLocalImageList(newImageList);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getImageList = async () => {\r\n\t\tconst imageListRes = await handleImageListFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tlimitNumber: 10000,\r\n\t\t\t\t\tsortItem: 'added',\r\n\t\t  \t\t\tsortOrderValue: '-1'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (imageListRes) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetLocalImageList(imageListRes);\r\n\t\t}\r\n\r\n\t\t// console.log('imageListRes', imageListRes);\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tgetImageList();\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\tconst handleUpload = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tfileList.forEach(file => {\r\n\t\t\tformData.append('images', file, file.name);\r\n\t\t});\r\n\r\n\t\tsetuploading(true);\r\n\r\n\t\t//  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n\t\t// \tbody: formData\r\n\t\t//   });\r\n\r\n\t\t//   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\t\t// You can use any AJAX library you like\r\n\t\treqwest({\r\n\t\t\turl: `${config.baseURL}/admin/api/image/add`,\r\n\t\t\tmethod: 'post',\r\n\t\t\tprocessData: false,\r\n\t\t\tdata: formData,\r\n\t\t\twithCredentials: true,\r\n\t\t\tsuccess: () => {\r\n\t\t\t\tsetfileList([]);\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tgetImageList();\r\n\t\t\t\tmessage.success('upload successfully.');\r\n\t\t\t},\r\n\t\t\terror: () => {\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tmessage.error('upload failed.');\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\r\n\t\tif (isModalOpenForImages) {\r\n\t\t\tsetmyImages(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log('')\r\n\t\t\tconsole.log('selectedimages,,,',selectedimages[0])\r\n\t\t\tsetmyImages(selectedimages && selectedimages[0] ? [selectedimages[0]] : []);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (myImages && myImages.length > 0)\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t}, [myImages])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk && isModalOpenForImages && myImages) {\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t\t}\r\n\t}, [myImages, isDoneOk]);\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk) {\r\n\t\t\t// console.log('myThumbnail', myThumbnailImage)\r\n\t\t\t// setselectedImages([...myThumbnailImage]);\r\n\t\t}\r\n\t}, [myThumbnailImage, isDoneOk])\r\n\r\n\tconst uploadProps = {\r\n\t\t//  listType: 'picture',\r\n\t\tmultiple: true,\r\n\t\tonRemove: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst index = fileList.indexOf(file);\r\n\t\t\t\tconst newFileList = fileList.slice();\r\n\t\t\t\tnewFileList.splice(index, 1);\r\n\t\t\t\treturn newFileList;\r\n\t\t\t})\r\n\r\n\t\t},\r\n\t\tbeforeUpload: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst xflelist = filelist;\r\n\t\t\t\treturn [...xflelist, file]\r\n\t\t\t})\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tfileList,\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst handleAddToSelectedList = (image, id) => {\r\n\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (!isImageExist) {\r\n\t\t\t\tsetselectedImages([image,...selectedimages]);\r\n\t\t\t\tsetactiveImageItem(image);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst newselectedImages = selectedimages.filter(image => image.id !== id);\r\n\t\t\t\tsetselectedImages(newselectedImages);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetselectedImages([image,...selectedimages]);\r\n\t\t\tsetactiveImageItem(image);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst getisSelectedImage = (id) => {\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (isImageExist) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleUpdateSubmit = async (values, actions) => {\r\n\t\tconst updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t\talt: values.alt,\r\n\t\t\t\ttitle: values.title,\r\n\t\t\t\tcaptoin: values.captoin,\r\n\t\t\t\tlabels: values.labels,\r\n\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateImageLibraryItemRes && updateImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Image Updated');\r\n\r\n\t\t\tconst positionInImageList = () => {\r\n\t\t\t\treturn localImageList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInImageList();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, localImageList[index], { ...updateImageLibraryItemRes });\r\n\t\t\tconst updateImageList = [...localImageList.slice(0, index), updatedItem, ...localImageList.slice(index + 1)];\r\n\t\t\tsetLocalImageList(updateImageList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t}\r\n\r\n\r\n\tconst getisUpdateSubmitButtonDisabled = (values, isValid) => {\r\n\t\t// if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\r\n\t\t// \treturn true; \r\n\t\t// }\r\n\t\tif (!isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// console.log('selectedimages', selectedimages)\r\n\r\n\tconst ImageItemMenu = (handleDeleteImageFromImageLibrary, id, handleAddToSelectedList, image) => {\r\n\t\treturn (\r\n\t\t\t(\r\n\t\t\t\t<Menu>\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleAddToSelectedList(image, id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<CheckOutlined />}>\r\n\t\t\t\t\t\tSelect\r\n\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleDeleteImageFromImageLibrary(id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<DeleteOutlined color='red' />}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</Menu >\r\n\t\t\t)\r\n\t\t)\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttop: '40px'\r\n\t\t\t\t}}\r\n\t\t\t\ttitle=\"Media Library\"\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\twidth={'80vw'}\r\n\t\t\t\tbodyStyle={{\r\n\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\tpadding: '0'\r\n\t\t\t\t}}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<div className='mediaLibraryBodyContainer'>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-left'>\r\n\r\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"2\" type=\"card\" size='middle'>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Upload New Media\" key=\"1\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-header'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Dragger\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='upload-list-inline'\r\n\t\t\t\t\t\t\t\t\t\t\tlistType='picture'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: '#fff',\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '8px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t{...uploadProps}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-hint'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSupport for a single or bulk upload.\r\n\t\t\t\t\t\t                \t</p>\r\n\t\t\t\t\t\t\t\t\t\t</Dragger>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\tonClick={handleUpload}\r\n\t\t\t\t\t\t\t\t\tdisabled={fileList.length === 0}\r\n\t\t\t\t\t\t\t\t\tloading={uploading}\r\n\t\t\t\t\t\t\t\t\ticon={<ArrowUpOutlined />}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '20px',\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Media Library\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{myImages && myImages.lenght > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelected Items\r\n                               </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages-imgContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.length > 0\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-left-imageListContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{getisSelectedImage(image.id) ? <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div> : ''}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown overlay={() => ImageItemMenu(handleDeleteImageFromImageLibrary, image.id, handleAddToSelectedList, image)} placement=\"bottomRight\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EllipsisOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}} src={image.cover} alt='img' />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done && !(localImageList.length > 0) && (\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Empty title='No Image Found in the library' />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-right'>\r\n\r\n\t\t\t\t\t\t{activeImageItem && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\t\tonSubmit={(values, actions) => handleUpdateSubmit(values, actions)}\r\n\t\t\t\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t{ ...activeImageItem }\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\t\t\t\thandleReset,\r\n\t\t\t\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment Details\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={activeImageItem['cover']} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='imageLibnameText'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['name']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['added']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t5000 X 500\r\n\t\t\t\t\t\t\t\t\t</h5> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteImageFromImageLibrary(activeImageItem['id'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='imageLibdeleteText'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete parmanently\r\n\t\t\t\t\t\t\t\t\t                       </h5>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Alternate Text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.alt}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='alt'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('alt');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('title');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Caption'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.caption}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('caption');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='default'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={getisUpdateSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{!activeImageItem && (\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h4 style={{\r\n\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\tfontSize: \"13px\",\r\n\t\t\t\t\t\t\t\t\tcolor: '#8888'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tSelect an image to preview details\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default MediaLibrary;\r\n","import MediaLibrary from './MediaLibrary';\r\nexport default MediaLibrary;\r\n","// @ts-nocheck\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass MetaTags extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = (removedTag) => {\r\n    const { setTags, tags } = this.props;\r\n    const localTags = tags.filter((tag) => tag !== removedTag);\r\n    setTags(localTags);\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    console.log('handleInputConfirm', this.props);\r\n    const { inputValue } = this.state;\r\n    let { tags, setTags } = this.props;\r\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    setTags(tags);\r\n    this.setState({\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = (e) => {\r\n    this.setState({ editInputValue: e.target.value });\r\n    console.log('tagValue', e.target.value);\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ editInputIndex, editInputValue }) => {\r\n      return {\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n\r\n    const newTags = [...this.props.tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    this.props.setTags(newTags);\r\n  };\r\n\r\n  saveInputRef = (input) => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = (input) => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      inputVisible,\r\n      inputValue,\r\n      editInputIndex,\r\n      editInputValue,\r\n    } = this.state;\r\n    const { placeholder, tags } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {tags &&\r\n          tags.length > 0 &&\r\n          tags.map((tag, index) => {\r\n            if (editInputIndex === index) {\r\n              return (\r\n                <Input\r\n                  ref={this.saveEditInputRef}\r\n                  key={tag}\r\n                  size='small'\r\n                  placeholder={placeholder}\r\n                  className='tag-input'\r\n                  value={editInputValue}\r\n                  onChange={this.handleEditInputChange}\r\n                  onBlur={this.handleEditInputConfirm}\r\n                  onPressEnter={this.handleEditInputConfirm}\r\n                />\r\n              );\r\n            }\r\n\r\n            const isLongTag = tag.length > 20;\r\n\r\n            const tagElem = (\r\n              <Tag\r\n                className='edit-tag'\r\n                key={tag}\r\n                closable={true}\r\n                onClose={() => this.handleClose(tag)}\r\n              >\r\n                <span\r\n                  onDoubleClick={(e) => {\r\n                    if (index !== 0) {\r\n                      this.setState(\r\n                        { editInputIndex: index, editInputValue: tag },\r\n                        () => {\r\n                          this.editInput.focus();\r\n                        }\r\n                      );\r\n                      e.preventDefault();\r\n                    }\r\n                  }}\r\n                >\r\n                  {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n                </span>\r\n              </Tag>\r\n            );\r\n            return isLongTag ? (\r\n              <Tooltip title={tag} key={tag}>\r\n                {tagElem}\r\n              </Tooltip>\r\n            ) : (\r\n              tagElem\r\n            );\r\n          })}\r\n        {inputVisible && (\r\n          <Input\r\n            style={{\r\n              margin: '10px 0',\r\n            }}\r\n            ref={this.saveInputRef}\r\n            type='text'\r\n            size='small'\r\n            className='tag-input'\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className='site-tag-plus edit-tag' onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaTags;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: null\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n    setcategoryList?: any;\r\n    categoryDetailData?:any; \r\n}\r\n\r\nconst AddNewCategory = ({ \r\n    addNewCategoryVisible, \r\n    setAddNewCategoryVisible, \r\n    categoryList, setcategoryList,\r\n    categoryDetailData }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\tconst [updateCategoryIconState, handleUpdateCategoryIconFetch] = useHandleFetch({}, 'categoryUpdateIcon', 'form');\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\r\n\t\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    useEffect(() => {\r\n        if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\r\n\t\t\tconst images = categoryDetailData.image;\r\n\t\t\tlet mahImages = []; \r\n\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tmahImages = images;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (categoryDetailData.cover && categoryDetailData.cover['id']) {\r\n\t\t\t\tconst ixists = images.find(item => item.id === categoryDetailData.cover['id']);\r\n\t\t\t\tif(!ixists){\r\n\t\t\t\t\tmahImages = [categoryDetailData.cover, ...mahImages]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCoverImageId(categoryDetailData.cover['id']);\r\n\t\t\t}\r\n\t\r\n\t\t\t\t// @ts-ignore\r\n        \tsetmyImages(mahImages);\r\n        }\r\n    }, [categoryDetailData]); \r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'category',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'category',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\r\n\r\n\t\tconsole.log('categoryDetailData',categoryDetailData); \r\n\t\t\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\tconst aboutToUpdatedImageIds = []; \r\n\r\n\t\t\tif(imagesIds && imagesIds.length > 0){\r\n\t\t\t\timagesIds.forEach(imageId => {\r\n\t\t\t\t\tif(categoryDetailData && categoryDetailData['image']){\r\n\t\t\t\t\t\tif(!categoryDetailData['image'].includes(imageId)){\r\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n      \r\n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'category',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: aboutToUpdatedImageIds\r\n                    }\r\n                });\r\n\t\t\t}\r\n\t\t\t\r\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: aboutToUpdatedImageIds[0].id,\r\n                            collection: 'category',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\t\t}\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: categoryDetailData.id\r\n                },\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                displayOrder: values.displayOrder,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                parent: selectedParentId,\r\n                icon: imageFile,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags:  tags && tags.length > 0 ?  tags.join(',') : '',\r\n                bn: {\r\n                    metaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags:  bnTags && bnTags.length > 0 ?  bnTags.join(',') : '',\r\n                    name: values.bnName.trim(),\r\n                    description: values.bnDescription,\r\n                }\r\n            },\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Updated!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([{\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\tcover: addCategoryRes['cover'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t},...categoryList])\r\n\r\n    \r\n            \r\n            \r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\t\r\n\t\r\n\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetTags([]); \r\n\t\tsetBnTags([]); \r\n\t\tsetAddNewCategoryVisible(false);\r\n\t\tsetImagefile(''); \r\n\t\tsetCoverImageId(''); \r\n\t\tsetselectedParentId('');\r\n\t\tsetmyImages(false); \r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\t function beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('icon',file); \r\n\t\t\t\t// const addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\t\t// \tbody: formData,\r\n\t\t\t\t// });\r\n\t\t\t\tconst res = await handleUpdateCategoryIconFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Category Icon updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update category icon, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const iconUrl = categoryDetailData.icon && categoryDetailData.icon; \r\n\r\n\t\t\tsetImageUrl(iconUrl); \r\n        }\r\n\r\n    },[])\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n    \r\n    useEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const metaTags = categoryDetailData.metaTags && categoryDetailData.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = categoryDetailData.bn && categoryDetailData.bn['metaTags'] && categoryDetailData.bn['metaTags'].split(','); \r\n            setTags(metaTags || [])\r\n            setBnTags(bnMetaTags || [])\r\n        }\r\n\r\n\t},[])\r\n\t\r\n\r\n\tconsole.log('metaTagsCategoryEdit',tags)\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n                \r\n                { ...initialValues,\r\n                    ...categoryDetailData,\r\n                    ...( categoryDetailData && Object.keys(categoryDetailData).length > 0 && {\r\n                        bnMetaTitle: categoryDetailData['bn']\r\n                        && categoryDetailData['bn'].metaTitle\r\n                        && categoryDetailData['bn'].metaTitle,\r\n                        bnMetaDescription: categoryDetailData['bn'] &&  categoryDetailData['bn'].metaDescription && categoryDetailData['bn'].metaDescription,\r\n                        bnName: categoryDetailData['bn'] && categoryDetailData['bn'].name && categoryDetailData['bn'].name,\r\n                        bnDescription: categoryDetailData['bn'] && categoryDetailData['bn'].description && categoryDetailData['bn'].description,\r\n                    })\r\n                 }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\tdestroyOnClose={true}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Display Order'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.displayOrder}\r\n\t\t\t\t\t\t\t\t\t\tplaceHolder={'1,3,7'}\r\n\t\t\t\t\t\t\t\t\t\tname='displayOrder'\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('displayOrder');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tmarginTop:'20px'\r\n\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\nstyle={{\r\n\tmarginBottom: '-5px'\r\n}}\r\n>\r\n<h3 className='inputFieldLabel'>Images</h3>\r\n{/* <div  >\r\n<FileOutlined />\r\n<span>Media Center</span>\r\n</div> */}\r\n</div>\r\n\r\n\r\n<div className='aboutToUploadImagesContainer'>\r\n\r\n{categoryDetailData && Object.keys(categoryDetailData).length > 0 && (\r\n\t<>\r\n\t\t{myImages &&\r\n\t\t\t// @ts-ignore\r\n\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetCoverImageId(image.id);\r\n\t\t\t\t\t\t\t\thandleSetImageAsThumnail(image);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\thandleImagesDelete(image.id)\r\n\t\t\t\t\t\t\t\thandleDetachSingleImage(image.id)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\r\n\r\n\t\t<Tooltip\r\n\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t<div\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t}}\r\n\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t<FileImageFilled />\r\n\t\t\t\t{/* <h5>\r\n\t\t\t\t\t Select From Library\r\n\t\t\t<     /h5> */}\r\n\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</Tooltip>\r\n\t</>\r\n)}\r\n\r\n\r\n</div>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DataTable = (props: any) => (\r\n\t<ContentLoader\r\n\t\tspeed={0.5}\r\n\t\twidth={1300}\r\n\t\theight={400}\r\n\t\tviewBox='0 0 1300 400'\r\n\t\tbackgroundColor='#f3f3f3'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\r\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='203' r='12' />\r\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='265' r='12' />\r\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='323' r='12' />\r\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='386' r='12' />\r\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='37' cy='97' r='11' />\r\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\r\n\t\t<circle cx='1316' cy='88' r='11' />\r\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\r\n\t\t<circle cx='77' cy='96' r='11' />\r\n\t</ContentLoader>\r\n);\r\n\r\nDataTable.metadata = {\r\n\tname: 'Mohd Arif Un',\r\n\tgithub: 'arif-un',\r\n\tdescription: 'Data Table skeleton',\r\n\tfilename: 'DataTable'\r\n};\r\n\r\nexport default DataTable;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {AddNewCategory,QuickEdit} from \"../category\"\r\nimport CategoryNewQuickEdit from \"./CategoryNewQuickEdit\"\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Category Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n  roles?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history, roles}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'deleteCategory');\r\n      // console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                   onClick={() => {\r\n                    history.push(`/admin/category/${record.id}`)\r\n                    // setcategoryDetailVisible(true);\r\n                    setactiveCategoryForEdit(record)\r\n                  }}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px',\r\n                  cursor: 'pointer'\r\n\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/category/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        \r\n      {isAccess('postCatalogue',roles) && (\r\n          <Column\r\n            className='classnameofthecolumn'\r\n            title=\"\"\r\n            key=\"action\"\r\n            align='right'\r\n            render={(text, record : any) => (\r\n              <Space size=\"middle\">\r\n                <a href='##'>\r\n                 <Tooltip placement=\"top\" title='Edit Category'>\r\n                <span className='iconSize' onClick={() => {\r\n                  setvisible(true)\r\n                  setactiveCategoryForEdit(record); \r\n                }}> \r\n                <EditOutlined />\r\n              \r\n                </span>\r\n                 </Tooltip>\r\n                 </a>\r\n                 <Popconfirm \r\n                 onConfirm={() => handleDeleteCategory(record.id)}\r\n                 title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                 <span \r\n               className='iconSize iconSize-danger'\r\n               > \r\n               <DeleteOutlined/>\r\n              </span>\r\n             </Popconfirm>\r\n              </Space>\r\n            )}\r\n          />\r\n  )}\r\n\r\n\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <CategoryNewQuickEdit\r\n    categoryDetailData={activeCategoryForEdit} \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setAddNewCategoryVisible={setvisible}\r\n    addNewCategoryVisible={visible}\r\n/>}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n    roles?:any; \r\n}\r\n\r\nconst CategoryList = ({history, roles}: Props) => {\r\n\r\n\r\n  \r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n          productCountValue: true,\r\n          sortItem: 'added',\r\n          sortOrderValue: '-1'\r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState); \r\n\r\n  \r\n\r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Categories\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onChange={e => handleSearch(e.target.value)}\r\n        />\r\n          </div>\r\n\r\n            {isAccess('postCatalogue',roles) && (\r\n            <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n            >\r\n            Add New\r\n\r\n            </Button>\r\n            )}\r\n\r\n           \r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        roles={roles}\r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{categoryState.done && \r\n    <AddNewCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  roles: state.globalState,\r\n})\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(withRouter(CategoryList));\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message, } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: null,\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'addCategory','form');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tconst bn = {\r\n\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\tname: values.bnName.trim(),\r\n\t\t\tdescription: values.bnDescription,\r\n\t\t}; \r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\t\tformData.append('metaTitle', values.metaTitle)\r\n\t\tformData.append('displayOrder', values.displayOrder)\r\n\t\tformData.append('metaDescription', values.metaDescription)\r\n\t\tformData.append('metaTags', values.metaTags)\r\n\r\n\r\n\r\n\t\tconst bnData = JSON.stringify(bn);\r\n\t\tconst bnFormData = new FormData();\r\n\t\tbnFormData.append(\"bn\",bnData);\r\n\r\n\r\n\r\n\t\tformData.append('bn', bnFormData.get('bn'))\r\n\r\n\r\n\r\n\r\n\t\tconsole.log('addcategoryREsBody',{\r\n\t\t\t...formData,\r\n\t\t\t// ...bnFormData\r\n\t\t}); \r\n\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\tbody: formData,\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Created!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([{\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\tcover: addCategoryRes['cover'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t},...categoryList])\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconsole.log('addCategoryState',addCategoryState)\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!addCategoryState['isLoading']) {\r\n\t\t\tconst error = addCategoryState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addCategoryState])\r\n\r\n\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Display Order'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.displayOrder}\r\n\t\t\t\t\t\t\t\t\t\tplaceHolder={'1,3,7'}\r\n\t\t\t\t\t\t\t\t\t\tname='displayOrder'\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('displayOrder');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetcategoryList?: any;\r\n\tcategoryList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t//   console.log('updateCategoryRes',updateCategoryRes); \r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateCategoryRes && updateCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t\tconst updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t\tsetcategoryList(updateCategoryList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Switch,\r\n  Select,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Upload,\r\n  message,\r\n} from 'antd';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  FileImageFilled,\r\n  PlusOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  LoadingOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from './MetaTags';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Category Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n  displayOrder: '',\r\n};\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  categoryList?: any;\r\n  setcategoryList?: any;\r\n  categoryDetailData?: any;\r\n  setcategoryDetailData?: any;\r\n}\r\n\r\nconst AddNewCategory = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  categoryList,\r\n  setcategoryList,\r\n  categoryDetailData,\r\n  setcategoryDetailData,\r\n}: Props) => {\r\n  const [addCategoryState, handleAddCategoryFetch] = useHandleFetch(\r\n    {},\r\n    'updateCategory'\r\n  );\r\n  const [\r\n    updateCategoryIconState,\r\n    handleUpdateCategoryIconFetch,\r\n  ] = useHandleFetch({}, 'categoryUpdateIcon');\r\n  const [\r\n    attachImageToItemMultipleState,\r\n    handleAttachImageToItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [\r\n    attachImageToItemSingleState,\r\n    handleAttachImageToItemSingleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [\r\n    detachImageFromItemMultipleState,\r\n    handleDetachImageFromItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n  const [visible, setvisible] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [selectedParentId, setselectedParentId] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n  const [imageFile, setImagefile] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds = myImages\r\n      ? myImages.map((image) => {\r\n          return image.id;\r\n        })\r\n      : [];\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('name', values.name.trim());\r\n    formData.append('description', values.description);\r\n    formData.append('image', JSON.stringify(imagesIds));\r\n    formData.append('cover', coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n    formData.append('parent', selectedParentId);\r\n    formData.append('icon', imageFile);\r\n    formData.append('displayOrder', values.displayOrder);\r\n\r\n    console.log('categoryDetailData', categoryDetailData);\r\n    console.log('imagesIds', imagesIds);\r\n\r\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n      const aboutToUpdatedImageIds = [];\r\n\r\n      if (imagesIds && imagesIds.length > 0) {\r\n        imagesIds.forEach((imageId) => {\r\n          if (categoryDetailData && categoryDetailData['image']) {\r\n            if (!categoryDetailData['image'].includes(imageId)) {\r\n              aboutToUpdatedImageIds.push(imageId);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n        await handleAttachImageToItemMultipleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              collection: 'category',\r\n              itemId: categoryDetailData.id,\r\n            },\r\n          },\r\n          body: {\r\n            image: aboutToUpdatedImageIds,\r\n          },\r\n        });\r\n      } else if (\r\n        aboutToUpdatedImageIds[0] &&\r\n        aboutToUpdatedImageIds.length < 1\r\n      ) {\r\n        await handleAttachImageToItemSingleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              imageId: aboutToUpdatedImageIds[0].id,\r\n              collection: 'category',\r\n              itemId: categoryDetailData.id,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    const addCategoryRes = await handleAddCategoryFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: categoryDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: values.description,\r\n        image: imagesIds,\r\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n        parent: selectedParentId,\r\n        icon: imageFile,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        displayOrder: values.displayOrder,\r\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\r\n          name: values.bnName.trim(),\r\n          description: values.bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addCategoryRes && addCategoryRes.status === 'ok') {\r\n      openSuccessNotification('Category Updated!');\r\n      setAddNewCategoryVisible(false);\r\n\r\n      // setcategoryList([{\r\n      // \tid: addCategoryRes['_id'] || '',\r\n      // \tkey: addCategoryRes['_id'] || '',\r\n      // \tname: addCategoryRes['name'] || '',\r\n      // \tdescription: addCategoryRes['description'] || '',\r\n      // \tcover: addCategoryRes['cover'] || '',\r\n      // \t// @ts-ignore\r\n      // \t...addCategoryRes\r\n      // },...categoryList]);\r\n\r\n      setcategoryDetailData({\r\n        ...categoryDetailData,\r\n        // @ts-ignore\r\n        ...addCategoryRes,\r\n      });\r\n\r\n      actions.resetForm();\r\n      // @ts-ignore\r\n      setmyImages([]);\r\n      setCoverImageId('');\r\n      setselectedParentId('');\r\n      setisparentcategoryChecked(true);\r\n      setImageUrl('');\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n    \r\n      const images = categoryDetailData.image;\r\n\t\t\tlet mahImages = []; \r\n\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tmahImages = images;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (categoryDetailData.cover && categoryDetailData.cover['id']) {\r\n\t\t\t\tconst ixists = images.find(item => item.id === categoryDetailData.cover['id']);\r\n\t\t\t\tif(!ixists){\r\n\t\t\t\t\tmahImages = [categoryDetailData.cover, ...mahImages]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCoverImageId(categoryDetailData.cover['id']);\r\n\t\t\t}\r\n\t\r\n\t\t\t\t// @ts-ignore\r\n          setmyImages(mahImages);\r\n          \r\n\r\n    }\r\n  }, [categoryDetailData]);\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'category',\r\n          itemId: categoryDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'category',\r\n          itemId: categoryDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      openSuccessNotification('Set as thumbnail!');\r\n      // const positionInBrand = () => {\r\n      //     return brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n\r\n      // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n      // if (prevItem) {\r\n      //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n      //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n      //     setBrandList(updateBrandList);\r\n      // }\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const onSwitchChange = (checked: any) => {\r\n    setisparentcategoryChecked(checked);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleThumbnailImageDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myThumbnailImage &&\r\n      myThumbnailImage.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    if (newImages.length > 0) {\r\n      setmyThumbnailImage(newImages);\r\n    } else setmyThumbnailImage(false);\r\n  };\r\n\r\n  const onChangeSelect = (value) => {\r\n    setselectedParentId(value);\r\n  };\r\n\r\n  function getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  function beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!');\r\n    }\r\n\r\n    getBase64(file, (imageUrl) => {\r\n      setImageUrl(imageUrl);\r\n      setImagefile(file);\r\n      const setNewIcon = async () => {\r\n        const formData = new FormData();\r\n        formData.append('icon', file);\r\n        // const addCategoryRes = await handleAddCategoryFetch({\r\n        // \tbody: formData,\r\n        // });\r\n        const res = await handleUpdateCategoryIconFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id: categoryDetailData.id,\r\n            },\r\n          },\r\n          body: formData,\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (res && res.status === 'ok') {\r\n          openSuccessNotification('Category Icon updated!');\r\n        } else {\r\n          openErrorNotification(\r\n            \"Couldn't update category icon, Something went wrong\"\r\n          );\r\n        }\r\n      };\r\n\r\n      setNewIcon();\r\n      setLoadingThumbnail(false);\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div className='ant-upload-text'>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n      const iconUrl = categoryDetailData.icon && categoryDetailData.icon;\r\n\r\n      setImageUrl(iconUrl);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n      const metaTags =\r\n        categoryDetailData.metaTags && categoryDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        categoryDetailData.bn &&\r\n        categoryDetailData.bn['metaTags'] &&\r\n        categoryDetailData.bn['metaTags'].split(',');\r\n\r\n\r\n      setTags(metaTags || []);\r\n      setBnTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  // console.log('addnewCategoryTags777', tags);\r\n  // console.log('categoryDetailData', categoryDetailData);\r\n  // console.log('shitThere', myImages);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...categoryDetailData,\r\n        ...(categoryDetailData &&\r\n          Object.keys(categoryDetailData).length > 0 && {\r\n            bnMetaTitle:\r\n              categoryDetailData['bn'] &&\r\n              categoryDetailData['bn'].metaTitle &&\r\n              categoryDetailData['bn'].metaTitle,\r\n            bnMetaDescription:\r\n              categoryDetailData['bn'] &&\r\n              categoryDetailData['bn'].metaDescription &&\r\n              categoryDetailData['bn'].metaDescription,\r\n            bnName:\r\n              categoryDetailData['bn'] &&\r\n              categoryDetailData['bn'].name &&\r\n              categoryDetailData['bn'].name,\r\n            bnDescription:\r\n              categoryDetailData['bn'] &&\r\n              categoryDetailData['bn'].description &&\r\n              categoryDetailData['bn'].description,\r\n          }),\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Edit Category'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name'\r\n              value={values.name}\r\n              placeHolder={'grocery,fashion'}\r\n              name='name'\r\n              isError={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && addCategoryState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && addCategoryState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('name');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Name'\r\n              value={values.bnName}\r\n              placeHolder={'মুদিখানা,ফ্যাশন'}\r\n              name='bnName'\r\n              isError={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && addCategoryState.error['error']['bnName'])\r\n              }\r\n              errorString={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && addCategoryState.error['error']['bnName'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnName');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Description'\r\n              value={values.description}\r\n              placeholder={'This category...'}\r\n              name='description'\r\n              isError={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['description'])\r\n              }\r\n              errorString={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['description'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('description');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Description'\r\n              value={values.bnDescription}\r\n              placeholder={'এই ক্যাটাগড়ি...'}\r\n              name='bnDescription'\r\n              isError={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnDescription');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Display Order'\r\n              value={values.displayOrder}\r\n              placeHolder={'1,3,7'}\r\n              name='displayOrder'\r\n              type='number'\r\n              isError={\r\n                (touched.displayOrder && errors.displayOrder) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['displayOrder'])\r\n              }\r\n              errorString={\r\n                (touched.displayOrder && errors.displayOrder) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['displayOrder'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('displayOrder');\r\n              }}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '25px',\r\n              }}\r\n            ></div>\r\n\r\n            <div className='switchLabelContainer'>\r\n              <Switch\r\n                checked={isparentCategoryChecked}\r\n                defaultChecked\r\n                onChange={onSwitchChange}\r\n              />\r\n              <div className='switchLabelContainer-textContainer'>\r\n                <h5>Top level Category</h5>\r\n                <h5 className='switchLabelContainer-desc'>\r\n                  Disable to select a Parent Category\r\n                </h5>\r\n              </div>\r\n            </div>\r\n\r\n            {!isparentCategoryChecked && (\r\n              <>\r\n                <h3 className='inputFieldLabel'>Parent Category</h3>\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: 300 }}\r\n                  placeholder='Select a Parent Category'\r\n                  optionFilterProp='children'\r\n                  onChange={onChangeSelect}\r\n                  // onFocus={onFocus}\r\n                  // onBlur={onBlur}\r\n                  // onSearch={onSearch}\r\n                  filterOption={(input, option: any) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {categoryList.length > 0 &&\r\n                    categoryList.map((category) => {\r\n                      return (\r\n                        <Option value={category.id}>{category.name}</Option>\r\n                      );\r\n                    })}\r\n                </Select>\r\n              </>\r\n            )}\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            />\r\n\r\n            <div className='addproductSection-left-header'>\r\n              <h3 className='inputFieldLabel'>Icon </h3>\r\n              <Tooltip\r\n                placement='left'\r\n                title={'Add Icon image for this category'}\r\n              >\r\n                <a href='###'>\r\n                  <InfoCircleOutlined />\r\n                </a>\r\n              </Tooltip>\r\n            </div>\r\n\r\n            <Upload\r\n              style={{\r\n                borderRadius: '8px',\r\n              }}\r\n              name='avatar'\r\n              listType='picture-card'\r\n              className='avatar-uploader'\r\n              showUploadList={false}\r\n              beforeUpload={beforeUpload}\r\n              multiple={false}\r\n            >\r\n              {imageUrl ? (\r\n                <img src={imageUrl} alt='avatar' style={{ width: '100%' }} />\r\n              ) : (\r\n                uploadButton\r\n              )}\r\n            </Upload>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            />\r\n\r\n            <div\r\n              className='addproductSection-left-header'\r\n              style={{\r\n                marginBottom: '-5px',\r\n              }}\r\n            >\r\n              <h3 className='inputFieldLabel'>Images</h3>\r\n              {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n            </div>\r\n\r\n            <div className='aboutToUploadImagesContainer'>\r\n              {categoryDetailData &&\r\n                Object.keys(categoryDetailData).length > 0 && (\r\n                  <>\r\n                    {myImages &&\r\n                      // @ts-ignore\r\n                      myImages.length > 0 &&\r\n                      myImages.map((image, index) => {\r\n                        return (\r\n                          <div className='aboutToUploadImagesContainer__item'>\r\n                            <div\r\n                              className='aboutToUploadImagesContainer__item-imgContainer'\r\n                              onClick={() => {\r\n                                setCoverImageId(image.id);\r\n                                handleSetImageAsThumnail(image);\r\n                              }}\r\n                            >\r\n                              <img src={image.cover} alt={image.alt} />\r\n                            </div>\r\n\r\n                            <span\r\n                              onClick={() => {\r\n                                handleImagesDelete(image.id);\r\n                                handleDetachSingleImage(image.id);\r\n                              }}\r\n                              className='aboutToUploadImagesContainer__item-remove'\r\n                            >\r\n                              <CloseOutlined />\r\n                            </span>\r\n\r\n                            {coverImageId === image.id ? (\r\n                              <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                <CheckOutlined />\r\n                              </span>\r\n                            ) : (\r\n                              !coverImageId &&\r\n                              index === 0 && (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                  <CheckOutlined />\r\n                                </span>\r\n                              )\r\n                            )}\r\n                          </div>\r\n                        );\r\n                      })}\r\n\r\n                    <Tooltip title={'Attach images'}>\r\n                      <div\r\n                        onClick={() => {\r\n                          setvisible(true);\r\n                          setisModalOpenForImages(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'\r\n                      >\r\n                        {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                        <FileImageFilled />\r\n                        {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                          <PlusOutlined />\r\n                        </span>\r\n                      </div>\r\n                    </Tooltip>\r\n                  </>\r\n                )}\r\n            </div>\r\n\r\n            <Input\r\n              label='Meta title'\r\n              value={values.metaTitle}\r\n              placeHolder={'category...'}\r\n              name='metaTitle'\r\n              isError={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && addCategoryState.error['error']['metaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && addCategoryState.error['error']['metaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaTitle');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Meta title'\r\n              value={values.bnMetaTitle}\r\n              placeHolder={'ক্যাটাগড়ি...'}\r\n              name='bnMetaTitle'\r\n              isError={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnMetaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnMetaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaTitle');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Meta description'\r\n              value={values.metaDescription}\r\n              placeholder={'meta...'}\r\n              name='metaDescription'\r\n              isError={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['metaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['metaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaDescription');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Meta Description'\r\n              value={values.bnMetaDescription}\r\n              placeholder={'এইয় মেট...'}\r\n              name='bnMetaDescription'\r\n              isError={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnMetaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnMetaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaDescription');\r\n              }}\r\n            />\r\n\r\n            <h3 className='inputFieldLabel'>Meta Tags (grocery,fashion)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setTags}\r\n              tags={tags}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h3 className='inputFieldLabel'>BN Meta Tags (মুদিখানা,ফ্যাশন)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setBnTags}\r\n              tags={bnTags}\r\n            />\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisible}\r\n            visible={visible}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            setmyThumbnailImage={setmyThumbnailImage}\r\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n            isModalOpenForImages={isModalOpenForImages}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CategoryEdit from \"./CategoryEdit\";\r\nimport CategoryNewEdit from \"./CategoryNewEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    roles?: any;\r\n}\r\n\r\nconst NewBrandDetail = ({roles}: Props) => {\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const categoryId = params['id'];\r\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\r\n    const [categoryDetail,setcategoryDetail] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(categoryDetailDataRes){\r\n                  // @ts-ignore\r\n                setcategoryDetail(categoryDetailDataRes)\r\n            }\r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryProducts = async () => {\r\n            await handleCategoryProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryProducts();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n    console.log('categoryProductsState', categoryProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n    const row = categoryDetailState.done && categoryDetail && categoryDetail['image'] ? getImagesInCollumn(categoryDetail['image']) : [];\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Category Detail\r\n                </h3>\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <CategoryNewEdit\r\n                            addNewCategoryVisible={categoryEditVisible}\r\n                            setAddNewCategoryVisible={setCategoryEditVisible}\r\n                            categoryDetailData={categoryDetail}\r\n                            setcategoryDetailData={setcategoryDetail}\r\n                        />\r\n\r\n\r\n                {isAccess('postCatalogue',roles) && (\r\n                            <Button\r\n                            onClick={() => setCategoryEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                    </Button>\r\n                 )}\r\n\r\n                        \r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={categoryDetailState.isLoading}>\r\n                {categoryDetailState.done && categoryDetail && !(Object.keys(categoryDetail).length > 0) && (\r\n                    <Empty description='No Category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\r\n                                <img src={categoryDetail['cover'] && categoryDetail['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {categoryDetail['name']}\r\n                                </h2>\r\n                                <h3>\r\n                                    {categoryDetail['description']}\r\n                                </h3>\r\n                                <h3>\r\n                                    Category type: <span>\r\n                                        {categoryDetail['type']}\r\n                                    </span>\r\n                                </h3>\r\n\r\n                                {categoryDetail['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {categoryDetail['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {categoryDetail['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetail['icon'] && categoryDetail['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img \r\n                                                            alt='..'\r\n                                                            src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['subCategory'] && categoryDetail['subCategory'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Child Categories\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='smallcatCardContainer'>\r\n                                    {categoryDetail['subCategory'].map(subCat => {\r\n                                        return (\r\n                                            <div\r\n                                                onClick={() => history.push(`/admin/category/${subCat.id}`)}\r\n                                                className='smallcatCardContainer__card'>\r\n                                                <div className='smallcatCardContainer__card-coverbox'>\r\n                                                    <img src={subCat.cover} alt=\"\" />\r\n                                                </div>\r\n                                                <div className='smallcatCardContainer__card-info'>\r\n                                                    <h3>\r\n                                                        {subCat.name}\r\n                                                    </h3>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\r\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists in this category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n\r\n                            size='small'\r\n                            dataSource={categoryProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                                // go to product detail\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n<Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    roles: state.globalState,\r\n  })\r\n  \r\n  // @ts-ignore\r\n  export default connect(mapStateToProps, null)(NewBrandDetail);\r\n  \r\n  \r\n  \r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\ninterface Props {\r\n  label?: string;\r\n  type?: string;\r\n  defaultValue?: string;\r\n  value?: string;\r\n  onChange?: any;\r\n  disabled?: boolean;\r\n  isError?: boolean;\r\n  errorString?: string;\r\n  name?: string;\r\n  size?: any;\r\n  min?: any;\r\n}\r\n\r\nconst Demo = ({\r\n  min,\r\n  label,\r\n  type,\r\n  defaultValue,\r\n  value,\r\n  onChange,\r\n  disabled,\r\n  isError,\r\n  errorString,\r\n  name,\r\n  size = 'middle',\r\n}: Props) => {\r\n  return (\r\n    <>\r\n      {label && <h3 className='inputFieldLabel-small'>{label}</h3>}\r\n\r\n      <Form.Item\r\n        validateStatus={isError ? 'error' : ''}\r\n        // hasFeedback validateStatus=\"success\"\r\n        help={errorString}\r\n        // rules={[{ required: true }]}\r\n      >\r\n        <Input\r\n          min={min}\r\n          type={type}\r\n          size={size}\r\n          allowClear\r\n          name={name}\r\n          disabled={disabled}\r\n          value={value}\r\n          onChange={onChange}\r\n          className='inputclassName-small'\r\n        />\r\n      </Form.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","import React from 'react';\r\nimport { notification } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Succeed',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <ExclamationCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nexport {\r\n    openSuccessNotification,\r\n    openErrorNotification\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('selectedTags', selectedTags)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Tag found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='top, hot'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Select, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n\tsetBrandId?: any;\r\n\tbrandId?: any;\r\n\tproductDetailState?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId, brandId, productDetailState }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [selectedBrandId, setSelectedBrandId] = useState('');\r\n\tconst [brandState, handleTagListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\tfunction onChange(value) {\r\n\t\tsetSelectedBrandId(value);\r\n\t\tsetBrandId(value);\r\n\t\t// console.log(`selected ${value}`);\r\n\t}\r\n\r\n\tfunction onBlur() {\r\n\t\t// console.log('blur');\r\n\t}\r\n\r\n\tfunction onFocus() {\r\n\t\t// console.log('focus');\r\n\t}\r\n\r\n\tfunction onSearch(val) {\r\n\t\t// console.log('search:', val);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setBrands = async () => {\r\n\t\t\tconst brandListRes = await handleTagListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (brandListRes && brandListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst brandOptions = brandListRes.map((brand) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: brand.id,\r\n\t\t\t\t\t\tname: brand.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(brandOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetBrands();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div></div>\r\n\r\n\t\t\t{brandState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t{brandState.done && !(brandState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No Brand found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{brandState.done && brandState.data && brandState.data.length > 0 && options.length > 0 && (\r\n\r\n\t\t\t\t<Select\r\n\t\t\t\t\tshowSearch\r\n\t\t\t\t\tstyle={{ width: '210px', borderRadius: '6px' }}\r\n\t\t\t\t\tplaceholder='Select a Brand'\r\n\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonFocus={onFocus}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tonSearch={onSearch}\r\n\t\t\t\t\tdefaultValue={brandId}\r\n\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t>\r\n\t\t\t\t\t{brandState.done &&\r\n\t\t\t\t\t\tbrandState.data.length > 0 &&\r\n\t\t\t\t\t\toptions.map((option) => {\r\n\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</Select>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{/* \r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n\tcategoryOptions?: any;\r\n\tsetCategoryOptions?: any;\r\n}\r\n\r\n\r\nconst Categories = ({ setcategoryIds, categoryOptions, setCategoryOptions }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categorySelectist');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\t// console.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tconst checkedIds = checkedKeys.checked || [];\r\n\t\tsetcategoryIds(checkedIds);\r\n\t\tsetCategoryOptions(checkedIds);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...cat\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option && option.title.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\r\n\t\t\t{categoryState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{categoryState.done && !(categoryState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No category found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{categoryState.done && categoryState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='middle'\r\n\t\t\t\t\t\t\tplaceholder='cloths, grocery'\r\n\t\t\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t// marginLeft: \"-20px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{options.length > 0 && (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tcheckable\r\n\t\t\t\t\t\t\t\tcheckedKeys={categoryOptions}\r\n\t\t\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t\t\t\t\tcheckStrictly={true}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\r\n\t\t\t)}\r\n\t\t\t{/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Spin  } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"../product/Tags\";\r\nimport Brands from \"../product/Brands\";\r\nimport Categories from \"../product/Categories\";\r\nimport Pricing from \"../product/Pricing\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: '',\r\n    bnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n    productDetailData?:any; \r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList, productDetailData }: Props) => {\r\n\r\n  \r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [productList,setProductList] = useState([]);\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('2');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n    const [productIds,setProductIds] = useState([]); \r\n\r\n\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'updateBundle');\r\n\r\n    useEffect(() => {\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        console.log('productList',productList);\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n    \r\n            if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n                const aboutToUpdatedImageIds = []; \r\n    \r\n                if(imagesIds && imagesIds.length > 0){\r\n                    imagesIds.forEach(imageId => {\r\n                        if(productDetailData && productDetailData['image']){\r\n                            if(!productDetailData['image'].includes(imageId)){\r\n                                aboutToUpdatedImageIds.push(imageId)\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n    \r\n          \r\n                if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                    await handleAttachImageToItemMultipleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                collection: 'product',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        },\r\n                        body: {\r\n                            image: aboutToUpdatedImageIds\r\n                        }\r\n                    });\r\n                }\r\n                else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                    await handleAttachImageToItemSingleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                imageId: aboutToUpdatedImageIds[0].id,\r\n                                collection: 'product',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        \r\n            \r\n\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products,\r\n\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n\r\n                // startDate, endDate,\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Updated');\r\n  \r\n\r\n            setAddNewCategoryVisible(false)\r\n\r\n\r\n            const positionInAttribute = () => {\r\n\t\t\t\treturn bundleList.map(item => item.id).indexOf(productDetailData.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, bundleList[index], { ...productDetailData, ...addProductRes });\r\n\t\t\tconst updateProductList = [...bundleList.slice(0, index), updatedItem, ...bundleList.slice(index + 1)];\r\n            setBundleList(updateProductList);\r\n            \r\n\r\n\r\n\r\n\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(productDetailState['data'] && productDetailState['data']['products'] && productDetailState['data']['products'].length > 0){\r\n            const productIds = productDetailState['data']['products'].map(item => {\r\n              return {\r\n                ...item,\r\n                id: item._id,\r\n              }\r\n            }); \r\n            setProductIds(productIds); \r\n            const productList = productDetailState['data'].products.map(item => {\r\n                return {\r\n                    _id: item._id,\r\n                    variation: item.variation,\r\n                    quantity: item.quantity,\r\n                    totalPrice: item.totalPrice \r\n                }\r\n            }); \r\n           setProductList(productList); \r\n\r\n        }; \r\n        \r\n        console.log(\"productDetailState['data']\",productDetailState['data']);\r\n    },[productDetailState['done']])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds && productIds.length > 0 && productList) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            // const categoryIds = productDetailData.category.map(item => item.id);\r\n\r\n            const categoryIds = productDetailData.category;\r\n            setCategoryOptions(categoryIds);\r\n            setcategoryIds(categoryIds); \r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n        }\r\n\r\n        if (productDetailData && productDetailData.anotherPrice && productDetailData.anotherPrice) {\r\n            setPrice(productDetailData.anotherPrice); \r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !(categoryOptions.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data.metaTags){\r\n            const metaTags = productDetailState.data.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \r\n            setMetaTags(metaTags)\r\n            setBnMetaTags(bnMetaTags)\r\n        }\r\n\r\n    },[productDetailState['done']])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues,\r\n                    ...{\r\n                    ...productDetailData,\r\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && productDetailState['data']['bn'] && {\r\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\r\n                        bnName: productDetailState['data']['bn'].name,\r\n                        metaUnit: productDetailState['data']['bn'].unit,\r\n                        bnDescription: productDetailState['data']['bn'].description,\r\n                      }),\r\n                } }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Bundle\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Bundle Information *\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n                                    \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n                                                <h4>\r\n                                                    Price *\r\n\t\t\t                                \t</h4>\r\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                                                        <InputSmall\r\n                                                            label='Regular'\r\n                                                            value={price.regular}\r\n                                                            name='regular'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                regular: e.target.value\r\n                                                            })}\r\n                                                        />\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n                                                        <InputSmall\r\n                                                            label='Offer'\r\n                                                            value={price.offer}\r\n                                                            name='offer'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                offer: e.target.value\r\n                                                            })}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        date={startDate}\r\n                                                        label='Start Date'\r\n                                                        onChange={handleStartDataChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        date={endDate}\r\n                                                        label='End Date'\r\n                                                        onChange={handleEndDataChange} />\r\n\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    {/* <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                <div className='addProductGridContainer__item-header'>\r\n                                    <h3>\r\n                                        Image\r\n                                </h3>\r\n\r\n                                    <Tooltip\r\n                                        placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                        <a href='###'>\r\n                                            <InfoCircleOutlined />\r\n                                        </a>\r\n                                    </Tooltip>\r\n</div>\r\n\r\n<div\r\n    style={{\r\n        padding: \"10px\"\r\n    }}\r\n    className='aboutToUploadImagesContainer'>\r\n    {productDetailState.isLoading && (\r\n        <div style={{\r\n            padding: '20px 0'\r\n        }}>\r\n            <Spin />\r\n        </div>\r\n    )}\r\n    {productDetailState.done && (\r\n        <>\r\n            {myImages &&\r\n                // @ts-ignore\r\n                myImages.length > 0 && myImages.map((image, index) => {\r\n                    return (\r\n                        <div className='aboutToUploadImagesContainer__item'>\r\n                            <div\r\n                                className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                onClick={() => {\r\n                                    setCoverImageId(image.id);\r\n                                    handleSetImageAsThumnail(image);\r\n                                }}\r\n                            >\r\n                                <img src={image.cover} alt={image.alt} />\r\n                            </div>\r\n\r\n                            <span\r\n                                onClick={() => {\r\n                                    handleImagesDelete(image.id)\r\n                                    handleDetachSingleImage(image.id)\r\n                                }\r\n\r\n                                }\r\n                                className='aboutToUploadImagesContainer__item-remove'>\r\n                                <CloseOutlined />\r\n                            </span>\r\n\r\n\r\n                            {coverImageId === image.id ? (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                </span>\r\n                            ) : !coverImageId && index === 0 && (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                </span>\r\n                            )}\r\n\r\n\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n\r\n            <Tooltip\r\n                title={'Attach images'}>\r\n\r\n                <div\r\n                    onClick={() => {\r\n                        setvisible(true);\r\n                        setisModalOpenForImages(true);\r\n                        setisModalOpenForThumbnail(false);\r\n                    }}\r\n                    className='aboutToUploadImagesContainer__uploadItem'>\r\n                    {/* <FileAddOutlined />\r\n            <FileImageTwoTone />\r\n            <FileImageOutlined /> */}\r\n                    <FileImageFilled />\r\n                    {/* <h5>\r\n             Select From Library\r\n    <     /h5> */}\r\n                    <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                        <PlusOutlined />\r\n                    </span>\r\n                </div>\r\n            </Tooltip>\r\n        </>\r\n    )}\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n<div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n    Meta Data\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n<div className='addProductGridContainer__item-body'>\r\n\r\n                \r\n<Input\r\nlabel='Meta title'\r\nvalue={values.metaTitle}\r\nplaceHolder={'category...'}\r\nname='metaTitle'\r\nisError={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\nerrorString={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaTitle')\r\n}}\r\n/>\r\n\r\n<Input\r\nlabel='BN Meta title'\r\nvalue={values.bnMetaTitle}\r\nplaceHolder={'ক্যাটাগড়ি...'}\r\nname='bnMetaTitle'\r\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaTitle');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='Meta description'\r\nvalue={values.metaDescription}\r\nplaceholder={'meta...'}\r\nname='metaDescription'\r\nisError={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\nerrorString={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaDescription');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='BN Meta Description'\r\nvalue={values.bnMetaDescription}\r\nplaceholder={'এইয় মেট...'}\r\nname='bnMetaDescription'\r\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaDescription');\r\n}}\r\n/>\r\n\r\n<h3 className='inputFieldLabel'>\r\nMeta Tags (grocery,fashion)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n<div style={{\r\nmarginTop:'15px'\r\n}}></div>\r\n\r\n<h3 className='inputFieldLabel'>\r\nBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setBnMetaTags}\r\ntags={bnMetaTags}\r\n/>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories *\r\n\t\t\t                                \t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n    const [isProductIdsfirstTime,setProductIdsfirstTime] = useState(false); \r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        sortItem: 'added',\r\n                        sortOrderValue: '-1'\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productIds && productIds.length > 0 && !isProductIdsfirstTime){\r\n            const selectItems = productIds.map((tag) => {\r\n                return tag.id\r\n            });\r\n\r\n            setselectedOptions(selectItems);\r\n            // setoptions(tagOptions);\r\n        }; \r\n\r\n    },[productIds])\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n        console.log('selectItems',selectItems); \r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import lib \r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    setProductList?: any;\r\n    productList?: any;\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productList,\r\n    setProductList,\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    console.log('productDetailStateByOrder',productDetailState); \r\n    \r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const positionInAttribute = () => {\r\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\r\n    //     }\r\n\r\n    //     const index = positionInAttribute();\r\n\r\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n    //     setProductList(updateProductList);\r\n\r\n    // }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateProductList = productList.filter(item => item._id !== productId);\r\n        setProductList(updateProductList);\r\n    }\r\n\r\n\r\n    const handleChangeQuantity = async (value) => {\r\n        if (value === 'minus') {\r\n            if (quantity === 1) {\r\n                return;\r\n            }\r\n\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList);\r\n\r\n\r\n        } else {\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList)\r\n\r\n        }\r\n    };\r\n\r\n\r\n    const convertAttributeValuesToStringValue = (attribute) => {\r\n        const value = [];\r\n\r\n        let attributeValues = Object.values(attribute);\r\n        attributeValues.forEach(attributeValue => {\r\n            // @ts-ignore\r\n            value.push(attributeValue)\r\n        })\r\n\r\n        return value.join(',');\r\n    };\r\n\r\n\r\n\r\n\r\n    const getPricingOptions = (pricing) => {\r\n        if (pricing && pricing.length > 0) {\r\n            const pricingOptions = [];\r\n\r\n            pricing.forEach(pricingItem => {\r\n\r\n                if (Object.values(pricingItem.attribute).length > 0 && pricingItem._id) {\r\n                    let pricingOption = {\r\n                        value: pricingItem._id,\r\n                        label: `${convertAttributeValuesToStringValue(pricingItem.attribute) || ''}`\r\n                    }\r\n                    // @ts-ignore\r\n                    pricingOptions.push(pricingOption)\r\n                }\r\n\r\n            })\r\n\r\n            return pricingOptions;\r\n        }\r\n        else return false\r\n    };\r\n\r\n    const pricingOptions = item && Object.keys(item).length > 0 ? getPricingOptions(item.pricing) : [];\r\n\r\n\r\n    console.log('pricingOptions', pricingOptions);\r\n\r\n    const handleAttributeChange = (tagId) => {\r\n        setSelectedVariationId(tagId);\r\n\r\n        const positionInAttribute = () => {\r\n            return productList.map(item => item._id).indexOf(productId);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, productList[index], { ...item, quantity: 1 });\r\n        const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n        setProductList(updateAttributeList);\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getPriceByVariationId = (id) => {\r\n            const pricing = item && Object.keys(item).length > 0 ? item.pricing : false;\r\n            if (pricing) {\r\n                const priceItem = pricing.find(pricingItem => pricingItem._id === id);\r\n                console.log('priceItem', id);\r\n\r\n                if (priceItem && priceItem.price.regular) {\r\n                    return priceItem.price.offer\r\n                        && parseInt(priceItem.price.offer)\r\n                        ? priceItem.price.offer : priceItem.price.regular\r\n                }\r\n                else return false;\r\n            }\r\n        }\r\n\r\n        if (selectedVariationId) {\r\n            const price = getPriceByVariationId(selectedVariationId);\r\n            setModifiedPrice(price);\r\n        }\r\n\r\n    }, [selectedVariationId]);\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            {item && Object.keys(item).length > 0 && (\r\n                <div className='cart-item' key={''}>\r\n                    <div className='cart-item-quantityCounter'>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('plus');\r\n                            }}\r\n                            className='fa fa-chevron-up'\r\n\r\n                        ></i>\r\n                        <p className='item-amount'>{quantity}</p>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('minus');\r\n                            }}\r\n                            className='fa fa-chevron-down'\r\n\r\n                        ></i>\r\n                    </div>\r\n\r\n\r\n                    <img\r\n\r\n                        src={item['cover'] && item['cover']}\r\n                        alt='Img'\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    />\r\n                    <div className='cart-item-info'>\r\n                        <h4\r\n\r\n                        >\r\n                            {item['name']}\r\n                        </h4>\r\n                        <h5\r\n                        >\r\n                            {modifiedPrice || item['price']}\r\n                        </h5>\r\n\r\n\r\n                        {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))}\r\n\r\n                        {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                    </div>\r\n                    {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs  } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"../product/Tags\";\r\nimport Brands from \"../product/Brands\";\r\nimport Categories from \"../product/Categories\";\r\nimport Pricing from \"../product/Pricing\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: '',\r\n    bnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList }: Props) => {\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addBundle');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        console.log('productList',productList);\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products,\r\n                // startDate, endDate,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Created');\r\n            console.log('addProductBundleRes',addProductRes);\r\n\r\n            setBundleList([{\r\n                id: addProductRes['_id'] || '',\r\n                key: addProductRes['_id'] || '',\r\n                name: addProductRes['name'] || '',\r\n                description: addProductRes['description'] || '',\r\n                // @ts-ignore\r\n                ...addProductRes\r\n            },...bundleList])\r\n            setAddNewCategoryVisible(false)\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n    console.log('productlistbundle',productList)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds && productIds.length > 0 && productList) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    const handleStartDataChange = (date, dateString) => {\r\n        setStartDate(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleEndDataChange = (date, dateString) => {\r\n        setEndDate(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Bundle\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Bundle Information *\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n                                    \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n                                                <h4>\r\n                                                    Price *\r\n\t\t\t                                \t</h4>\r\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                                                        <InputSmall\r\n                                                            label='Regular'\r\n                                                            value={price.regular}\r\n                                                            name='regular'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                regular: e.target.value\r\n                                                            })}\r\n                                                        />\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n                                                        <InputSmall\r\n                                                            label='Offer'\r\n                                                            value={price.offer}\r\n                                                            name='offer'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                offer: e.target.value\r\n                                                            })}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        date={startDate}\r\n                                                        label='Start Date'\r\n                                                        onChange={handleStartDataChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        date={endDate}\r\n                                                        label='End Date'\r\n                                                        onChange={handleEndDataChange} />\r\n\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n                                            </h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                            <div className='aboutToUploadImagesContainer'>\r\n                                                {myImages &&\r\n                                                    // @ts-ignore\r\n                                                    myImages.length > 0 && myImages.map((image, index) => {\r\n                                                        return (\r\n                                                            <div className='aboutToUploadImagesContainer__item'>\r\n                                                                <div\r\n                                                                    className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                    onClick={() => setCoverImageId(image.id)}\r\n                                                                >\r\n                                                                    <img src={image.cover} alt={image.alt} />\r\n                                                                </div>\r\n\r\n                                                                <span\r\n                                                                    onClick={() => handleImagesDelete(image.id)}\r\n                                                                    className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                    <CloseOutlined />\r\n                                                                </span>\r\n\r\n\r\n                                                                {coverImageId === image.id ? (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                ) : !coverImageId && index === 0 && (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })}\r\n\r\n\r\n                                                <Tooltip\r\n                                                    title={'Attach images'}>\r\n\r\n                                                    <div\r\n                                                        onClick={() => {\r\n                                                            setvisible(true);\r\n                                                            setisModalOpenForImages(true);\r\n                                                            setisModalOpenForThumbnail(false);\r\n                                                        }}\r\n                                                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                        {/* <FileAddOutlined />\r\n                                                            <FileImageTwoTone />\r\n                                                            <FileImageOutlined /> */}\r\n                                                        <FileImageFilled />\r\n                                                        {/* <h5>\r\n                                                                Select From Library\r\n                                                        <     /h5> */}\r\n                                                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                            <PlusOutlined />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n    Meta Data\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n<div className='addProductGridContainer__item-body'>\r\n\r\n                \r\n<Input\r\nlabel='Meta title'\r\nvalue={values.metaTitle}\r\nplaceHolder={'category...'}\r\nname='metaTitle'\r\nisError={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\nerrorString={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaTitle')\r\n}}\r\n/>\r\n\r\n<Input\r\nlabel='BN Meta title'\r\nvalue={values.bnMetaTitle}\r\nplaceHolder={'ক্যাটাগড়ি...'}\r\nname='bnMetaTitle'\r\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaTitle');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='Meta description'\r\nvalue={values.metaDescription}\r\nplaceholder={'meta...'}\r\nname='metaDescription'\r\nisError={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\nerrorString={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaDescription');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='BN Meta Description'\r\nvalue={values.bnMetaDescription}\r\nplaceholder={'এইয় মেট...'}\r\nname='bnMetaDescription'\r\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaDescription');\r\n}}\r\n/>\r\n\r\n<h3 className='inputFieldLabel'>\r\nMeta Tags (grocery,fashion)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n<div style={{\r\nmarginTop:'15px'\r\n}}></div>\r\n\r\n<h3 className='inputFieldLabel'>\r\nBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setBnMetaTags}\r\ntags={bnMetaTags}\r\n/>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories *\r\n\t\t\t                                \t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment';\r\n\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleQuickEdit from \"./ProductBundleQuickEdit\"\r\nimport AddNewProductBundle from \"./AddNewProductBundle\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Bundle Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteBundle');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Bundle');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Price\"\r\n                    dataIndex=\"price\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Product\"\r\n                    dataIndex=\"productCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                {/* <Column\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                <Moment >\r\n                                    {text}\r\n                                </Moment>\r\n\r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                /> */}\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Quick Edit Bundle'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <ProductBundleQuickEdit\r\n             productList={data}\r\n             setProductList={setTagList}\r\n             setAddNewCategoryVisible={setvisible}\r\n             addNewCategoryVisible={visible}\r\n             productDetailData={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'bundleList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({\r\n                urlOptions:{\r\n                    params: {\r\n                      sortItem: 'added',\r\n                      sortOrderValue: '-1',\r\n                      productType: 'bundle'\r\n                    }\r\n                    }\r\n            });\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Bundles\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search bundles..\"\r\n                            onChange={e => handleSearch(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Bundle found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewProductBundle\r\n                productList={tagList}\r\n                setProductList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Spin  } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"../product/Tags\";\r\nimport Brands from \"../product/Brands\";\r\nimport Categories from \"../product/Categories\";\r\nimport Pricing from \"../product/Pricing\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: '',\r\n    bnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productDetailData?:any; \r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productDetailData }: Props) => {\r\n\r\n  \r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [productList,setProductList] = useState([]);\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('2');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n    const [productIds,setProductIds] = useState([]); \r\n\r\n\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'updateBundle');\r\n\r\n    useEffect(() => {\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        console.log('productList',productList);\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n    \r\n            if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n                const aboutToUpdatedImageIds = []; \r\n    \r\n                if(imagesIds && imagesIds.length > 0){\r\n                    imagesIds.forEach(imageId => {\r\n                        if(productDetailData && productDetailData['image']){\r\n                            if(!productDetailData['image'].includes(imageId)){\r\n                                aboutToUpdatedImageIds.push(imageId)\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n    \r\n          \r\n                if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                    await handleAttachImageToItemMultipleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                collection: 'product',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        },\r\n                        body: {\r\n                            image: aboutToUpdatedImageIds\r\n                        }\r\n                    });\r\n                }\r\n                else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                    await handleAttachImageToItemSingleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                imageId: aboutToUpdatedImageIds[0].id,\r\n                                collection: 'product',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        \r\n            \r\n\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products,\r\n\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n                \r\n                // startDate, endDate,\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Updated');\r\n  \r\n\r\n            setAddNewCategoryVisible(false)\r\n\r\n\r\n            // updat bundle detail data\r\n\r\n\r\n\r\n\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(productDetailState['data'] && productDetailState['data']['products'] && productDetailState['data']['products'].length > 0){\r\n            const productIds = productDetailState['data']['products'].map(item => {\r\n              return {\r\n                ...item,\r\n                id: item._id,\r\n              }\r\n            }); \r\n            setProductIds(productIds); \r\n            const productList = productDetailState['data'].products.map(item => {\r\n                return {\r\n                    _id: item._id,\r\n                    variation: item.variation,\r\n                    quantity: item.quantity,\r\n                    totalPrice: item.totalPrice \r\n                }\r\n            }); \r\n           setProductList(productList); \r\n\r\n        }; \r\n        \r\n        console.log(\"productDetailState['data']\",productDetailState['data']);\r\n    },[productDetailState['done']])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds && productIds.length > 0 && productList) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            // const categoryIds = productDetailData.category.map(item => item.id);\r\n\r\n            const categoryIds = productDetailData.category;\r\n            setCategoryOptions(categoryIds);\r\n            setcategoryIds(categoryIds); \r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n        }\r\n\r\n        if (productDetailData && productDetailData.anotherPrice && productDetailData.anotherPrice) {\r\n            setPrice(productDetailData.anotherPrice); \r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !(categoryOptions.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data.metaTags){\r\n            const metaTags = productDetailState.data.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \r\n            setMetaTags(metaTags)\r\n            setBnMetaTags(bnMetaTags)\r\n        }\r\n\r\n    },[productDetailState['done']])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues,\r\n                    ...{\r\n                    ...productDetailData,\r\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && productDetailState['data']['bn'] && {\r\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\r\n                        bnName: productDetailState['data']['bn'].name,\r\n                        metaUnit: productDetailState['data']['bn'].unit,\r\n                        bnDescription: productDetailState['data']['bn'].description,\r\n                      }),\r\n                } }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Bundle\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Bundle Information *\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n                                    \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n                                                <h4>\r\n                                                    Price *\r\n\t\t\t                                \t</h4>\r\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                                                        <InputSmall\r\n                                                            label='Regular'\r\n                                                            value={price.regular}\r\n                                                            name='regular'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                regular: e.target.value\r\n                                                            })}\r\n                                                        />\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n                                                        <InputSmall\r\n                                                            label='Offer'\r\n                                                            value={price.offer}\r\n                                                            name='offer'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                offer: e.target.value\r\n                                                            })}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        date={startDate}\r\n                                                        label='Start Date'\r\n                                                        onChange={handleStartDataChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        date={endDate}\r\n                                                        label='End Date'\r\n                                                        onChange={handleEndDataChange} />\r\n\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    {/* <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                <div className='addProductGridContainer__item-header'>\r\n                                    <h3>\r\n                                        Image\r\n                                </h3>\r\n\r\n                                    <Tooltip\r\n                                        placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                        <a href='###'>\r\n                                            <InfoCircleOutlined />\r\n                                        </a>\r\n                                    </Tooltip>\r\n</div>\r\n\r\n<div\r\n    style={{\r\n        padding: \"10px\"\r\n    }}\r\n    className='aboutToUploadImagesContainer'>\r\n    {productDetailState.isLoading && (\r\n        <div style={{\r\n            padding: '20px 0'\r\n        }}>\r\n            <Spin />\r\n        </div>\r\n    )}\r\n    {productDetailState.done && (\r\n        <>\r\n            {myImages &&\r\n                // @ts-ignore\r\n                myImages.length > 0 && myImages.map((image, index) => {\r\n                    return (\r\n                        <div className='aboutToUploadImagesContainer__item'>\r\n                            <div\r\n                                className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                onClick={() => {\r\n                                    setCoverImageId(image.id);\r\n                                    handleSetImageAsThumnail(image);\r\n                                }}\r\n                            >\r\n                                <img src={image.cover} alt={image.alt} />\r\n                            </div>\r\n\r\n                            <span\r\n                                onClick={() => {\r\n                                    handleImagesDelete(image.id)\r\n                                    handleDetachSingleImage(image.id)\r\n                                }\r\n\r\n                                }\r\n                                className='aboutToUploadImagesContainer__item-remove'>\r\n                                <CloseOutlined />\r\n                            </span>\r\n\r\n\r\n                            {coverImageId === image.id ? (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                </span>\r\n                            ) : !coverImageId && index === 0 && (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                </span>\r\n                            )}\r\n\r\n\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n\r\n            <Tooltip\r\n                title={'Attach images'}>\r\n\r\n                <div\r\n                    onClick={() => {\r\n                        setvisible(true);\r\n                        setisModalOpenForImages(true);\r\n                        setisModalOpenForThumbnail(false);\r\n                    }}\r\n                    className='aboutToUploadImagesContainer__uploadItem'>\r\n                    {/* <FileAddOutlined />\r\n            <FileImageTwoTone />\r\n            <FileImageOutlined /> */}\r\n                    <FileImageFilled />\r\n                    {/* <h5>\r\n             Select From Library\r\n    <     /h5> */}\r\n                    <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                        <PlusOutlined />\r\n                    </span>\r\n                </div>\r\n            </Tooltip>\r\n        </>\r\n    )}\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n    Meta Data\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n<div className='addProductGridContainer__item-body'>\r\n\r\n                \r\n<Input\r\nlabel='Meta title'\r\nvalue={values.metaTitle}\r\nplaceHolder={'category...'}\r\nname='metaTitle'\r\nisError={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\nerrorString={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaTitle')\r\n}}\r\n/>\r\n\r\n<Input\r\nlabel='BN Meta title'\r\nvalue={values.bnMetaTitle}\r\nplaceHolder={'ক্যাটাগড়ি...'}\r\nname='bnMetaTitle'\r\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaTitle');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='Meta description'\r\nvalue={values.metaDescription}\r\nplaceholder={'meta...'}\r\nname='metaDescription'\r\nisError={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\nerrorString={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaDescription');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='BN Meta Description'\r\nvalue={values.bnMetaDescription}\r\nplaceholder={'এইয় মেট...'}\r\nname='bnMetaDescription'\r\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaDescription');\r\n}}\r\n/>\r\n\r\n<h3 className='inputFieldLabel'>\r\nMeta Tags (grocery,fashion)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n<div style={{\r\nmarginTop:'15px'\r\n}}></div>\r\n\r\n<h3 className='inputFieldLabel'>\r\nBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setBnMetaTags}\r\ntags={bnMetaTags}\r\n/>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories *\r\n\t\t\t                                \t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n}\r\n\r\n\r\n\r\nconst CouponProducts = ({\r\n    productId,\r\n    quantity\r\n}: Props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n\r\n    useEffect(() => {\r\n        const getAndSetProduct = async () => {\r\n            await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n        };\r\n        getAndSetProduct();\r\n    }, []);\r\n\r\n\r\n    console.log('productDetailStatecoupon', productDetailState)\r\n\r\n\r\n    return (\r\n        <Skeleton\r\n            paragraph={{ rows: 2 }}\r\n            loading={productDetailState.isLoading}>\r\n            {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                <>\r\n                    <div className='couponDetailProductItem'>\r\n                        <div\r\n                            onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            className='couponDetailProductItem__cover'>\r\n                            <img src={productDetailState.data.cover && productDetailState.data.cover['cover']} alt=\"\" />\r\n                        </div>\r\n                        <div className='couponDetailProductItem__info'>\r\n                            <h2\r\n                                onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            >\r\n                                {productDetailState.data.name}\r\n                            </h2>\r\n                            <h3>\r\n                                {productDetailState.data.price}\r\n                            </h3>\r\n                            <h3>\r\n                                Quantity: {quantity}\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n        </Skeleton>\r\n    )\r\n}\r\n\r\n\r\nexport default CouponProducts; ","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n// import moment\r\nimport Moment from \"react-moment\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleEdit from \"./ProductBundleEdit\";\r\nimport CouponProducts from \"../coupon/CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n\r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailState.data && productDetailState.data['image'] ? getImagesInCollumn(productDetailState.data['image']) : [];\r\n\r\n\r\n    console.log('bundleDetail', productDetailState);\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Bundle Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                     <ProductBundleEdit\r\n                          setAddNewCategoryVisible={setProductEditVisible}\r\n                         addNewCategoryVisible={productEditVisible}\r\n                            productDetailData={productDetailState.data}\r\n\r\n                        /> \r\n                         <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button> \r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailState.data && !(Object.keys(productDetailState.data).length > 0) && (\r\n                    <Empty description='No Bundle Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailState.data['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailState.data['price']}\r\n                                </h4>\r\n\r\n                                {productDetailState.data['description'] && (\r\n                                    <h3>\r\n                                    {productDetailState.data['description']}\r\n                                    </h3>\r\n                                )}\r\n                              \r\n\r\n                                {/* {productDetailState.data['startDate'] && (\r\n                                    <h3>\r\n                                        START DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['startDate']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                                {productDetailState.data['endDate'] && (\r\n                                    <h3>\r\n                                        END DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['endDate']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )} */}\r\n\r\n\r\n\r\n                                {productDetailState.data['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailState.data['tags'] && productDetailState.data['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailState.data['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailState.data['category'] && productDetailState.data['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailState.data['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailState.data['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailState.data['icon'] && productDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['image'] && productDetailState.data['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailState.data['brand'] && Object.keys(productDetailState.data['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailState.data['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['brand']['cover'] && productDetailState.data['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['primaryCategory'] && Object.keys(productDetailState.data['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailState.data['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['primaryCategory']['cover'] && productDetailState.data['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n\r\n                        \r\n\r\n\r\n                    {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data['products'] && (\r\n                            <div className='brandDetailContainer__heading'>\r\n                                <h3>\r\n                                    Products\r\n                       </h3>\r\n                            </div>\r\n                        )\r\n                        }\r\n\r\n\r\n                        <div className='brandDetailContainer__body'>\r\n                            {productDetailState.done && productDetailState.data && productDetailState.data['products'] && !(productDetailState.data['products'].length > 0) && (\r\n                                <div style={{\r\n                                    marginTop: '100px'\r\n                                }}>\r\n                                    <Empty description='No Products exists for this Bundle' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                </div>\r\n                            )}\r\n\r\n                            {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                                <>\r\n                                    {productDetailState.data['products'] && productDetailState.data['products'].length > 0 &&\r\n                                        productDetailState.data['products'].map(product => {\r\n                                            return (\r\n                                                <CouponProducts\r\n                                                    quantity={product.quantity}\r\n                                                    productId={product['_id']} />\r\n                                            )\r\n                                        })}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'addBrand');\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\r\n\tconsole.log('brandImages',myImages);\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleUpdateBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: tags.join(','),\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([{\r\n\t\t\t\tid: addBrandRes['_id'] || '',\r\n\t\t\t\tkey: addBrandRes['_id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\tcover: addBrandRes['cover'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t},...brandList]); \r\n\t\t\t\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\t// console.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Brand\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'microsoft,apple'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'প্রান,নোকিয়া'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tplaceholder={'This brand...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ব্র্যান্ড...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\t\t\t!myImages || \r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t(myImages && !(myImages && myImages.length > 0)) ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : \"\"}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={false}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Spin,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Brand Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n};\r\n\r\ninterface Props {\r\n  brandDetailData?: any;\r\n  brandEditVisible?: any;\r\n  setBrandEditVisible?: any;\r\n  brandList?: any;\r\n  setBrandList?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  brandDetailData,\r\n  brandEditVisible,\r\n  setBrandEditVisible,\r\n  brandList,\r\n  setBrandList,\r\n}: Props) => {\r\n  const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch(\r\n    {},\r\n    'updateBrand'\r\n  );\r\n  const [brandDetailState, handleBrandDetailFetch] = useHandleFetch(\r\n    {},\r\n    'brandDetail'\r\n  );\r\n\r\n  const [\r\n    attachImageToItemMultipleState,\r\n    handleAttachImageToItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [\r\n    attachImageToItemSingleState,\r\n    handleAttachImageToItemSingleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [\r\n    detachImageFromItemMultipleState,\r\n    handleDetachImageFromItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n  const [myImages, setmyImages]: any = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const brandDetailRes = await handleBrandDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: brandDetailData.id,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [brandDetailData]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      brandDetailState.data &&\r\n      Object.keys(brandDetailState.data).length > 0\r\n    ) {\r\n      const images = brandDetailState.data.image;\r\n      if (images && images.length > 0) {\r\n        setmyImages(images);\r\n        setMyGoddamnImages(images);\r\n      }\r\n\r\n      if (brandDetailState.data.cover && brandDetailState.data.cover['id']) {\r\n        // @ts-ignore\r\n        setmyImages([brandDetailState.data.cover]);\r\n        setCoverImageId(brandDetailState.data.cover['id']);\r\n      }\r\n    }\r\n  }, [brandDetailState.data]);\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'brand',\r\n          itemId: brandDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'brand',\r\n          itemId: brandDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      openSuccessNotification('Set as thumbnail!');\r\n      // const positionInBrand = () => {\r\n      //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n\r\n      // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n      // if (prevItem) {\r\n      //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n      //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n      //     setBrandList(updateBrandList);\r\n      // }\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    console.log('myReadyToGoImages', myImages);\r\n\r\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n      // @ts-ignore\r\n      const images =\r\n        myImages && myImages.length > 0 ? myImages.map((item) => item.id) : [];\r\n\r\n      if (images[0] && images.length > 1) {\r\n        await handleAttachImageToItemMultipleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              collection: 'brand',\r\n              itemId: brandDetailData.id,\r\n            },\r\n          },\r\n          body: {\r\n            image: images,\r\n          },\r\n        });\r\n      } else if (images[0] && images.length < 1) {\r\n        await handleAttachImageToItemSingleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              imageId: images[0].id,\r\n              collection: 'brand',\r\n              itemId: brandDetailData.id,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    const updateBrandRes = await handleUpdateBrandFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: brandDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: values.description,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateBrandRes && updateBrandRes.status === 'ok') {\r\n      console.log('updateBrandRes', updateBrandRes);\r\n\r\n      setBrandList([\r\n        {\r\n          ...brandDetailData,\r\n          id: updateBrandRes['id'] || '',\r\n          key: updateBrandRes['id'] || '',\r\n          name: updateBrandRes['name'] || '',\r\n          description: updateBrandRes['description'] || '',\r\n          // @ts-ignore\r\n          ...updateBrandRes,\r\n        },\r\n        ...brandList,\r\n      ]);\r\n\r\n      openSuccessNotification('Brand Updated!');\r\n      setBrandEditVisible(false);\r\n\r\n      // const positionInBrand = () => {\r\n      //     return brandList.map(item => item.id).indexOf(productRecord.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n      // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n      // console.log('updateBrandList', updatedItem)\r\n\r\n      // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n      // setBrandList(updateBrandList);\r\n\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const onSwitchChange = (checked: any) => {\r\n    // console.log(checked);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setBrandEditVisible(false);\r\n    setBnTags([]);\r\n    setTags([]);\r\n    setCoverImageId('');\r\n    setvisibleMedia(false);\r\n    setmyImages(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  console.log('myImages', myImages);\r\n\r\n  useEffect(() => {\r\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n      const metaTags =\r\n        brandDetailData.metaTags && brandDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        brandDetailData.bn &&\r\n        brandDetailData.bn['metaTags'] &&\r\n        brandDetailData.bn['metaTags'].split(',');\r\n      setTags(metaTags || []);\r\n      setBnTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  console.log('brandEdit', brandDetailData);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...brandDetailData,\r\n        ...(brandDetailData &&\r\n          Object.keys(brandDetailData).length > 0 && {\r\n            bnMetaTitle:\r\n              brandDetailData['bn'] &&\r\n              brandDetailData['bn'].metaTitle &&\r\n              brandDetailData['bn'].metaTitle,\r\n            bnMetaDescription:\r\n              brandDetailData['bn'] &&\r\n              brandDetailData['bn'].metaDescription &&\r\n              brandDetailData['bn'].metaDescription,\r\n            bnName:\r\n              brandDetailData['bn'] &&\r\n              brandDetailData['bn'].name &&\r\n              brandDetailData['bn'].name,\r\n            bnDescription:\r\n              brandDetailData['bn'] &&\r\n              brandDetailData['bn'].description &&\r\n              brandDetailData['bn'].description,\r\n          }),\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Brand Edit'\r\n            destroyOnClose={true}\r\n            visible={brandEditVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name'\r\n              value={values.name}\r\n              name='name'\r\n              placeHolder={'microsoft,apple'}\r\n              isError={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateBrandState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateBrandState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('name');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Name'\r\n              value={values.bnName}\r\n              placeHolder={'প্রান,নোকিয়া'}\r\n              name='bnName'\r\n              isError={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && updateBrandState.error['error']['bnName'])\r\n              }\r\n              errorString={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && updateBrandState.error['error']['bnName'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnName');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Description'\r\n              value={values.description}\r\n              name='description'\r\n              placeholder={'This brand...'}\r\n              isError={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['description'])\r\n              }\r\n              errorString={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['description'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('description');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Description'\r\n              value={values.bnDescription}\r\n              placeholder={'এই ব্র্যান্ড...'}\r\n              name='bnDescription'\r\n              isError={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnDescription');\r\n              }}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            />\r\n\r\n            <div\r\n              className='addproductSection-left-header'\r\n              style={{\r\n                marginBottom: '-5px',\r\n              }}\r\n            >\r\n              <h3 className='inputFieldLabel'>Cover</h3>\r\n              {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n            </div>\r\n\r\n            <div className='aboutToUploadImagesContainer'>\r\n              {brandDetailData && Object.keys(brandDetailData).length > 0 && (\r\n                <>\r\n                  {myImages &&\r\n                    // @ts-ignore\r\n                    myImages.length > 0 &&\r\n                    myImages.map((image, index) => {\r\n                      return (\r\n                        <div className='aboutToUploadImagesContainer__item'>\r\n                          <div\r\n                            className='aboutToUploadImagesContainer__item-imgContainer'\r\n                            onClick={() => {\r\n                              setCoverImageId(image.id);\r\n                              handleSetImageAsThumnail(image);\r\n                            }}\r\n                          >\r\n                            <img src={image.cover} alt={image.alt} />\r\n                          </div>\r\n\r\n                          <span\r\n                            onClick={() => {\r\n                              handleImagesDelete(image.id);\r\n                              handleDetachSingleImage(image.id);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__item-remove'\r\n                          >\r\n                            <CloseOutlined />\r\n                          </span>\r\n\r\n                          {coverImageId === image.id ? (\r\n                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                              <CheckOutlined />\r\n                            </span>\r\n                          ) : (\r\n                            !coverImageId &&\r\n                            index === 0 && (\r\n                              <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                <CheckOutlined />\r\n                              </span>\r\n                            )\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n\r\n                  {!myImages ||\r\n                  // @ts-ignore\r\n                  (myImages && !(myImages && myImages.length > 0)) ? (\r\n                    <>\r\n                      <Tooltip title={'Attach images'}>\r\n                        <div\r\n                          onClick={() => {\r\n                            setvisibleMedia(true);\r\n                          }}\r\n                          className='aboutToUploadImagesContainer__uploadItem'\r\n                        >\r\n                          <FileImageFilled />\r\n                          <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                            <PlusOutlined />\r\n                          </span>\r\n                        </div>\r\n                      </Tooltip>\r\n                    </>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            <Input\r\n              label='Meta title'\r\n              value={values.metaTitle}\r\n              placeHolder={'category...'}\r\n              name='metaTitle'\r\n              isError={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && updateBrandState.error['error']['metaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && updateBrandState.error['error']['metaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaTitle');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Meta title'\r\n              value={values.bnMetaTitle}\r\n              placeHolder={'ক্যাটাগড়ি...'}\r\n              name='bnMetaTitle'\r\n              isError={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaTitle');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Meta description'\r\n              value={values.metaDescription}\r\n              placeholder={'meta...'}\r\n              name='metaDescription'\r\n              isError={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['metaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['metaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaDescription');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Meta Description'\r\n              value={values.bnMetaDescription}\r\n              placeholder={'এইয় মেট...'}\r\n              name='bnMetaDescription'\r\n              isError={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaDescription');\r\n              }}\r\n            />\r\n\r\n            <h3 className='inputFieldLabel'>Meta Tags (grocery,fashion)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setTags}\r\n              tags={tags}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h3 className='inputFieldLabel'>BN Meta Tags (মুদিখানা,ফ্যাশন)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setBnTags}\r\n              tags={bnTags}\r\n            />\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            myGoddamnImages={myGoddamnImages}\r\n            setMyGoddamnImages={setMyGoddamnImages}\r\n            isModalOpenForImages={false}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space,Button, Input,Tooltip, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport {  useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewBrand from \"./AddNewBrand\"\r\n\r\n// @ts-ignore\r\nimport BrandQuickEdit from \"./BrandQuickEdit\";\r\n\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Brand Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n  roles?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList,roles}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch({}, 'deleteBrand');\r\n    const [brandDetailVisible,setBrandDetailVisible] = useState(false); \r\n    const history = useHistory(); \r\n\r\n\r\n \r\n      const handleDeleteBrand = async (id) => {\r\n        const deleteBrandRes = await handleDeleteBrandFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteBrandRes && deleteBrandRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Brand'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n           render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  // setBrandDetailVisible(true);\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n            </>\r\n          )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n        <Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n            />\r\n\r\n\r\n       <Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n\r\n\r\n{isAccess('postCatalogue',roles) && (\r\n\t\t\t\t\t      <Column\r\n        \r\n                className='classnameofthecolumn'\r\n                  title=\"\"\r\n                  key=\"action\"\r\n                  align='right'\r\n                  render={(text, record : any) => (\r\n                    <Space size=\"middle\">\r\n                        <a href='##'>\r\n                       <Tooltip placement=\"top\" title='Quick Edit Brand'>\r\n                      <span className='iconSize' onClick={() => {\r\n                        setvisible(true)\r\n                        setactiveCategoryForEdit(record); \r\n                      }}> \r\n                      <EditOutlined />\r\n                    \r\n                      </span>\r\n                       </Tooltip>\r\n                       </a>\r\n        \r\n        \r\n                       <Popconfirm \r\n                       \r\n                       onConfirm={() => handleDeleteBrand(record.id)}\r\n                       title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                   \r\n                   <span \r\n                     className='iconSize iconSize-danger'\r\n                     > \r\n                     <DeleteOutlined/>\r\n                    </span>\r\n                   </Popconfirm>\r\n        \r\n        \r\n                    </Space>\r\n                  )}\r\n                />\r\n                 )}\r\n\r\n\r\n\r\n   \r\n      </Table>\r\n\r\n\r\n\r\n    {activeCategoryForEdit &&   <BrandQuickEdit \r\n    brandList={data}\r\n    setBrandList={setBrandList}\r\n    setBrandEditVisible={setvisible}\r\n    brandEditVisible={visible}\r\n    brandDetailData={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n  roles: any; \r\n}\r\n\r\nconst CategoryList = ({roles}: Props) => {\r\n\r\n\r\n  const [brandList,setBrandList] = useState([]);\r\n\r\n  \r\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setBrands = async () => {\r\n     const brands = await handlebrandListFetch({\r\n      urlOptions:{\r\n        params: {\r\n          sortItem: 'added',\r\n          sortOrderValue: '-1'\r\n        }\r\n        }\r\n     }); \r\n     // @ts-ignore\r\n     setBrandList(brands); \r\n   }\r\n   setBrands(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(brandState.data.length > 0 ){\r\n      const newBrandList = brandState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setBrandList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search brand..\"\r\n          onChange={e => handleSearch(e.target.value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n\r\n          {isAccess('postCatalogue',roles) && (\r\n\t\t\t\t\t  <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n           >\r\n           Add New\r\n          </Button>\r\n                 )}\r\n\r\n\r\n          \r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {brandState.done && brandList.length > 0 && <MyTable\r\n        roles={roles} \r\n          setBrandList={setBrandList}\r\n        data={brandList} />}\r\n        {brandState.isLoading && <DataTableSkeleton />}\r\n        {brandState.done && !(brandList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '200px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Brand found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n    <AddNewBrand \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible} \r\n          setBrandList={setBrandList}\r\n          brandList={brandList}\r\n          />\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  roles: state.globalState,\r\n})\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(CategoryList);\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Spin,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from '../../pages/category/MetaTags';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Brand Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n};\r\n\r\ninterface Props {\r\n  brandDetailData?: any;\r\n  brandEditVisible?: any;\r\n  setBrandEditVisible?: any;\r\n  setBrandDetailData?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  brandDetailData,\r\n  brandEditVisible,\r\n  setBrandEditVisible,\r\n  setBrandDetailData,\r\n}: Props) => {\r\n  const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch(\r\n    {},\r\n    'updateBrand'\r\n  );\r\n  const [\r\n    attachImageToItemMultipleState,\r\n    handleAttachImageToItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [\r\n    attachImageToItemSingleState,\r\n    handleAttachImageToItemSingleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [\r\n    detachImageFromItemMultipleState,\r\n    handleDetachImageFromItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n  const [myImages, setmyImages]: any = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n      const images = brandDetailData.image;\r\n      if (images && images.length > 0) {\r\n        setmyImages(images);\r\n        setMyGoddamnImages(images);\r\n      }\r\n\r\n      if (brandDetailData.cover && brandDetailData.cover['id']) {\r\n        // @ts-ignore\r\n        setmyImages([brandDetailData.cover]);\r\n        setCoverImageId(brandDetailData.cover['id']);\r\n      }\r\n    }\r\n  }, [brandDetailData]);\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'brand',\r\n          itemId: brandDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'brand',\r\n          itemId: brandDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      openSuccessNotification('Set as thumbnail!');\r\n      // const positionInBrand = () => {\r\n      //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n\r\n      // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n      // if (prevItem) {\r\n      //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n      //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n      //     setBrandList(updateBrandList);\r\n      // }\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    console.log('myReadyToGoImages', myImages);\r\n\r\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n      // @ts-ignore\r\n      const images =\r\n        myImages && myImages.length > 0 ? myImages.map((item) => item.id) : [];\r\n\r\n      if (images[0] && images.length > 1) {\r\n        await handleAttachImageToItemMultipleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              collection: 'brand',\r\n              itemId: brandDetailData.id,\r\n            },\r\n          },\r\n          body: {\r\n            image: images,\r\n          },\r\n        });\r\n      } else if (images[0] && images.length < 1) {\r\n        await handleAttachImageToItemSingleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              imageId: images[0].id,\r\n              collection: 'brand',\r\n              itemId: brandDetailData.id,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    const updateBrandRes = await handleUpdateBrandFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: brandDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: values.description,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateBrandRes && updateBrandRes.status === 'ok') {\r\n      console.log('updateBrandRes', updateBrandRes);\r\n      setBrandDetailData({\r\n        ...brandDetailData,\r\n        // @ts-ignore\r\n        ...updateBrandRes,\r\n      });\r\n      openSuccessNotification();\r\n      setBrandEditVisible(false);\r\n\r\n      // const positionInBrand = () => {\r\n      //     return brandList.map(item => item.id).indexOf(productRecord.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n      // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n      // console.log('updateBrandList', updatedItem)\r\n\r\n      // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n      // setBrandList(updateBrandList);\r\n\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const onSwitchChange = (checked: any) => {\r\n    // console.log(checked);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setBrandEditVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  console.log('myImages', myImages);\r\n\r\n  useEffect(() => {\r\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n      const metaTags =\r\n        brandDetailData.metaTags && brandDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        brandDetailData.bn &&\r\n        brandDetailData.bn['metaTags'] &&\r\n        brandDetailData.bn['metaTags'].split(',');\r\n      setTags(metaTags || []);\r\n      setBnTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  console.log('brandEdit', brandDetailData);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...brandDetailData,\r\n        ...(brandDetailData &&\r\n          Object.keys(brandDetailData).length > 0 && {\r\n            bnMetaTitle:\r\n              brandDetailData['bn'] &&\r\n              brandDetailData['bn'].metaTitle &&\r\n              brandDetailData['bn'].metaTitle,\r\n            bnMetaDescription:\r\n              brandDetailData['bn'] &&\r\n              brandDetailData['bn'].metaDescription &&\r\n              brandDetailData['bn'].metaDescription,\r\n            bnName:\r\n              brandDetailData['bn'] &&\r\n              brandDetailData['bn'].name &&\r\n              brandDetailData['bn'].name,\r\n            bnDescription:\r\n              brandDetailData['bn'] &&\r\n              brandDetailData['bn'].description &&\r\n              brandDetailData['bn'].description,\r\n          }),\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Brand Edit'\r\n            visible={brandEditVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name'\r\n              value={values.name}\r\n              name='name'\r\n              placeHolder={'microsoft,apple'}\r\n              isError={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateBrandState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateBrandState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('name');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Name'\r\n              value={values.bnName}\r\n              placeHolder={'প্রান,নোকিয়া'}\r\n              name='bnName'\r\n              isError={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && updateBrandState.error['error']['bnName'])\r\n              }\r\n              errorString={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && updateBrandState.error['error']['bnName'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnName');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Description'\r\n              value={values.description}\r\n              name='description'\r\n              placeholder={'This brand...'}\r\n              isError={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['description'])\r\n              }\r\n              errorString={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['description'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('description');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Description'\r\n              value={values.bnDescription}\r\n              placeholder={'এই ব্র্যান্ড...'}\r\n              name='bnDescription'\r\n              isError={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnDescription');\r\n              }}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            />\r\n\r\n            <div\r\n              className='addproductSection-left-header'\r\n              style={{\r\n                marginBottom: '-5px',\r\n              }}\r\n            >\r\n              <h3 className='inputFieldLabel'>Cover</h3>\r\n              {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n            </div>\r\n\r\n            <div className='aboutToUploadImagesContainer'>\r\n              {brandDetailData && Object.keys(brandDetailData).length > 0 && (\r\n                <>\r\n                  {myImages &&\r\n                    // @ts-ignore\r\n                    myImages.length > 0 &&\r\n                    myImages.map((image, index) => {\r\n                      return (\r\n                        <div className='aboutToUploadImagesContainer__item'>\r\n                          <div\r\n                            className='aboutToUploadImagesContainer__item-imgContainer'\r\n                            onClick={() => {\r\n                              setCoverImageId(image.id);\r\n                              handleSetImageAsThumnail(image);\r\n                            }}\r\n                          >\r\n                            <img src={image.cover} alt={image.alt} />\r\n                          </div>\r\n\r\n                          <span\r\n                            onClick={() => {\r\n                              handleImagesDelete(image.id);\r\n                              handleDetachSingleImage(image.id);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__item-remove'\r\n                          >\r\n                            <CloseOutlined />\r\n                          </span>\r\n\r\n                          {coverImageId === image.id ? (\r\n                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                              <CheckOutlined />\r\n                            </span>\r\n                          ) : (\r\n                            !coverImageId &&\r\n                            index === 0 && (\r\n                              <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                <CheckOutlined />\r\n                              </span>\r\n                            )\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n\r\n                  {!myImages ||\r\n                  // @ts-ignore\r\n                  (myImages && !(myImages && myImages.length > 0)) ? (\r\n                    <>\r\n                      <Tooltip title={'Attach images'}>\r\n                        <div\r\n                          onClick={() => {\r\n                            setvisibleMedia(true);\r\n                          }}\r\n                          className='aboutToUploadImagesContainer__uploadItem'\r\n                        >\r\n                          <FileImageFilled />\r\n                          <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                            <PlusOutlined />\r\n                          </span>\r\n                        </div>\r\n                      </Tooltip>\r\n                    </>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            <Input\r\n              label='Meta title'\r\n              value={values.metaTitle}\r\n              placeHolder={'category...'}\r\n              name='metaTitle'\r\n              isError={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && updateBrandState.error['error']['metaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && updateBrandState.error['error']['metaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaTitle');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Meta title'\r\n              value={values.bnMetaTitle}\r\n              placeHolder={'ক্যাটাগড়ি...'}\r\n              name='bnMetaTitle'\r\n              isError={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaTitle');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Meta description'\r\n              value={values.metaDescription}\r\n              placeholder={'meta...'}\r\n              name='metaDescription'\r\n              isError={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['metaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['metaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaDescription');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Meta Description'\r\n              value={values.bnMetaDescription}\r\n              placeholder={'এইয় মেট...'}\r\n              name='bnMetaDescription'\r\n              isError={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaDescription');\r\n              }}\r\n            />\r\n\r\n            <h3 className='inputFieldLabel'>Meta Tags (grocery,fashion)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setTags}\r\n              tags={tags}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h3 className='inputFieldLabel'>BN Meta Tags (মুদিখানা,ফ্যাশন)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setBnTags}\r\n              tags={bnTags}\r\n            />\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            myGoddamnImages={myGoddamnImages}\r\n            setMyGoddamnImages={setMyGoddamnImages}\r\n            isModalOpenForImages={false}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport BrandEdit from \"./BrandEdit\";\r\n\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    roles?: any;\r\n}\r\n\r\nconst NewBrandDetail = ({roles}: Props) => {\r\n    const [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'brandDetail');\r\n    const [brandProductsState, handleBrandProductsFetch] = useHandleFetch({}, 'brandProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const brandId = params['id'];\r\n    const [brandEditVisible, setBrandEditVisible] = useState(false);\r\n    const [brandDetailData, setBrandDetailData] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const getBrandDetail = async () => {\r\n            const brandDetailRes = await handleBrandDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(brandDetailRes){\r\n                // @ts-ignore\r\n                setBrandDetailData(brandDetailRes)\r\n            }; \r\n\r\n\r\n            console.log('brandDetailRes',brandDetailRes);\r\n\r\n\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [brandId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandProducts = async () => {\r\n            await handleBrandProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandProducts();\r\n\r\n    }, [brandId]);\r\n\r\n\r\n\r\n\r\n    console.log('brandProductsState', brandProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n\r\n\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Brand Detail\r\n                </h3>\r\n\r\n\r\n                {brandDetailState.done && brandDetailData && (Object.keys(brandDetailData).length > 0) && (\r\n                    <>\r\n                        <BrandEdit\r\n                            brandEditVisible={brandEditVisible}\r\n                            setBrandEditVisible={setBrandEditVisible}\r\n                            brandDetailData={brandDetailData}\r\n                            setBrandDetailData={setBrandDetailData}\r\n                        />\r\n\r\n                {isAccess('postCatalogue',roles) && (\r\n                    <Button\r\n                    onClick={() => setBrandEditVisible(true)}\r\n                    type='link'\r\n                    icon={<EditOutlined />}\r\n                    >\r\n                        Edit\r\n                </Button>\r\n                    )}\r\n\r\n                 \r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={brandDetailState.isLoading}>\r\n                {brandDetailState.done && brandDetailData && !(Object.keys(brandDetailData).length > 0) && (\r\n                    <Empty description='No Brand found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {brandDetailState.done && brandDetailData && (Object.keys(brandDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n                        <div className='brandDetailContainer__header-coverContainer'>\r\n                            <img src={brandDetailData['cover'] && brandDetailData['cover']['cover']} alt=\"\" />\r\n                        </div>\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {brandDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {brandDetailData['description']}\r\n                            </h3>\r\n\r\n                            {brandDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {brandDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {brandProductsState.isLoading && <DataTableSkeleton />}\r\n                {brandProductsState.done && !(brandProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this brand' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {brandProductsState.done && brandProductsState.data && brandProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={brandProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                            \r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    roles: state.globalState,\r\n  })\r\n  \r\n  // @ts-ignore\r\n  export default connect(mapStateToProps, null)(NewBrandDetail);\r\n  \r\n  \r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { useFetch } from '../../hooks';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\r\n  const [suggestedOptions, setsuggesteOptions] = useState([]);\r\n  const attributeLisState = useFetch([], [], 'attributeList', {});\r\n\r\n  const [attributeItem, setAttributeITem] = useState({\r\n    name: attribute.name,\r\n    value: attribute.value,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const positionInAttribute = () => {\r\n      return attributeList.map((item) => item.id).indexOf(attribute.id);\r\n    };\r\n\r\n    const index = positionInAttribute();\r\n\r\n    const updatedItem = Object.assign({}, attributeList[index], {\r\n      ...attributeItem,\r\n    });\r\n    const updateAttributeList = [\r\n      ...attributeList.slice(0, index),\r\n      updatedItem,\r\n      ...attributeList.slice(index + 1),\r\n    ];\r\n    setAttributeList(updateAttributeList);\r\n  }, [attributeItem]);\r\n\r\n  const handleAttributeDelete = () => {\r\n    const updateAttributeList = attributeList.filter(\r\n      (item) => item.id !== attribute.id\r\n    );\r\n    setAttributeList(updateAttributeList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      attributeLisState.data &&\r\n      Object.keys(attributeLisState.data).length > 0\r\n    ) {\r\n      const options = Object.keys(attributeLisState.data);\r\n      const manupulatedOptions = options.map((option) => {\r\n        return {\r\n          value: option,\r\n        };\r\n      });\r\n      setsuggesteOptions(manupulatedOptions);\r\n    }\r\n  }, [attributeLisState.data]);\r\n\r\n  const handleAttributeSelect = (value) => {\r\n    if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\r\n      if (attributeLisState.data[value]) {\r\n        setAttributeITem({\r\n          ...attribute,\r\n          name: value,\r\n          value: attributeLisState.data[value],\r\n        });\r\n      }\r\n    } else {\r\n      setAttributeITem({\r\n        ...attribute,\r\n        name: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAttributeValueChange = (e) => {\r\n    setAttributeITem({\r\n      ...attribute,\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        key={attribute.id}\r\n        className='addProductGridContainer__item-body-variationCard-item-attribute-item'\r\n      >\r\n        <div\r\n          onClick={handleAttributeDelete}\r\n          className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'\r\n        >\r\n          <DeleteOutlined />\r\n        </div>\r\n\r\n        <h3 className='inputFieldLabel-small'>Name</h3>\r\n        <AutoComplete\r\n          value={attribute.name}\r\n          style={{ width: '100%' }}\r\n          options={suggestedOptions}\r\n          placeholder='attribute'\r\n          onChange={handleAttributeSelect}\r\n          filterOption={(inputValue, suggestedOption) =>\r\n            suggestedOption.value\r\n              .toUpperCase()\r\n              .indexOf(inputValue.toUpperCase()) !== -1\r\n          }\r\n        />\r\n\r\n        {attribute.name && (\r\n          <>\r\n            <div style={{ marginTop: '10px' }}></div>\r\n            <InputSmall\r\n              label='Value'\r\n              value={attribute.value}\r\n              name='value'\r\n              onChange={handleAttributeValueChange}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Attributes from './Attributes';\r\nimport AddAttributeValues from '../attribute/AddAttributeValues';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { Button } from 'antd';\r\nimport { PlusOutlined, CheckOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n  handleAddPricing: any;\r\n  pricingItem?: any;\r\n  handleUpdatePricing?: any;\r\n  isPricingEditActive?: any;\r\n}\r\n\r\nconst Pricing = ({\r\n  handleAddPricing,\r\n  pricingItem,\r\n  handleUpdatePricing,\r\n  isPricingEditActive,\r\n}: Props) => {\r\n  const [price, setprice] = useState({\r\n    regular: '',\r\n    offer: '',\r\n  });\r\n  const [stock, setStock] = useState({\r\n    available: '',\r\n    minimum: '',\r\n  });\r\n\r\n  const [attributeList, setAttributeList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (pricingItem && Object.keys(pricingItem).length > 0) {\r\n      setprice({\r\n        ...price,\r\n        ...pricingItem['price'],\r\n      });\r\n\r\n      setStock({\r\n        ...stock,\r\n        ...pricingItem['stock'],\r\n      });\r\n\r\n      const attributeListItems = [];\r\n      if (\r\n        pricingItem.attribute &&\r\n        Object.keys(pricingItem.attribute).length > 0\r\n      ) {\r\n        const attributeKeys = Object.keys(pricingItem.attribute);\r\n        attributeKeys.forEach((attributeKey, index) => {\r\n          attributeListItems.push({\r\n            name: attributeKey,\r\n            value: pricingItem.attribute[attributeKey],\r\n            id: index,\r\n          });\r\n        });\r\n      }\r\n\r\n      setAttributeList(attributeListItems);\r\n    }\r\n  }, [pricingItem]);\r\n\r\n  console.log('pricingItem', pricingItem);\r\n  console.log('attributeList', attributeList);\r\n\r\n  const handlePriceChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setprice({\r\n      ...price,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleStockChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setStock({\r\n      ...stock,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSavePricing = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (attributeList.length > 0) {\r\n      const attribute = {};\r\n\r\n      for (let item of attributeList) {\r\n        console.log('itemofattribute', item);\r\n        if (item['value'] && item['name']) {\r\n          attribute[item['name']] = item['value'];\r\n        }\r\n      }\r\n\r\n      const priceItem = {\r\n        price: price,\r\n        stock: stock,\r\n        attribute: attribute,\r\n      };\r\n\r\n      setprice({\r\n        regular: '',\r\n        offer: '',\r\n      });\r\n      setStock({ available: '', minimum: '' });\r\n      handleAddPricing(priceItem);\r\n      setAttributeList([]);\r\n    } else {\r\n      const priceItem = {\r\n        price: price,\r\n        stock: stock,\r\n        attribute: {},\r\n      };\r\n\r\n      setprice({\r\n        regular: '',\r\n        offer: '',\r\n      });\r\n      setStock({ available: '', minimum: '' });\r\n      setAttributeList([]);\r\n      handleAddPricing(priceItem);\r\n    }\r\n  };\r\n\r\n  const handleUpdatePricingItem = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (attributeList.length > 0) {\r\n      const attribute = {};\r\n\r\n      for (let item of attributeList) {\r\n        console.log('itemofattribute', item);\r\n        if (item['value'] && item['name']) {\r\n          attribute[item['name']] = item['value'];\r\n        }\r\n      }\r\n\r\n      const priceItem = {\r\n        price: price,\r\n        stock: stock,\r\n        attribute: attribute,\r\n        id: pricingItem.id,\r\n      };\r\n\r\n      setprice({\r\n        regular: '',\r\n        offer: '',\r\n      });\r\n      setStock({ available: '', minimum: '' });\r\n      handleUpdatePricing(priceItem);\r\n      setAttributeList([]);\r\n    } else {\r\n      const priceItem = {\r\n        price: price,\r\n        stock: stock,\r\n        attribute: {},\r\n        id: pricingItem.id,\r\n      };\r\n\r\n      setprice({\r\n        regular: '',\r\n        offer: '',\r\n      });\r\n      setStock({ available: '', minimum: '' });\r\n      setAttributeList([]);\r\n      handleUpdatePricing(priceItem);\r\n    }\r\n  };\r\n\r\n  const handleAddAttribute = () => {\r\n    setAttributeList([\r\n      ...attributeList,\r\n      {\r\n        name: '',\r\n        value: '',\r\n        id: `${attributeList.length}`,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const getiCreatePricingIsDisabled = () => {\r\n    if (!price.regular) {\r\n      return true;\r\n    } else return false;\r\n  };\r\n\r\n  // console.log('attributeList', attributeList);\r\n\r\n  return (\r\n    <>\r\n      <div className='addProductGridContainer__item-body-variationCard'>\r\n        <div className='addProductGridContainer__item-body-variationCard-left'>\r\n          <div className='addProductGridContainer__item-body-variationCard-item'>\r\n            <h4>Price</h4>\r\n            <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n              <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                <InputSmall\r\n                  min={0}\r\n                  type='number'\r\n                  label='Regular  *'\r\n                  value={price.regular}\r\n                  name='regular'\r\n                  onChange={handlePriceChange}\r\n                />\r\n              </div>\r\n              <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n                <InputSmall\r\n                  min={0}\r\n                  type='number'\r\n                  size='small'\r\n                  label='Offer'\r\n                  value={price.offer}\r\n                  name='offer'\r\n                  onChange={handlePriceChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='addProductGridContainer__item-body-variationCard-right'>\r\n            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n              <h4>Attributes</h4>\r\n              <div className='addProductGridContainer__item-body-variationCard-item-attribute'>\r\n                {attributeList.map((attribute) => {\r\n                  return (\r\n                    <Attributes\r\n                      attribute={attribute}\r\n                      attributeList={attributeList}\r\n                      setAttributeList={setAttributeList}\r\n                    />\r\n                  );\r\n                })}\r\n                <Button\r\n                  size='small'\r\n                  onClick={handleAddAttribute}\r\n                  style={{\r\n                    width: '180px',\r\n                    minHeight: '75px',\r\n                    marginTop: '0px',\r\n                    borderRadius: '8px',\r\n                  }}\r\n                  type='dashed'\r\n                  icon={<PlusOutlined />}\r\n                >\r\n                  Add Attribute\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '25px',\r\n              }}\r\n              className='addProductGridContainer__item-body-variationCard-item'\r\n            >\r\n              <h4>Stock</h4>\r\n              <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                  <InputSmall\r\n                    min={0}\r\n                    type='number'\r\n                    label='Available'\r\n                    value={stock.available}\r\n                    name='available'\r\n                    onChange={handleStockChange}\r\n                  />\r\n                </div>\r\n                <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n                  <InputSmall\r\n                    min={0}\r\n                    type='number'\r\n                    label='Minimum'\r\n                    value={stock.minimum}\r\n                    name='minimum'\r\n                    onChange={handleStockChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Button\r\n          // type=\"primary\"\r\n         \r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button> */}\r\n\r\n      <Button\r\n        style={{\r\n          marginLeft: '10px',\r\n        }}\r\n        onClick={\r\n          isPricingEditActive ? handleUpdatePricingItem : handleSavePricing\r\n        }\r\n        disabled={getiCreatePricingIsDisabled()}\r\n        className='btnAddToPrice'\r\n        icon={<CheckOutlined />}\r\n      >\r\n        {isPricingEditActive ? 'Update Pricing' : 'Add To Pricing'}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pricing;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\tvenue: '',\r\n\tdate: '',\r\n\ttime: '',\r\n\tpurchaseLimit: null,\r\n\tbnUnit: '',\r\n\tbnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tproductList?: any;\r\n\tsetProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList, setProductList }: Props) => {\r\n\r\n\tconst [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addProduct');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [categoryids, setcategoryIds] = useState([]);\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [brandId, setBrandId] = useState('');\r\n\tconst [pricing, setPricing] = useState([]);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [categoryOptions, setCategoryOptions] = useState([]);\r\n\tconst [selectedTags, setSelectedTags] = useState([]);\r\n\tconst [date, setDateFeild] = useState('');\r\n\tconst [time, setTimeFeild] = useState('');\r\n\tconst [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('1');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n\r\n\r\n\tconst makeEmptyCategoryOptions = (setEmpty) => {\r\n\t\tsetEmpty([]);\r\n\t}\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst addProductRes = await handleAddProductFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: description,\r\n\t\t\t\tmodel: values.model,\r\n\t\t\t\tunit: values.unit,\r\n\t\t\t\tcategory: categoryids,\r\n\t\t\t\ttags: tagIds,\r\n\t\t\t\tbrand: brandId,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tpricing: pricing,\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addProductRes && addProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Product Created');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetProductList([{\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addProductRes,\r\n\t\t\t\tid: addProductRes['_id'] || '',\r\n\t\t\t\tkey: addProductRes['_id'] || '',\r\n\t\t\t\tname: addProductRes['name'] || '',\r\n\t\t\t\tdescription: addProductRes['description'] || '',\r\n\t\t\t\tcover: addProductRes['cover'] || '',\r\n\t\t\t},...productList])\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('');\r\n\t\t\tsetPricing([]);\r\n\t\t\tsetTagIds([]);\r\n\t\t\tsetSelectedTags([]);\r\n\t\t\tsetBrandId(\"\");\r\n\t\t\tsetcategoryIds([]);\r\n\t\t\tsetCategoryOptions([]);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// openErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addProductState['isLoading']) {\r\n\t\t\tconst error = addProductState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addProductState])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !(pricing.length > 0) || !(categoryids.length > 0)  || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\tconst handleDeleteFromSelectedImage = () => {\r\n\r\n\t};\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleAddPricing = (priceItem) => {\r\n\r\n\t\tsetPricing([{\r\n\t\t\t...priceItem,\r\n\t\t\tid: pricing.length\r\n\t\t}, ...pricing])\r\n\t\tmessage.info('Product Pricing Added');\r\n\t}\r\n\r\n\r\n\tconst handleUpdatePricing = (priceItem) => {\r\n\r\n\t\tconst positionInPricing = () => {\r\n\t\t\treturn pricing.map(item => item.id).indexOf(priceItem.id);\r\n\t\t  }\r\n\r\n\t\t  const index = positionInPricing();\r\n\r\n\t\t  // @ts-ignore\r\n\t\t  const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\r\n\t\t  const updatePricingList = [...pricing.slice(0, index), updatedItem, ...pricing.slice(index + 1)];\r\n\t\t\t \r\n\t\t  setPricing(updatePricingList); \r\n\r\n\t\tmessage.info('Product Pricing Updated');\r\n\t\tseTisPricingEditActive(true);\r\n\t\tsetpricingTagActiveKey('2'); \r\n\t}\r\n\r\n\r\n\tconst handleEditPricing = (id)=> {\r\n\t\tseTisPricingEditActive(true);\r\n\t\tconst pricingItem = pricing.find(item => item.id === id);\r\n\t\tif(pricingItem){\r\n\t\t\tsetEditPricingItem(pricingItem);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst handleDeletePricing = (id) => {\r\n\t\tconst newPricing = pricing.filter(item => item.id !== id);\r\n\t\tsetPricing(newPricing);\r\n\t\tmessage.info('Product Pricing Deleted');\r\n\t}\r\n\r\n\r\n\r\n\tconst isCategoryInValid = () => {\r\n\t\tif (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (categoryids && categoryids.length > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDateChange = (date, dateString) => {\r\n\t\tsetDateFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\tconst handleTimeChange = (date, dateString) => {\r\n\t\tsetTimeFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('pricingingi',pricing);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Product\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Information *\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t    \tplaceHolder={'KG,POUND,GM'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Unit'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnUnit}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'কেজি,গ্রাম'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnUnit'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnUnit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnUnit'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnUnit');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Pricing *\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabPosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveKey={pricingTagActiveKey}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey(`${value}`);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Variation\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing \r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddPricing={handleAddPricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpricingItem={editpricingItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleUpdatePricing={handleUpdatePricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisPricingEditActive={isPricingEditActive}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingEditIcon' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPricing(item.id); \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey('1');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingDeleteIcon' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"line-through\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && item.stock['available'] && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.available}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock['minimum'] && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"site-badge-count-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.minimum} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.values(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tImage\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tMeta Data\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setMetaTags}\r\n\t\t\t\t\t\t\ttags={metaTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnMetaTags}\r\n\t\t\t\t\t\t\ttags={bnMetaTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__category'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCategories *\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='red'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Select at least one category'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={!(categoryids.length > 0)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Categories\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetCategoryOptions={setCategoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcategoryOptions={categoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetcategoryIds={setcategoryIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTags\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tags\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__brand'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tBrand\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Brands setBrandId={setBrandId} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    EditOutlined\r\n} from '@ant-design/icons';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\tvenue: '',\r\n\tdate: '',\r\n\ttime: '',\r\n\tpurchaseLimit: null,\r\n\tbnUnit: '',\r\n\tbnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n    productEditVisible?: any;\r\n    setProductEditVisible?: any;\r\n    productDetailData?: any;\r\n    productList?:any; \r\n    setProductList?:any; \r\n    \r\n}\r\n\r\nconst AddNewProduct = ({ productEditVisible, \r\n    setProductEditVisible, \r\n    productDetailData,\r\n    setProductList, \r\n    productList\r\n }: Props) => {\r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('2');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            const categoryIds = productDetailData.category;\r\n            setCategoryOptions(categoryIds);\r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.pricing && productDetailData.pricing) {\r\n            setPricing(productDetailData.pricing)\r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n        \r\n        if (productDetailData && productDetailData.description) {\r\n            setDescription(productDetailData.description); \r\n        }\r\n        else {\r\n            setDescription('');\r\n        }\r\n\r\n        if (productDetailData && productDetailData.bn && productDetailData.bn['description']) {\r\n            setBNDescription(productDetailData.bn['description']); \r\n        }\r\n        else {\r\n            setBNDescription('');\r\n        }\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n\r\n            const images = productDetailState.data.image;\r\n\t\t\tlet mahImages = []; \r\n\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tmahImages = images;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n\t\t\t\tconst ixists = images.find(item => item.id === productDetailState.data.cover['id']);\r\n\t\t\t\tif(!ixists){\r\n\t\t\t\t\tmahImages = [productDetailState.data.cover, ...mahImages]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCoverImageId(productDetailState.data.cover['id']);\r\n\t\t\t}\r\n\t\r\n\t\t\t\t// @ts-ignore\r\n                setmyImages(mahImages);\r\n\r\n    \r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n\r\n        if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n\t\t\tconst aboutToUpdatedImageIds = []; \r\n\r\n\t\t\tif(imagesIds && imagesIds.length > 0){\r\n\t\t\t\timagesIds.forEach(imageId => {\r\n\t\t\t\t\tif(productDetailData && productDetailData['image']){\r\n\t\t\t\t\t\tif(!productDetailData['image'].includes(imageId)){\r\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n      \r\n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'product',\r\n                            itemId: productDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: aboutToUpdatedImageIds\r\n                    }\r\n                });\r\n            }\r\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: aboutToUpdatedImageIds[0].id,\r\n                            collection: 'product',\r\n                            itemId: productDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        \r\n\r\n\r\n        const updatedProductRes = await handleUpdateProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                category: categoryOptions,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                pricing: pricing,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n                metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\r\n                \r\n\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n                    metaTags: bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updatedProductRes && updatedProductRes.status === 'ok') {\r\n            openSuccessNotification('Product Updated');\r\n\r\n\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn productList.map(item => item.id).indexOf(productDetailData.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, productList[index], { ...productDetailData, ...updatedProductRes });\r\n\t\t\tconst updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateProductList);\r\n            \r\n\r\n            setProductEditVisible(false);\r\n\r\n\r\n            // setProductDetailData({\r\n            //     // @ts-ignore\r\n            //     ...updatedProductRes,\r\n            //     category: productDetailData.category,\r\n            //     brand: productDetailData.brand,\r\n            //     tags: productDetailData.tags,\r\n            //     cover: productDetailData.cover,\r\n            //     image: productDetailData.image,\r\n            // }); \r\n\r\n\r\n            // console.log('updatedProductRes', updatedProductRes);\r\n            // setProductList([...productList, {\r\n            //     id: updatedProductRes['id'] || '',\r\n            //     key: updatedProductRes['id'] || '',\r\n            //     name: updatedProductRes['name'] || '',\r\n            //     description: updatedProductRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...updatedProductRes\r\n            // }])\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setProductEditVisible(false);\r\n        setmyImages(false);\r\n        setCoverImageId('');\r\n        setPricing([]);\r\n        setTagIds([]);\r\n        setSelectedTags([]);\r\n        setBrandId(\"\");\r\n        setcategoryIds([]);\r\n        setCategoryOptions([]);\r\n        setMetaTags([]); \r\n        setBnMetaTags([]); \r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !(categoryOptions.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleUpdatePricing = (priceItem) => {\r\n\r\n\t\tconst positionInPricing = () => {\r\n\t\t\treturn pricing.map(item => item.id).indexOf(priceItem.id);\r\n\t\t  }\r\n\r\n\t\t  const index = positionInPricing();\r\n\r\n\t\t  // @ts-ignore\r\n\t\t  const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\r\n\t\t  const updatePricingList = [...pricing.slice(0, index), updatedItem, ...pricing.slice(index + 1)];\r\n\t\t\t \r\n\t\t  setPricing(updatePricingList); \r\n\r\n\t\tmessage.info('Product Pricing Updated');\r\n\t\tseTisPricingEditActive(true);\r\n\t\tsetpricingTagActiveKey('2'); \r\n    }\r\n    \r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n    const handleEditPricing = (id)=> {\r\n\t\tseTisPricingEditActive(true);\r\n\t\tconst pricingItem = pricing.find(item => item.id === id);\r\n\t\tif(pricingItem){\r\n\t\t\tsetEditPricingItem(pricingItem);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (updateProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    console.log('productDetailData', productDetailData);\r\n    console.log('productDetailState', productDetailState);\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data.metaTags){\r\n            const metaTags = productDetailState.data.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \r\n            setMetaTags(metaTags || [])\r\n            setBnMetaTags(bnMetaTags || [])\r\n        }\r\n\r\n    },[productDetailState['done']])\r\n\r\n    \r\n\r\n    console.log('productDetailData')\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues,\r\n                    ...{\r\n                    ...productDetailData,\r\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && productDetailState['data']['bn'] && {\r\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\r\n                        bnName: productDetailState['data']['bn'].name,\r\n                        metaUnit: productDetailState['data']['bn'].unit,\r\n                        bnDescription: productDetailState['data']['bn'].description,\r\n                      }),\r\n                } }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Product Edit\"\r\n                            visible={productEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            destroyOnClose={true}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n                        >\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Product Information *\r\n\t\t                                \t</h3>\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t    \tplaceHolder={'KG,POUND,GM'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Unit'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnUnit}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'কেজি,গ্রাম'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnUnit'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnUnit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnUnit'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnUnit');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={description}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div style={{\r\n                                                marginTop: '15px'\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                               BN Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={bnDescription}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setBNDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}> </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                            \r\n                                    <div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Pricing *\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabPosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveKey={pricingTagActiveKey}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey(`${value}`);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Variation\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing \r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddPricing={handleAddPricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpricingItem={editpricingItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleUpdatePricing={handleUpdatePricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisPricingEditActive={isPricingEditActive}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingEditIcon' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPricing(item.id); \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey('1');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingDeleteIcon' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"line-through\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && item.stock['available'] && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.available}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock['minimum'] && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"site-badge-count-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.minimum} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.values(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n\t\t\t</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {productDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {productDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    \r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                            Meta Data\r\n                                        </h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                                        \r\n                                        <Input\r\n                                        label='Meta title'\r\n                                        value={values.metaTitle}\r\n                                        placeHolder={'category...'}\r\n                                        name='metaTitle'\r\n                                        isError={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaTitle'])}\r\n\r\n                                        errorString={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaTitle'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaTitle')\r\n                                        }}\r\n                                        />\r\n\r\n                                        <Input\r\n                                        label='BN Meta title'\r\n                                        value={values.bnMetaTitle}\r\n                                        placeHolder={'ক্যাটাগড়ি...'}\r\n                                        name='bnMetaTitle'\r\n                                        isError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaTitle'])}\r\n\r\n                                        errorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaTitle'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('bnMetaTitle');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <TextArea\r\n                                        label='Meta description'\r\n                                        value={values.metaDescription}\r\n                                        placeholder={'meta...'}\r\n                                        name='metaDescription'\r\n                                        isError={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaDescription'])}\r\n\r\n                                        errorString={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaDescription'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaDescription');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <TextArea\r\n                                        label='BN Meta Description'\r\n                                        value={values.bnMetaDescription}\r\n                                        placeholder={'এইয় মেট...'}\r\n                                        name='bnMetaDescription'\r\n                                        isError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaDescription'])}\r\n\r\n                                        errorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaDescription'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('bnMetaDescription');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        Meta Tags (grocery,fashion)\r\n                                        </h3>\r\n\r\n                                        <MetaTags\r\n                                        // @ts-ignore\r\n                                        setTags={setMetaTags}\r\n                                        tags={metaTags}\r\n                                        />\r\n\r\n                                        <div style={{\r\n                                        marginTop:'15px'\r\n                                        }}></div>\r\n\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                                        </h3>\r\n\r\n                                        <MetaTags\r\n                                        // @ts-ignore\r\n                                        setTags={setBnMetaTags}\r\n                                        tags={bnMetaTags}\r\n                                        />\r\n                                        </div>\r\n                                        </div>\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories *\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={updateProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !updateProductState.error['error']['category'] ? 'checkicon' : updateProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands\r\n                                                    productDetailState={productDetailState}\r\n                                                    brandId={brandId}\r\n                                                    setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport {\r\n  notification,\r\n  Empty,\r\n  Table,\r\n  Badge,\r\n  Menu,\r\n  Dropdown,\r\n  Space,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  CheckCircleOutlined,\r\n  DownOutlined,\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  CheckOutlined,\r\n} from '@ant-design/icons';\r\n\r\n/// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewProduct from './AddNewProduct';\r\nimport ProductQuickEdit from './ProductQuickEdit';\r\n// import QuickEdit from './QuickEdit';\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (msg?: any) => {\r\n  notification.success({\r\n    message: msg || 'Product Deleted',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setProductList: any;\r\n  roles: any \r\n}\r\n\r\nconst MyTable = ({ data, setProductList, roles }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteProductState, handleDeleteProductFetch] = useHandleFetch(\r\n    {},\r\n    'deleteProduct'\r\n  );\r\n  const [productDetailVisible, setproductDetailVisible] = useState(false);\r\n  const [updateOrderStatusState, handleUpdateOrderStatusFetch] = useHandleFetch(\r\n    {},\r\n    'updateStock'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    const deleteProductRes = await handleDeleteProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteProductRes && deleteProductRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      const newProductList = data.filter((item) => item.id !== id);\r\n      setProductList(newProductList);\r\n    }\r\n\r\n    // console.log('deleteProductRes', deleteProductRes)\r\n  };\r\n\r\n  const handleUpdateOrderStatus = async (record, id, newStatus) => {\r\n    const updateOrderStatusRes = await handleUpdateOrderStatusFetch({\r\n      urlOptions: {\r\n        params: {\r\n          inStock: newStatus,\r\n        },\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateOrderStatusRes && updateOrderStatusRes.status === 'ok') {\r\n      openSuccessNotification('Updated Stock');\r\n\r\n      const positionInTag = () => {\r\n        return data.map((item) => item.id).indexOf(id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n      console.log('recordis', record, index);\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, data[index], {\r\n        inStock: newStatus,\r\n      });\r\n      const updateOrderList = [\r\n        ...data.slice(0, index),\r\n        updatedItem,\r\n        ...data.slice(index + 1),\r\n      ];\r\n      console.log('updateOrderList', updateOrderList, '-----', setProductList);\r\n      setProductList(updateOrderList);\r\n    }\r\n  };\r\n\r\n  const StatusItemMenu = (record, id) => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, true)}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          In stock\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, false)}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Out of stock\r\n        </Menu.Item>\r\n\r\n        {/* <Menu.Item\r\n                      onClick={() => handleUpdateOrderStatus(record,id,'deliver')}\r\n                      key=\"1\" icon={<CheckOutlined />}>\r\n                      Delivered\r\n                    </Menu.Item>\r\n              */}\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        style={{\r\n          paddingTop: '10px',\r\n          borderRadius: '5px !important',\r\n          overflow: 'hidden',\r\n          boxShadow:\r\n            '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\r\n        }}\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        tableLayout={'auto'}\r\n        onHeaderRow={(column) => {\r\n          return {\r\n            style: {\r\n              color: 'red !important',\r\n            },\r\n          };\r\n        }}\r\n      >\r\n        <Column\r\n          title=''\r\n          dataIndex='cover'\r\n          key='id'\r\n          width={'80px'}\r\n          className='classnameofthecolumn'\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                src={cover}\r\n                alt='cover img'\r\n                style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: 'contain',\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer',\r\n                }}\r\n              />\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Offer Price'\r\n          dataIndex='offerPrice'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Price'\r\n          dataIndex='price'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Available'\r\n          dataIndex='available'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n\r\n\r\n        <Column\r\n          align='right'\r\n          title='Stock'\r\n          dataIndex='inStock'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n            {isAccess('postCatalogue',roles) ? (\r\n                 <Dropdown\r\n                 overlay={() => StatusItemMenu(record, record.id)}\r\n                 placement='bottomRight'\r\n               >\r\n                 <a href='##'>\r\n                   <span\r\n                     // className={'product-attributeTag'}\r\n                     style={{\r\n                       fontSize: '12px',\r\n                     }}\r\n                   >\r\n                     {text ? 'In Stock' : 'Out of stock'}\r\n                     <span\r\n                       style={{\r\n                         marginLeft: '5px',\r\n                         fontSize: '10px',\r\n                       }}\r\n                     >\r\n                    <DownOutlined />\r\n                     </span>\r\n                   </span>\r\n                 </a>\r\n               </Dropdown>\r\n            ) : (\r\n              <a href='##'>\r\n              <span\r\n                // className={'product-attributeTag'}\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                {text ? 'In Stock' : 'Out of stock'}\r\n                <span\r\n                  style={{\r\n                    marginLeft: '5px',\r\n                    fontSize: '10px',\r\n                  }}\r\n                >\r\n             \r\n                </span>\r\n              </span>\r\n            </a>\r\n            )}\r\n           \r\n            </>\r\n          )}\r\n        />\r\n\r\n        {/* <Column\r\n          title=\"Unit\"\r\n          dataIndex=\"unit\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        /> */}\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n\r\n        {isAccess('postCatalogue','roles') && (\r\n        <Column\r\n        className='classnameofthecolumn'\r\n        title=''\r\n        key='action'\r\n        align='right'\r\n        render={(text, record: any) => (\r\n          <Space size='middle'>\r\n            <a href='##'>\r\n              <Tooltip placement='top' title='Edit Product'>\r\n                <span\r\n                  className='iconSize'\r\n                  onClick={() => {\r\n                    setvisible(true);\r\n                    setactiveCategoryForEdit(record);\r\n                  }}\r\n                >\r\n               <EditOutlined />\r\n             </span>\r\n           </Tooltip>\r\n         </a>\r\n\r\n         <Popconfirm\r\n           onConfirm={() => handleDeleteProduct(record.id)}\r\n           title='Are you sure？'\r\n           okText='Yes'\r\n           cancelText='No'\r\n         >\r\n           <span className='iconSize iconSize-danger'>\r\n             <DeleteOutlined />\r\n           </span>\r\n         </Popconfirm>\r\n       </Space>\r\n     )}\r\n   />\r\n        )}\r\n   \r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <ProductQuickEdit\r\n          productList={data}\r\n          setProductList={setProductList}\r\n          setProductEditVisible={setvisible}\r\n          productEditVisible={visible}\r\n          productDetailData={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  roles?:any;\r\n}\r\n\r\nconst ProductList = ({ roles  }: Props) => {\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  const [productState, handleProductListFetch] = useHandleFetch(\r\n    {},\r\n    'productList'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const setProducts = async () => {\r\n      const products = await handleProductListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            productType: 'product',\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setProductList(products);\r\n    };\r\n    setProducts();\r\n  }, []);\r\n\r\n  console.log('myFuckingProductList', productList);\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  // console.log('productState', productState)\r\n\r\n  const handleSearch = (value) => {\r\n    if (productState.data.length > 0) {\r\n      const newProductList = productState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setProductList(newProductList);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Products</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search products..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n              // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n\r\n          {isAccess('postCatalogue',roles) && (\r\n            <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n          </Button>\r\n          )}\r\n\r\n          \r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {productState.done && productList.length > 0 && (\r\n            <MyTable \r\n            roles={roles}\r\n            setProductList={setProductList} data={productList} />\r\n          )}\r\n          {productState.isLoading && <DataTableSkeleton />}\r\n          {productState.done && !(productList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '200px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Products found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {productState.done && (\r\n        <AddNewProduct\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          productList={productState.data}\r\n          setProductList={setProductList}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  roles: state.globalState,\r\n})\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(ProductList);\r\n\r\n\r\n\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import libraries\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  FileImageOutlined,\r\n  FileImageTwoTone,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  EditOutlined,\r\n} from '@ant-design/icons';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\nimport {\r\n  openSuccessNotification,\r\n  openErrorNotification,\r\n} from '../../components/Notification';\r\nimport Tags from './Tags';\r\nimport Brands from './Brands';\r\nimport Categories from './Categories';\r\nimport Pricing from './Pricing';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n  model: '',\r\n  unit: '',\r\n  regular: '',\r\n  offer: '',\r\n  available: '',\r\n  minimum: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n  pricing: [],\r\n  venue: '',\r\n  date: '',\r\n  time: '',\r\n  purchaseLimit: null,\r\n  bnUnit: '',\r\n  bnName: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  productEditVisible?: any;\r\n  setProductEditVisible?: any;\r\n  productDetailData?: any;\r\n  setProductDetailData?: any;\r\n}\r\n\r\nconst AddNewProduct = ({\r\n  productEditVisible,\r\n  setProductEditVisible,\r\n  productDetailData,\r\n  setProductDetailData,\r\n}: Props) => {\r\n  const [updateProductState, handleUpdateProductFetch] = useHandleFetch(\r\n    {},\r\n    'updateProduct'\r\n  );\r\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\r\n    {},\r\n    'productDetailById'\r\n  );\r\n  const [\r\n    attachImageToItemMultipleState,\r\n    handleAttachImageToItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [\r\n    attachImageToItemSingleState,\r\n    handleAttachImageToItemSingleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [\r\n    detachImageFromItemMultipleState,\r\n    handleDetachImageFromItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n  const [visible, setvisible] = useState(false);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [categoryids, setcategoryIds] = useState([]);\r\n  const [tagIds, setTagIds] = useState([]);\r\n  const [brandId, setBrandId] = useState('');\r\n  const [pricing, setPricing] = useState([]);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [date, setDateFeild] = useState('');\r\n  const [time, setTimeFeild] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [bnDescription, setBNDescription] = useState('');\r\n  const [metaTags, setMetaTags] = useState([]);\r\n  const [bnMetaTags, setBnMetaTags] = useState([]);\r\n  const [editpricingItem, setEditPricingItem] = useState({});\r\n  const [pricingTagActiveKey, setpricingTagActiveKey] = useState('1');\r\n  const [isPricingEditActive, seTisPricingEditActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      await handleProductDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: productDetailData.id,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [productDetailData]);\r\n\r\n  useEffect(() => {\r\n    if (productDetailData && productDetailData.brand) {\r\n      setBrandId(productDetailData.brand['id']);\r\n    } else {\r\n      setBrandId('');\r\n    }\r\n    if (\r\n      productDetailData &&\r\n      productDetailData.tags &&\r\n      productDetailData.tags.length > 0\r\n    ) {\r\n      // const tagIds = productDetailData.tags.map(item => item.id);\r\n      setSelectedTags(productDetailData.tags);\r\n    } else {\r\n      setSelectedTags([]);\r\n    }\r\n    if (\r\n      productDetailData &&\r\n      productDetailData.category &&\r\n      productDetailData.category.length > 0\r\n    ) {\r\n      const categoryIds = productDetailData.category.map((item) => item.id);\r\n      setCategoryOptions(categoryIds);\r\n    } else {\r\n      setCategoryOptions([]);\r\n    }\r\n\r\n    if (\r\n      productDetailData &&\r\n      productDetailData.pricing &&\r\n      productDetailData.pricing\r\n    ) {\r\n      setPricing(productDetailData.pricing);\r\n    } else {\r\n      setPricing([]);\r\n    }\r\n\r\n    if (productDetailData && productDetailData.date && productDetailData.date) {\r\n      setDateFeild(productDetailData.date);\r\n    } else {\r\n      setDateFeild('');\r\n    }\r\n\r\n    if (productDetailData && productDetailData.time && productDetailData.time) {\r\n      setTimeFeild(productDetailData.time);\r\n    } else {\r\n      setTimeFeild('');\r\n    }\r\n\r\n    if (productDetailData && productDetailData.description) {\r\n      setDescription(productDetailData.description);\r\n    } else {\r\n      setDescription('');\r\n    }\r\n\r\n    if (\r\n      productDetailData &&\r\n      productDetailData.bn &&\r\n      productDetailData.bn['description']\r\n    ) {\r\n      setBNDescription(productDetailData.bn['description']);\r\n    } else {\r\n      setBNDescription('');\r\n    }\r\n  }, [productDetailData]);\r\n\r\n  useEffect(() => {\r\n    if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n   \r\n      const images = productDetailState.data.image;\r\n\t\t\tlet mahImages = []; \r\n\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tmahImages = images;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n\t\t\t\tconst ixists = images.find(item => item.id === productDetailState.data.cover['id']);\r\n\t\t\t\tif(!ixists){\r\n\t\t\t\t\tmahImages = [productDetailState.data.cover, ...mahImages]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCoverImageId(productDetailState.data.cover['id']);\r\n\t\t\t}\r\n\t\r\n\t\t\t\t// @ts-ignore\r\n        setmyImages(mahImages);\r\n\r\n\r\n    }\r\n  }, [productDetailState]);\r\n\r\n  useEffect(() => {\r\n    console.log('thumnail', myImages);\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      console.log('thumnail2', myImages);\r\n\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'product',\r\n          itemId: productDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'product',\r\n          itemId: productDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    console.log('thumbnailRes', thumbnailRes);\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      openSuccessNotification('Set as thumbnail!');\r\n      // const positionInBrand = () => {\r\n      //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n\r\n      // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n      // if (prevItem) {\r\n      //     console.log('prevItem--', prevItem, 'image--', image);\r\n      //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n      //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n      //     setProductList(updateProductList);\r\n\r\n      // }\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const makeEmptyCategoryOptions = (setEmpty) => {\r\n    setEmpty([]);\r\n  };\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds = myImages\r\n      ? myImages.map((image) => {\r\n          return image.id;\r\n        })\r\n      : [];\r\n\r\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n      const aboutToUpdatedImageIds = [];\r\n\r\n      if (imagesIds && imagesIds.length > 0) {\r\n        imagesIds.forEach((imageId) => {\r\n          if (productDetailData && productDetailData['image']) {\r\n            if (!productDetailData['image'].includes(imageId)) {\r\n              aboutToUpdatedImageIds.push(imageId);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n        await handleAttachImageToItemMultipleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              collection: 'product',\r\n              itemId: productDetailData.id,\r\n            },\r\n          },\r\n          body: {\r\n            image: aboutToUpdatedImageIds,\r\n          },\r\n        });\r\n      } else if (\r\n        aboutToUpdatedImageIds[0] &&\r\n        aboutToUpdatedImageIds.length < 1\r\n      ) {\r\n        await handleAttachImageToItemSingleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              imageId: aboutToUpdatedImageIds[0].id,\r\n              collection: 'product',\r\n              itemId: productDetailData.id,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    const updatedProductRes = await handleUpdateProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: productDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: description,\r\n        model: values.model,\r\n        unit: values.unit,\r\n        category: categoryOptions,\r\n        tags: tagIds,\r\n        brand: brandId,\r\n        image: imagesIds,\r\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n        pricing: pricing,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: metaTags.join(','),\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnMetaTags.join(','),\r\n          name: values.bnName.trim(),\r\n          unit: values.metaUnit,\r\n          description: bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updatedProductRes && updatedProductRes.status === 'ok') {\r\n      openSuccessNotification('Product Updated');\r\n      setProductEditVisible(false);\r\n      setProductDetailData({\r\n        // @ts-ignore\r\n        ...updatedProductRes,\r\n        category: productDetailData.category,\r\n        brand: productDetailData.brand,\r\n        tags: productDetailData.tags,\r\n        cover: productDetailData.cover,\r\n        image: productDetailData.image,\r\n      });\r\n\r\n      console.log('updatedProductRes', updatedProductRes);\r\n      // setProductList([...productList, {\r\n      //     id: updatedProductRes['id'] || '',\r\n      //     key: updatedProductRes['id'] || '',\r\n      //     name: updatedProductRes['name'] || '',\r\n      //     description: updatedProductRes['description'] || '',\r\n      //     // @ts-ignore\r\n      //     ...updatedProductRes\r\n      // }])\r\n      // @ts-ignore\r\n      setmyImages([]);\r\n      setCoverImageId('');\r\n      setPricing([]);\r\n      setTagIds([]);\r\n      setSelectedTags([]);\r\n      setBrandId('');\r\n      setcategoryIds([]);\r\n      setCategoryOptions([]);\r\n      actions.resetForm();\r\n    } else {\r\n      // openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!updateProductState['isLoading']) {\r\n      const error = updateProductState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [updateProductState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setProductEditVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !values.name ||\r\n      !(pricing.length > 0) ||\r\n      !(categoryOptions.length > 0) ||\r\n      !isValid\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleDeleteFromSelectedImage = () => {};\r\n\r\n  const handleThumbnailImageDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myThumbnailImage &&\r\n      myThumbnailImage.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    if (newImages.length > 0) {\r\n      setmyThumbnailImage(newImages);\r\n    } else setmyThumbnailImage(false);\r\n  };\r\n\r\n  const handleUpdatePricing = (priceItem) => {\r\n    const positionInPricing = () => {\r\n      return pricing.map((item) => item.id).indexOf(priceItem.id);\r\n    };\r\n\r\n    const index = positionInPricing();\r\n\r\n    // @ts-ignore\r\n    const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\r\n    const updatePricingList = [\r\n      ...pricing.slice(0, index),\r\n      updatedItem,\r\n      ...pricing.slice(index + 1),\r\n    ];\r\n\r\n    setPricing(updatePricingList);\r\n\r\n    message.info('Product Pricing Updated');\r\n    seTisPricingEditActive(true);\r\n    setpricingTagActiveKey('2');\r\n  };\r\n\r\n  const handleEditPricing = (id) => {\r\n    seTisPricingEditActive(true);\r\n    const pricingItem = pricing.find((item) => item.id === id);\r\n    if (pricingItem) {\r\n      setEditPricingItem(pricingItem);\r\n    }\r\n  };\r\n\r\n  const handleAddPricing = (priceItem) => {\r\n    setPricing([\r\n      {\r\n        ...priceItem,\r\n        id: pricing.length,\r\n      },\r\n      ...pricing,\r\n    ]);\r\n    message.info('Product Pricing Added');\r\n  };\r\n\r\n  const handleDeletePricing = (id) => {\r\n    const newPricing = pricing.filter((item) => item.id !== id);\r\n    setPricing(newPricing);\r\n    message.info('Product Pricing Deleted');\r\n  };\r\n\r\n  const isCategoryInValid = () => {\r\n    if (\r\n      updateProductState.error['error']['category'] &&\r\n      !categoryids &&\r\n      categoryids.length\r\n    ) {\r\n      return true;\r\n    } else if (categoryids && categoryids.length > 0) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (date, dateString) => {\r\n    setDateFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  console.log('productDetailData', productDetailData);\r\n  console.log('productDetailState', productDetailState);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      productDetailState.data &&\r\n      Object.keys(productDetailState.data).length > 0\r\n    ) {\r\n      const metaTags = productDetailState.data.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags = productDetailState.data.bn['metaTags'].split(',');\r\n      setMetaTags(metaTags || []);\r\n      setBnMetaTags(bnMetaTags || []);\r\n    }\r\n  }, [productDetailState['done']]);\r\n\r\n  console.log('BnproductDetailData', productDetailData);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...{\r\n          ...productDetailData,\r\n          ...(productDetailState['data'] &&\r\n            Object.keys(productDetailState['data']).length > 0 &&\r\n            productDetailState['data']['bn'] && {\r\n              bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n              bnMetaDescription:\r\n                productDetailState['data']['bn'].metaDescription,\r\n              bnName: productDetailState['data']['bn'].name,\r\n              metaUnit: productDetailState['data']['bn'].unit,\r\n              bnDescription: productDetailState['data']['bn'].description,\r\n            }),\r\n        },\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: 0,\r\n              padding: 0,\r\n            }}\r\n            width={'70vw'}\r\n            title='Product Edit'\r\n            visible={productEditVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            destroyOnClose={true}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <section className='addProductGridContainer'>\r\n              <div className='addProductGridContainer__left'>\r\n                <div className='addProductGridContainer__name'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Product Information</h3>\r\n                    <div\r\n                      className={\r\n                        values.name && values.name.length > 2\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Name'\r\n                      value={values.name}\r\n                      placeHolder={'Rafty ox'}\r\n                      name='name'\r\n                      isError={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['name'])\r\n                      }\r\n                      errorString={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['name'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('name');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Name'\r\n                      value={values.bnName}\r\n                      placeHolder={'রাফতি অক্স'}\r\n                      name='bnName'\r\n                      isError={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnName'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnName'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnName');\r\n                      }}\r\n                    />\r\n\r\n                    {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\r\n                    {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                    <Input\r\n                      label='Unit'\r\n                      value={values.unit}\r\n                      name='unit'\r\n                      placeHolder={'KG,POUND,GM'}\r\n                      isError={\r\n                        (touched.unit && errors.unit) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['unit'])\r\n                      }\r\n                      errorString={\r\n                        (touched.unit && errors.unit) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['unit'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('unit');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Unit'\r\n                      value={values.bnUnit}\r\n                      placeHolder={'কেজি,গ্রাম'}\r\n                      name='bnUnit'\r\n                      isError={\r\n                        (touched.bnUnit && errors.bnUnit) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnUnit'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnUnit && errors.bnUnit) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnUnit'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnUnit');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Model Number'\r\n                      value={values.model}\r\n                      name='model'\r\n                      isError={\r\n                        (touched.model && errors.model) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['model'])\r\n                      }\r\n                      errorString={\r\n                        (touched.model && errors.model) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['model'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('model');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>Description</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={description}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setDescription(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>BN Description</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={bnDescription}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBNDescription(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    >\r\n                      {' '}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__price'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Product Pricing *</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        pricing && pricing.length > 0\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Tabs\r\n                      animated={true}\r\n                      tabPosition='top'\r\n                      type='card'\r\n                      activeKey={pricingTagActiveKey}\r\n                      onChange={(value) => {\r\n                        setpricingTagActiveKey(`${value}`);\r\n                      }}\r\n                    >\r\n                      <TabPane tab='Add Variation' key='1'>\r\n                        <Pricing\r\n                          handleAddPricing={handleAddPricing}\r\n                          pricingItem={editpricingItem}\r\n                          handleUpdatePricing={handleUpdatePricing}\r\n                          isPricingEditActive={isPricingEditActive}\r\n                        />\r\n                      </TabPane>\r\n                      <TabPane tab='Pricing List' key='2'>\r\n                        <div className='addProductGridContainer__item-body-pricingContainer'>\r\n                          {pricing.length > 0 &&\r\n                            pricing.map((item) => {\r\n                              return (\r\n                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n                                    {/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n                                    <span\r\n                                      className='pricingEditIcon'\r\n                                      onClick={() => {\r\n                                        handleEditPricing(item.id);\r\n                                        setpricingTagActiveKey('1');\r\n                                      }}\r\n                                    >\r\n                                      <EditOutlined />\r\n                                    </span>\r\n                                    <span\r\n                                      className='pricingDeleteIcon'\r\n                                      onClick={() =>\r\n                                        handleDeletePricing(item.id)\r\n                                      }\r\n                                    >\r\n                                      <DeleteOutlined />\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                    <div>\r\n                                      <h3>Price</h3>\r\n                                      <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                        {item.price.offer ? (\r\n                                          <>\r\n                                            <h4>{item.price.offer}</h4>/\r\n                                            <h5\r\n                                              style={{\r\n                                                textDecoration: 'line-through',\r\n                                              }}\r\n                                            >\r\n                                              {item.price.regular}\r\n                                            </h5>\r\n                                          </>\r\n                                        ) : (\r\n                                          <h4>{item.price.regular}</h4>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    {item.stock && item.stock['available'] && (\r\n                                      <div>\r\n                                        <Badge\r\n                                          overflowCount={999}\r\n                                          count={item.stock.available}\r\n                                        >\r\n                                          <h3>Stock</h3>\r\n                                        </Badge>\r\n                                        {item.stock['minimum'] && (\r\n                                          <>\r\n                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                              <div>\r\n                                                <h6>\r\n                                                  min\r\n                                                  <Badge\r\n                                                    className='site-badge-count-4'\r\n                                                    overflowCount={999}\r\n                                                    count={item.stock.minimum}\r\n                                                  />\r\n                                                </h6>\r\n                                              </div>\r\n                                            </div>\r\n                                          </>\r\n                                        )}\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n\r\n                                  {item.attribute &&\r\n                                    Object.values(item.attribute).length >\r\n                                      0 && (\r\n                                      <>\r\n                                        <h3>Attributes</h3>\r\n                                        <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                          {item.attribute &&\r\n                                            Object.keys(item.attribute).length >\r\n                                              0 &&\r\n                                            Object.keys(item.attribute).map(\r\n                                              (attributeItem) => {\r\n                                                return (\r\n                                                  <div>\r\n                                                    <h6>{attributeItem}</h6>\r\n                                                    <h4>\r\n                                                      {\r\n                                                        item.attribute[\r\n                                                          attributeItem\r\n                                                        ]\r\n                                                      }\r\n                                                    </h4>\r\n                                                  </div>\r\n                                                );\r\n                                              }\r\n                                            )}\r\n                                        </div>\r\n                                      </>\r\n                                    )}\r\n                                </div>\r\n                              );\r\n                            })}\r\n\r\n                          {!(pricing.length > 0) && (\r\n                            <div\r\n                              style={{\r\n                                width: '100%',\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                              }}\r\n                            >\r\n                              <Empty\r\n                                description='No Pricing added'\r\n                                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </TabPane>\r\n                    </Tabs>\r\n\r\n                    <div className='addProductGridContainer__item-body-container'></div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Image</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      padding: '10px',\r\n                    }}\r\n                    className='aboutToUploadImagesContainer'\r\n                  >\r\n                    {productDetailState.isLoading && (\r\n                      <div\r\n                        style={{\r\n                          padding: '20px 0',\r\n                        }}\r\n                      >\r\n                        <Spin />\r\n                      </div>\r\n                    )}\r\n                    {productDetailState.done && (\r\n                      <>\r\n                        {myImages &&\r\n                          // @ts-ignore\r\n                          myImages.length > 0 &&\r\n                          myImages.map((image, index) => {\r\n                            return (\r\n                              <div className='aboutToUploadImagesContainer__item'>\r\n                                <div\r\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                  onClick={() => {\r\n                                    setCoverImageId(image.id);\r\n                                    handleSetImageAsThumnail(image);\r\n                                  }}\r\n                                >\r\n                                  <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n\r\n                                <span\r\n                                  onClick={() => {\r\n                                    handleImagesDelete(image.id);\r\n                                    handleDetachSingleImage(image.id);\r\n                                  }}\r\n                                  className='aboutToUploadImagesContainer__item-remove'\r\n                                >\r\n                                  <CloseOutlined />\r\n                                </span>\r\n\r\n                                {coverImageId === image.id ? (\r\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                  </span>\r\n                                ) : (\r\n                                  !coverImageId &&\r\n                                  index === 0 && (\r\n                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                      <CheckOutlined />\r\n                                    </span>\r\n                                  )\r\n                                )}\r\n                              </div>\r\n                            );\r\n                          })}\r\n\r\n                        <Tooltip title={'Attach images'}>\r\n                          <div\r\n                            onClick={() => {\r\n                              setvisible(true);\r\n                              setisModalOpenForImages(true);\r\n                              setisModalOpenForThumbnail(false);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem'\r\n                          >\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                              <PlusOutlined />\r\n                            </span>\r\n                          </div>\r\n                        </Tooltip>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Meta Data</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Meta title'\r\n                      value={values.metaTitle}\r\n                      placeHolder={'category...'}\r\n                      name='metaTitle'\r\n                      isError={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['metaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['metaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Meta title'\r\n                      value={values.bnMetaTitle}\r\n                      placeHolder={'ক্যাটাগড়ি...'}\r\n                      name='bnMetaTitle'\r\n                      isError={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='Meta description'\r\n                      value={values.metaDescription}\r\n                      placeholder={'meta...'}\r\n                      name='metaDescription'\r\n                      isError={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['metaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['metaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='BN Meta Description'\r\n                      value={values.bnMetaDescription}\r\n                      placeholder={'এইয় মেট...'}\r\n                      name='bnMetaDescription'\r\n                      isError={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error'][\r\n                            'bnMetaDescription'\r\n                          ])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error'][\r\n                            'bnMetaDescription'\r\n                          ])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      Meta Tags (grocery,fashion)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setMetaTags}\r\n                      tags={metaTags}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setBnMetaTags}\r\n                      tags={bnMetaTags}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='addProductGridContainer__right'>\r\n                <div className='addProductGridContainer__category'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Categories</h3>\r\n\r\n                      <Tooltip\r\n                        color='red'\r\n                        visible={\r\n                          updateProductState.error['error']['category'] &&\r\n                          !(categoryids.length > 0)\r\n                        }\r\n                        placement='left'\r\n                        title={'Select at least one category'}\r\n                      >\r\n                        <div\r\n                          className={\r\n                            !(categoryids.length > 0) &&\r\n                            !updateProductState.error['error']['category']\r\n                              ? 'checkicon'\r\n                              : updateProductState.error['error']['category']\r\n                              ? 'checkicon-error'\r\n                              : 'checkicon-active'\r\n                          }\r\n                        >\r\n                          <CheckCircleOutlined />\r\n                        </div>\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Categories\r\n                        setCategoryOptions={setCategoryOptions}\r\n                        categoryOptions={categoryOptions}\r\n                        setcategoryIds={setcategoryIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__tag'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Tags</h3>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Tags\r\n                        setSelectedTags={setSelectedTags}\r\n                        selectedTags={selectedTags}\r\n                        setTagIds={setTagIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='addProductGridContainer__brand'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Brand</h3>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Brands\r\n                        productDetailState={productDetailState}\r\n                        brandId={brandId}\r\n                        setBrandId={setBrandId}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisible}\r\n            visible={visible}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            setmyThumbnailImage={setmyThumbnailImage}\r\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n            isModalOpenForImages={isModalOpenForImages}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*/ //\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport { EditOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n  Badge,\r\n} from 'antd';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport ProductEdit from './ProductEdit';\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  roles: any; \r\n}\r\n\r\nconst NewBrandDetail = ({roles}: Props) => {\r\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\r\n    {},\r\n    'productDetailById'\r\n  );\r\n\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const productId = params['id'];\r\n  const [productEditVisible, setProductEditVisible] = useState(false);\r\n  const [productDetailData, setProductDetailData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      const productDetailRes = await handleProductDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: productId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (productDetailRes) {\r\n        // @ts-ignore\r\n        setProductDetailData(productDetailRes);\r\n      }\r\n\r\n      console.log('productDetailRes', productDetailRes);\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [productId]);\r\n\r\n  console.log('productDetailState', productDetailState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  const getImagesInCollumn = (imgs) => {\r\n    if (!imgs[0]) return false;\r\n    imgs = imgs.map((item) => item.cover);\r\n    const columns = {};\r\n\r\n    let localIndex = 0;\r\n    let columnNumber = 0;\r\n\r\n    imgs.forEach((item, index) => {\r\n      if (localIndex < 3) {\r\n        if (columns[columnNumber]) {\r\n          columns[columnNumber] = [...columns[columnNumber], item];\r\n        } else columns[columnNumber] = [item];\r\n\r\n        localIndex = localIndex + 1;\r\n        columnNumber = columnNumber + 1;\r\n      } else {\r\n        localIndex = 0;\r\n        columnNumber = 0;\r\n        console.log('localIndex', localIndex);\r\n      }\r\n    });\r\n\r\n    return columns;\r\n  };\r\n\r\n  const row =\r\n    productDetailState.done && productDetailData && productDetailData['image']\r\n      ? getImagesInCollumn(productDetailData['image'])\r\n      : [];\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Product Detail</h3>\r\n\r\n        {productDetailState.done &&\r\n          productDetailData &&\r\n          Object.keys(productDetailData).length > 0 && (\r\n            <>\r\n              <ProductEdit\r\n                productEditVisible={productEditVisible}\r\n                setProductEditVisible={setProductEditVisible}\r\n                productDetailData={productDetailData}\r\n                setProductDetailData={setProductDetailData}\r\n              />\r\n                 {isAccess('postCatalogue',roles) && (\r\n                  <Button\r\n                  onClick={() => setProductEditVisible(true)}\r\n                  type='link'\r\n                  icon={<EditOutlined />}\r\n                >\r\n                  Edit\r\n                </Button>\r\n                 )}\r\n            \r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton\r\n        avatar\r\n        paragraph={{ rows: 3 }}\r\n        loading={productDetailState.isLoading}\r\n      >\r\n        {productDetailState.done &&\r\n          productDetailData &&\r\n          !(Object.keys(productDetailData).length > 0) && (\r\n            <Empty\r\n              description='No Product found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {productDetailState.done &&\r\n          productDetailData &&\r\n          Object.keys(productDetailData).length > 0 && (\r\n            <>\r\n              <div className='brandDetailContainer__header'>\r\n                <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                  <img\r\n                    src={\r\n                      productDetailData['cover'] &&\r\n                      productDetailData['cover']['cover']\r\n                    }\r\n                    alt=''\r\n                  />\r\n                </div>\r\n                <div className='brandDetailContainer__header-info'>\r\n                  <h2>{productDetailData['name']}</h2>\r\n                  <h4>{productDetailData['price']}</h4>\r\n                  <h3>{productDetailData['description']}</h3>\r\n\r\n                  {productDetailData['url'] && (\r\n                    <h3>\r\n                      URL:\r\n                      <span>{productDetailData['url']}</span>\r\n                    </h3>\r\n                  )}\r\n\r\n                  {/* \r\n                                {productDetailData['tags'] && productDetailData['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailData['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                  {productDetailData['category'] &&\r\n                    productDetailData['category'].length > 0 && (\r\n                      <>\r\n                        <h3>\r\n                          CATEGORIES:\r\n                          {productDetailData['category'].map((cat) => {\r\n                            return (\r\n                              <span\r\n                                onClick={() =>\r\n                                  history.push(`/admin/category/${cat.id}`)\r\n                                }\r\n                              >\r\n                                {cat.name}\r\n                              </span>\r\n                            );\r\n                          })}\r\n                        </h3>\r\n                      </>\r\n                    )}\r\n                </div>\r\n              </div>\r\n\r\n              {productDetailData['icon'] && (\r\n                <>\r\n                  <div className='brandDetailContainer__heading'>\r\n                    <h3>Icon</h3>\r\n                  </div>\r\n\r\n                  <div className='brandDetailContainer__inlineBox'>\r\n                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                      <img\r\n                        src={\r\n                          productDetailData['icon'] && productDetailData['icon']\r\n                        }\r\n                        alt=''\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      marginBottom: '25px',\r\n                    }}\r\n                  ></div>\r\n                </>\r\n              )}\r\n\r\n              {productDetailData['pricing'] &&\r\n                productDetailData['pricing'].length > 0 && (\r\n                  <>\r\n                    <div className='brandDetailContainer__heading'>\r\n                      <h3>Pricing</h3>\r\n                    </div>\r\n\r\n                    <div className='brandDetailContainer__pricing'>\r\n                      <div className='addProductGridContainer__item-body-pricingContainer'>\r\n                        {productDetailData['pricing'].map((item) => {\r\n                          return (\r\n                            <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n                              <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                <div>\r\n                                  <h3>Price</h3>\r\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                    {item.price.offer ? (\r\n                                      <>\r\n                                        <h4>{item.price.offer}</h4>/\r\n                                        <h5\r\n                                          style={{\r\n                                            textDecoration: 'line-through',\r\n                                          }}\r\n                                        >\r\n                                          {item.price.regular}\r\n                                        </h5>\r\n                                      </>\r\n                                    ) : (\r\n                                      <h4>{item.price.regular}</h4>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n\r\n                                {item.stock && (\r\n                                  <div>\r\n                                    <Badge\r\n                                      overflowCount={999}\r\n                                      count={item.stock.available}\r\n                                    >\r\n                                      <h3>Stock</h3>\r\n                                    </Badge>\r\n                                    <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                      <div>\r\n                                        <h6>\r\n                                          min\r\n                                          <Badge\r\n                                            className='site-badge-count-4'\r\n                                            overflowCount={999}\r\n                                            count={item.stock.minimum}\r\n                                          />\r\n                                        </h6>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n\r\n                              {item.attribute &&\r\n                                Object.values(item.attribute).length > 0 && (\r\n                                  <>\r\n                                    <h3>Attributes</h3>\r\n                                    <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                      {item.attribute &&\r\n                                        Object.keys(item.attribute).length >\r\n                                          0 &&\r\n                                        Object.keys(item.attribute).map(\r\n                                          (attributeItem) => {\r\n                                            return (\r\n                                              <div>\r\n                                                <h6>{attributeItem}</h6>\r\n                                                <h4>\r\n                                                  {\r\n                                                    item.attribute[\r\n                                                      attributeItem\r\n                                                    ]\r\n                                                  }\r\n                                                </h4>\r\n                                              </div>\r\n                                            );\r\n                                          }\r\n                                        )}\r\n                                    </div>\r\n                                  </>\r\n                                )}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '25px',\r\n                      }}\r\n                    ></div>\r\n                  </>\r\n                )}\r\n\r\n              {productDetailData['image'] &&\r\n                productDetailData['image'].length > 0 && (\r\n                  <>\r\n                    <div className='brandDetailContainer__heading'>\r\n                      <h3>Image Gallary</h3>\r\n                    </div>\r\n\r\n                    <div className='brandDetailContainer__imageGallary'>\r\n                      <div className='imgGallaryContainer'>\r\n                        <div className='imgGallary-row'>\r\n                          {row &&\r\n                            Object.keys(row).map((column) => {\r\n                              return (\r\n                                <div className='imgGallary-column'>\r\n                                  {row[column] &&\r\n                                    row[column].map((img) => {\r\n                                      return (\r\n                                        <img\r\n                                          src={img}\r\n                                          style={{\r\n                                            width: '100%',\r\n                                          }}\r\n                                        />\r\n                                      );\r\n                                    })}\r\n                                </div>\r\n                              );\r\n                            })}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '25px',\r\n                      }}\r\n                    ></div>\r\n                  </>\r\n                )}\r\n\r\n              {productDetailData['brand'] &&\r\n                Object.keys(productDetailData['brand']).length > 0 && (\r\n                  <>\r\n                    <div className='brandDetailContainer__heading'>\r\n                      <h3>Brand</h3>\r\n                    </div>\r\n\r\n                    <div\r\n                      onClick={() =>\r\n                        history.push(\r\n                          `/admin/brand/${productDetailData['brand']['id']}`\r\n                        )\r\n                      }\r\n                      className='brandDetailContainer__brand'\r\n                    >\r\n                      <div className='brandDetailContainer__brand-coverbox'>\r\n                        <img\r\n                          src={\r\n                            productDetailData['brand']['cover'] &&\r\n                            productDetailData['brand']['cover']\r\n                          }\r\n                          alt=''\r\n                        />\r\n                      </div>\r\n                      <div className='brandDetailContainer__brand-info'>\r\n                        <h2>{productDetailData['brand']['name']}</h2>\r\n                        <h3>{productDetailData['brand']['description']}</h3>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '25px',\r\n                      }}\r\n                    ></div>\r\n                  </>\r\n                )}\r\n\r\n              {productDetailData['primaryCategory'] &&\r\n                Object.keys(productDetailData['primaryCategory']).length >\r\n                  0 && (\r\n                  <>\r\n                    <div className='brandDetailContainer__heading'>\r\n                      <h3>Primary Category</h3>\r\n                    </div>\r\n\r\n                    <div\r\n                      onClick={() =>\r\n                        history.push(\r\n                          `/admin/category/${productDetailData['primaryCategory']['id']}`\r\n                        )\r\n                      }\r\n                      className='brandDetailContainer__brand'\r\n                    >\r\n                      <div className='brandDetailContainer__brand-coverbox'>\r\n                        <img\r\n                          src={\r\n                            productDetailData['primaryCategory']['cover'] &&\r\n                            productDetailData['primaryCategory']['cover']\r\n                          }\r\n                          alt=''\r\n                        />\r\n                      </div>\r\n                      <div className='brandDetailContainer__brand-info'>\r\n                        <h2>{productDetailData['primaryCategory']['name']}</h2>\r\n                        <h3>\r\n                          {productDetailData['primaryCategory']['description']}\r\n                        </h3>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '25px',\r\n                      }}\r\n                    ></div>\r\n                  </>\r\n                )}\r\n            </>\r\n          )}\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  roles: state.globalState,\r\n})\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(NewBrandDetail);\r\n\r\n\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagList?:any; \r\n    tagList?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagList,tagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n    const [tags,setTags] = useState([]);\r\n    const [bnTags,setBnTags] = useState([]);\r\n    \r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n     \r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\t\t\tsetTagEditVisible(false)\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }; \r\n\r\n\r\n    // useEffect(()=>{\r\n\r\n    //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\r\n    //         const metaTags = tagDetailData.metaTags.split(','); \r\n\r\n    //         console.log('localMetaTags',metaTags);\r\n           \r\n    //         const bnMetaTags = tagDetailData.bn['metaTags'].split(','); \r\n\r\n    //         setTags(metaTags)\r\n    //         setBnTags(bnMetaTags)\r\n    //     }\r\n\r\n    // },[]); \r\n\r\n\r\n    console.log('tagDetailData',tagDetailData);\r\n\r\n\r\n \r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n                ...initialValues, \r\n                ...tagDetailData,\r\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\r\n                    bnMetaTitle: tagDetailData['bn']\r\n                    && tagDetailData['bn'].metaTitle\r\n                    && tagDetailData['bn'].metaTitle,\r\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\r\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\r\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\r\n                  })\r\n            }}\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                        \tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n                            title=\"Tag Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n                        >\r\n                                 \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([{\r\n                id: addTagRes['_id'] || '',\r\n                key: addTagRes['_id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            },...tagList])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport TagQuickEdit from \"./TagQuickEdit\"\r\nimport AddNewTag from \"./AddNewTag\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList, roles }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Product\"\r\n\t\t\t\t\tdataIndex=\"productCount\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t{isAccess('postCatalogue',roles) && (\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t</Space>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n                 )}\r\n\r\n\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <TagQuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\ttagEditVisible={visible}\r\n\t\t\t\tsetTagEditVisible={setvisible}\r\n\t\t\t\ttagDetailData={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { \r\n\troles?:any\r\n}\r\n\r\nconst TagList = ({roles }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({\r\n\t\t\t\turlOptions:{\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t  sortItem: 'added',\r\n\t\t\t\t\t  sortOrderValue: '-1'\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tTags\r\n          \t\t\t\t</h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search tags..\"\r\n\t\t\t\t\t\t\tonChange={e => handleSearch(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{isAccess('postCatalogue',roles) && (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n                 )}\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\troles={roles}\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '200px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewTag\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    roles: state.globalState,\r\n  })\r\n  \r\n  // @ts-ignore\r\n  export default connect(mapStateToProps, null)(TagList);\r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n    const [tags,setTags] = useState([]);\r\n    const [bnTags,setBnTags] = useState([]);\r\n    \r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n                description: values.description,\r\n            })\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\t\t\tsetTagEditVisible(false)\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }; \r\n\r\n\r\n    // useEffect(()=>{\r\n\r\n    //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\r\n    //         const metaTags = tagDetailData.metaTags.split(','); \r\n\r\n    //         console.log('localMetaTags',metaTags);\r\n           \r\n    //         const bnMetaTags = tagDetailData.bn['metaTags'].split(','); \r\n\r\n    //         setTags(metaTags)\r\n    //         setBnTags(bnMetaTags)\r\n    //     }\r\n\r\n    // },[]); \r\n\r\n\r\n    console.log('tagDetailData',tagDetailData);\r\n\r\n\r\n \r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n                ...initialValues, \r\n                ...tagDetailData,\r\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\r\n                    bnMetaTitle: tagDetailData['bn']\r\n                    && tagDetailData['bn'].metaTitle\r\n                    && tagDetailData['bn'].metaTitle,\r\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\r\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\r\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\r\n                  })\r\n            }}\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                        \tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n                            title=\"Tag Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n                        >\r\n                                 \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport TagEdit from \"./TagEdit\";\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    roles?: any;\r\n}\r\n\r\nconst NewBrandDetail = ({roles}: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Tag Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n\r\n                        \r\n\t\t\t\t\t{isAccess('postCatalogue',roles) && (\r\n\t\t\t\t\t  <Button\r\n                      onClick={() => setTagEditVisible(true)}\r\n                      type='link'\r\n                      icon={<EditOutlined />}\r\n                  >\r\n                      Edit\r\n                </Button>\r\n                 )}\r\n                    </>\r\n                )}\r\n\r\n                \r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}; \r\n\r\nconst mapStateToProps = state => ({\r\n    roles: state.globalState,\r\n  })\r\n  \r\n  // @ts-ignore\r\n  export default connect(mapStateToProps, null)(NewBrandDetail);\r\n  \r\n  \r\n  \r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(productIds && productIds.length > 0){\r\n            console.log('shippingRunning')\r\n            const selecttedOptions = productIds.map(item => item.name); \r\n            setselectedOptions(selecttedOptions)\r\n        }\r\n    },[productIds]); \r\n\r\n    console.log('OrderProudctItemsProductIds',productIds); \r\n\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n                {tagState.done && tagState.data && !(tagState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Found' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { notification, Modal,Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport OrderedProductsSelectProducts from \"./OrderedProductsSelectProducts\";\r\nimport OrderedProductsSelectedProductItems from \"./OrderedProductsSelectedProductItems\";\r\nimport FreeSelectProducts from \"./FreeSelectProducts\";\r\nimport FreeSelectedProductItems from \"./FreeSelectedProductItems\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"name\": \"\",\r\n    \"code\": \"\",\r\n    \"minimumOrder\": null,\r\n    \"amount\": \"\",\r\n    \"amountType\": \"\",\r\n    \"orderedProducts\": [],\r\n    \"freeDelivery\": true,\r\n    \"freeProducts\": []\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    category?:any; \r\n    setTagDetailData?:any; \r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible,category, setTagDetailData }: Props) => {\r\n\r\n    const [addCouponState, handleAddCouponStateFetch] = useHandleFetch({}, 'updateCoupon');\r\n    const [couponDetailState, handleCouponDetailFetch] = useHandleFetch({}, 'couponDetail');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n    const [freeProductIds, setFreeProductIds] = useState([]);\r\n    const [freeProductList, setFreeProductList] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleCouponDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: category.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [category]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (couponDetailState.data && Object.keys(couponDetailState.data).length > 0) {\r\n\r\n            const images = couponDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (couponDetailState.data.cover && couponDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([couponDetailState.data.cover]);\r\n                setCoverImageId(couponDetailState.data.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [couponDetailState.data]); \r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        // @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n        }) : [];\r\n        \r\n        const orderedProducts = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        // const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\r\n        //     return {\r\n        //         _id: product._id,\r\n        //         variation: product.variation,\r\n        //         quantity: product.quantity,\r\n        //     }\r\n        // }) : [];\r\n\r\n\r\n        \r\n\r\n        const addTagRes = await handleAddCouponStateFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                code: values.code,\r\n                minimumOrder: values.minimumOrder,\r\n                amount: values.amount,\r\n                amountType: values.amountType,\r\n                // freeDelivery: false,\r\n                orderedProducts: orderedProducts,\r\n                // freeProducts: freeProducts,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setAddNewCategoryVisible(false);\r\n            \r\n            setTagDetailData({\r\n\t\t\t\t...category,\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addTagRes\r\n            })\r\n            \r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (category && Object.keys(category).length > 0) {\r\n\r\n            const images = category.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (category.cover && category.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([category.cover]);\r\n                setCoverImageId(category.cover['id']);\r\n            }\r\n        }\r\n    }, [category]); \r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addCouponState['isLoading']) {\r\n            const error = addCouponState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addCouponState])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(\r\n            couponDetailState.done && couponDetailState['data'] \r\n        && Object.keys(couponDetailState['data']).length > 0\r\n         && ['orderedProducts'] && couponDetailState['data']['orderedProducts'].length > 0){\r\n            const productIds = couponDetailState['data']['orderedProducts'].map(item => item); \r\n            setProductIds(productIds); \r\n            const productList = couponDetailState['data']['orderedProducts'].map(item => {\r\n                return {\r\n                    ...item,\r\n                    _id: item._id,\r\n                    variation: item.variation,\r\n                    quantity: item.quantity,\r\n                }\r\n            }); \r\n           setProductList(productList);\r\n\r\n        }; \r\n        \r\n    },[couponDetailState])\r\n\r\n    console.log('couponDetialQuickEdit',couponDetailState);\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (freeProductIds.length > 0) {\r\n            if (freeProductIds.length > freeProductList.length) {\r\n                const variation = freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 && freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setFreeProductList([...freeProductList, {\r\n                    ...freeProductIds[freeProductIds.length - 1],\r\n                    _id: freeProductIds[freeProductIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (freeProductIds.length < freeProductList.length) {\r\n                console.log('freeProductIds', freeProductIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = freeProductList.filter(item => {\r\n                    let isTrue = false;\r\n                    freeProductIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setFreeProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setFreeProductList([]);\r\n        }\r\n        // console.log('freeProductIds', freeProductIds)\r\n\r\n\r\n    }, [freeProductIds])\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            width={'45vw'}\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Edit Coupon\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Code'\r\n                                        value={values.code}\r\n                                        name='code'\r\n                                        isError={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n\r\n                                        errorString={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('code');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <Input\r\n                                label='Minimum Order'\r\n                                value={values.minimumOrder}\r\n                                name='minimumOrder'\r\n                                isError={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n\r\n                                errorString={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('minimumOrder');\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Discount Amount'\r\n                                        value={values.amount}\r\n                                        name='amount'\r\n                                        isError={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n\r\n                                        errorString={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amount');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Discount Amount Type'\r\n                                        value={values.amountType}\r\n                                        name='amountType'\r\n                                        isError={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n\r\n                                        errorString={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amountType');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                  \r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n                                    Cover\r\n                                </h3>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n       \r\n\r\n\r\n                                { \r\n\t\t\t\t\t\t\t\t\t!myImages || \r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t(myImages && !(myImages && myImages.length > 0)) ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : \"\"}\r\n                               \r\n                                \r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n              \r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setProductIds}\r\n                                productIds={productIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={productList}\r\n                                setProductList={setProductList}\r\n                            />\r\n\r\n\r\n                            {/* <h3 className='inputFieldLabel'>\r\n                                Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setFreeProductIds}\r\n                                productIds={freeProductIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={freeProductList}\r\n                                setProductList={setFreeProductList}\r\n                            /> */}\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={false}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CouponEdit from \"./CouponEdit\";\r\nimport CouponProducts from \"./CouponProducts\";\r\nimport  moment from 'moment'\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'couponDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const res = await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if(res){\r\n                // @ts-ignore\r\n                setTagDetailData(res)\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('coupondetail', tagDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Coupon Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <CouponEdit\r\n                            addNewCategoryVisible={tagEditVisible}\r\n                            setAddNewCategoryVisible={setTagEditVisible}\r\n                            category={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n                        <div className='brandDetailContainer__header-coverContainer'>\r\n                            <img src={tagDetailData['cover'] && tagDetailData['cover']['cover']} alt=\"\" />\r\n                        </div>\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {tagDetailData['code']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                          \r\n\r\n                            {tagDetailData['amount'] && (\r\n                                <h3>\r\n                                    AMOUT:\r\n                                    <span>\r\n                                        {tagDetailData['amount']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailData['startDate'] && (\r\n                                <h3>\r\n                                    START DATE:\r\n                                    <span>\r\n                                    {moment(tagDetailData['startDate']).format('MMMM Do YYYY, h:mm:ss a')}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n\r\n                            {tagDetailData['endDate'] && (\r\n                                <h3>\r\n                                    END DATE:\r\n                                    <span>\r\n                                    {moment(tagDetailData['endDate']).format('MMMM Do YYYY, h:mm:ss a')}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Ordered Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailData && tagDetailData['orderedProducts'] && !(tagDetailData['orderedProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && Object.keys(tagDetailData).length > 0 && (\r\n                    <>\r\n                        {tagDetailData['orderedProducts'] && tagDetailData['orderedProducts'].length > 0 &&\r\n                            tagDetailData['orderedProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n            </div>\r\n\r\n            {/* {tagDetailState.done && tagDetailData && Object.keys(tagDetailData).length > 0 && tagDetailData['freeProducts'] && (\r\n                <div className='brandDetailContainer__heading'>\r\n                    <h3>\r\n                        Free Products\r\n                       </h3>\r\n                </div>\r\n            )\r\n            }\r\n\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailData && tagDetailData['freeProducts'] && !(tagDetailData['freeProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && Object.keys(tagDetailData).length > 0 && (\r\n                    <>\r\n                        {tagDetailData['freeProducts'] && tagDetailData['freeProducts'].length > 0 &&\r\n                            tagDetailData['freeProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts\r\n                                        quantity={product.quantity}\r\n                                        productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { notification, Modal,Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport OrderedProductsSelectProducts from \"./OrderedProductsSelectProducts\";\r\nimport OrderedProductsSelectedProductItems from \"./OrderedProductsSelectedProductItems\";\r\nimport FreeSelectProducts from \"./FreeSelectProducts\";\r\nimport FreeSelectedProductItems from \"./FreeSelectedProductItems\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"name\": \"\",\r\n    \"code\": \"\",\r\n    \"minimumOrder\": null,\r\n    \"amount\": \"\",\r\n    \"amountType\": \"\",\r\n    \"orderedProducts\": [],\r\n    \"freeDelivery\": true,\r\n    \"freeProducts\": []\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n    category?:any; \r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList, category }: Props) => {\r\n\r\n    const [addCouponState, handleAddCouponStateFetch] = useHandleFetch({}, 'updateCoupon');\r\n    const [couponDetailState, handleCouponDetailFetch] = useHandleFetch({}, 'couponDetail');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n    const [freeProductIds, setFreeProductIds] = useState([]);\r\n    const [freeProductList, setFreeProductList] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleCouponDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: category.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [category]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (couponDetailState.data && Object.keys(couponDetailState.data).length > 0) {\r\n\r\n            const images = couponDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (couponDetailState.data.cover && couponDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([couponDetailState.data.cover]);\r\n                setCoverImageId(couponDetailState.data.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [couponDetailState.data]); \r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        // @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n        }) : [];\r\n        \r\n        const orderedProducts = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        // const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\r\n        //     return {\r\n        //         _id: product._id,\r\n        //         variation: product.variation,\r\n        //         quantity: product.quantity,\r\n        //     }\r\n        // }) : [];\r\n\r\n\r\n        \r\n\r\n        const addTagRes = await handleAddCouponStateFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                code: values.code,\r\n                minimumOrder: values.minimumOrder,\r\n                amount: values.amount,\r\n                amountType: values.amountType,\r\n                // freeDelivery: false,\r\n                orderedProducts: orderedProducts,\r\n                // freeProducts: freeProducts,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setAddNewCategoryVisible(false);\r\n\r\n            const positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (category && Object.keys(category).length > 0) {\r\n\r\n            const images = category.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (category.cover && category.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([category.cover]);\r\n                setCoverImageId(category.cover['id']);\r\n            }\r\n        }\r\n    }, [category]); \r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addCouponState['isLoading']) {\r\n            const error = addCouponState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addCouponState])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(\r\n            couponDetailState.done && couponDetailState['data'] \r\n        && Object.keys(couponDetailState['data']).length > 0\r\n         && ['orderedProducts'] && couponDetailState['data']['orderedProducts'].length > 0){\r\n            const productIds = couponDetailState['data']['orderedProducts'].map(item => item); \r\n            setProductIds(productIds); \r\n            const productList = couponDetailState['data']['orderedProducts'].map(item => {\r\n                return {\r\n                    ...item,\r\n                    _id: item._id,\r\n                    variation: item.variation,\r\n                    quantity: item.quantity,\r\n                }\r\n            }); \r\n           setProductList(productList);\r\n\r\n        }; \r\n        \r\n    },[couponDetailState])\r\n\r\n    console.log('couponDetialQuickEdit',couponDetailState);\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (freeProductIds.length > 0) {\r\n            if (freeProductIds.length > freeProductList.length) {\r\n                const variation = freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 && freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setFreeProductList([...freeProductList, {\r\n                    ...freeProductIds[freeProductIds.length - 1],\r\n                    _id: freeProductIds[freeProductIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (freeProductIds.length < freeProductList.length) {\r\n                console.log('freeProductIds', freeProductIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = freeProductList.filter(item => {\r\n                    let isTrue = false;\r\n                    freeProductIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setFreeProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setFreeProductList([]);\r\n        }\r\n        // console.log('freeProductIds', freeProductIds)\r\n\r\n\r\n    }, [freeProductIds])\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            width={'45vw'}\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Edit Coupon\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Code'\r\n                                        value={values.code}\r\n                                        name='code'\r\n                                        isError={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n\r\n                                        errorString={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('code');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <Input\r\n                                label='Minimum Order'\r\n                                value={values.minimumOrder}\r\n                                name='minimumOrder'\r\n                                isError={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n\r\n                                errorString={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('minimumOrder');\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Discount Amount'\r\n                                        value={values.amount}\r\n                                        name='amount'\r\n                                        isError={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n\r\n                                        errorString={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amount');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Discount Amount Type'\r\n                                        value={values.amountType}\r\n                                        name='amountType'\r\n                                        isError={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n\r\n                                        errorString={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amountType');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                  \r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n                                    Cover\r\n                                </h3>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n       \r\n\r\n\r\n                                { \r\n\t\t\t\t\t\t\t\t\t!myImages || \r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t(myImages && !(myImages && myImages.length > 0)) ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : \"\"}\r\n                               \r\n                                \r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n              \r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setProductIds}\r\n                                productIds={productIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={productList}\r\n                                setProductList={setProductList}\r\n                            />\r\n\r\n\r\n                            {/* <h3 className='inputFieldLabel'>\r\n                                Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setFreeProductIds}\r\n                                productIds={freeProductIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={freeProductList}\r\n                                setProductList={setFreeProductList}\r\n                            /> */}\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={false}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { notification, Modal,Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport OrderedProductsSelectProducts from \"./OrderedProductsSelectProducts\";\r\nimport OrderedProductsSelectedProductItems from \"./OrderedProductsSelectedProductItems\";\r\nimport FreeSelectProducts from \"./FreeSelectProducts\";\r\nimport FreeSelectedProductItems from \"./FreeSelectedProductItems\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"name\": \"\",\r\n    \"code\": \"\",\r\n    \"minimumOrder\": null,\r\n    \"amount\": \"\",\r\n    \"amountType\": \"\",\r\n    \"orderedProducts\": [],\r\n    \"freeDelivery\": true,\r\n    \"freeProducts\": []\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addCouponState, handleAddCouponStateFetch] = useHandleFetch({}, 'addCoupon');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n    const [freeProductIds, setFreeProductIds] = useState([]);\r\n    const [freeProductList, setFreeProductList] = useState([]);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        // @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n        }) : [];\r\n        \r\n        const orderedProducts = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        // const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\r\n        //     return {\r\n        //         _id: product._id,\r\n        //         variation: product.variation,\r\n        //         quantity: product.quantity,\r\n        //     }\r\n        // }) : [];\r\n\r\n\r\n        const addTagRes = await handleAddCouponStateFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                code: values.code,\r\n                minimumOrder: values.minimumOrder,\r\n                amount: values.amount,\r\n                amountType: values.amountType,\r\n                // freeDelivery: false,\r\n                orderedProducts: orderedProducts,\r\n                // freeProducts: freeProducts,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setAddNewCategoryVisible(false);\r\n\r\n            setTagList([{\r\n                // @ts-ignore\r\n                ...addTagRes,\r\n                id: addTagRes['_id'] || '',\r\n                key: addTagRes['_id'] || '',\r\n                name: addTagRes['name'] || '',\r\n            },...tagList])\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addCouponState['isLoading']) {\r\n            const error = addCouponState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addCouponState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (freeProductIds.length > 0) {\r\n            if (freeProductIds.length > freeProductList.length) {\r\n                const variation = freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 && freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setFreeProductList([...freeProductList, {\r\n                    ...freeProductIds[freeProductIds.length - 1],\r\n                    _id: freeProductIds[freeProductIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (freeProductIds.length < freeProductList.length) {\r\n                console.log('freeProductIds', freeProductIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = freeProductList.filter(item => {\r\n                    let isTrue = false;\r\n                    freeProductIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setFreeProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setFreeProductList([]);\r\n        }\r\n        // console.log('freeProductIds', freeProductIds)\r\n\r\n\r\n    }, [freeProductIds])\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            width={'45vw'}\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Coupon\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Code'\r\n                                        value={values.code}\r\n                                        name='code'\r\n                                        isError={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n\r\n                                        errorString={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('code');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <Input\r\n                                label='Minimum Order'\r\n                                value={values.minimumOrder}\r\n                                name='minimumOrder'\r\n                                isError={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n\r\n                                errorString={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('minimumOrder');\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Discount Amount'\r\n                                        value={values.amount}\r\n                                        name='amount'\r\n                                        isError={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n\r\n                                        errorString={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amount');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Discount Amount Type'\r\n                                        value={values.amountType}\r\n                                        name='amountType'\r\n                                        isError={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n\r\n                                        errorString={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amountType');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                  \r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n                                    Cover\r\n                                </h3>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n       \r\n\r\n\r\n                                { \r\n\t\t\t\t\t\t\t\t\t!myImages || \r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t(myImages && !(myImages && myImages.length > 0)) ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : \"\"}\r\n                               \r\n                                \r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n              \r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setProductIds}\r\n                                productIds={productIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={productList}\r\n                                setProductList={setProductList}\r\n                            />\r\n\r\n\r\n                            {/* <h3 className='inputFieldLabel'>\r\n                                Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setFreeProductIds}\r\n                                productIds={freeProductIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={freeProductList}\r\n                                setProductList={setFreeProductList}\r\n                            /> */}\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={false}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment'\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CouponQuickEdit from \"./CouponQuickEdit\"\r\nimport AddNewCoupon from \"./AddNewCoupon\"\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteCoupon');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Coupon');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n    }\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n\r\n                    <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n                    className='classnameofthecolumn'\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                        <img\r\n                            onClick={() => {\r\n                            history.push(`/admin/coupon/${record.id}`)\r\n                            setactiveCategoryForEdit(record)\r\n                            }}\r\n                            src={cover} alt='cover img' style={{\r\n                            height: '40px',\r\n                            width: '40px',\r\n                            objectFit: \"contain\",\r\n                            borderRadius: '3px',\r\n                            cursor: 'pointer'\r\n                            }} />\r\n                        </>\r\n                    )}\r\n              />\r\n\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/coupon/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Code\"\r\n                    dataIndex=\"code\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n                \r\n                <Column\r\n                    title=\"Discount\"\r\n                    dataIndex=\"amount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n\r\n                {/* <Column\r\n                    title=\"Order Products\"\r\n                    dataIndex=\"orderedProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                /> */}\r\n\r\n                <Column\r\n                    title=\"Order Products\"\r\n                    dataIndex=\"orderedProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                {/* <Column\r\n                    title=\"Free Products\"\r\n                    dataIndex=\"freeProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                /> */}\r\n\r\n                <Column\r\n                    width={150}\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer',\r\n                                    fontSize: '13px'\r\n                                }}>\r\n                                    \r\n                                    {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n\r\n\r\n                />\r\n\r\n                <Column\r\n                     width={150}\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                    {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n                               \r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Edit Coupon'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <CouponQuickEdit\r\n                tagList={data}\r\n                setTagList={setTagList}\r\n                setAddNewCategoryVisible={setvisible}\r\n                addNewCategoryVisible={visible}\r\n                category={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Couponlist = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'couponList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({\r\n                urlOptions:{\r\n                    params: {\r\n                      sortItem: 'added',\r\n                      sortOrderValue: '-1'\r\n                    }\r\n                    }\r\n            });\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n    console.log('couponList', tagState)\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Coupons\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search coupon..\"\r\n                            onChange={e => handleSearch(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewCoupon\r\n                tagList={tagList}\r\n                setTagList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Couponlist;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Customer Created!',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([{\r\n\t\t\t\tid: addCustomerRes['_id'] || '',\r\n\t\t\t\tkey: addCustomerRes['_id'] || '',\r\n\t\t\t\tname: addCustomerRes['firstName'] + ' ' + addCustomerRes['lastName'],\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t},...customerList])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('cityListState', cityListState)\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address 2'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // firstName: Yup.string()\r\n    //   .label('Firstname')\r\n    //   .required()\r\n    //   .min(2, 'First name must have at least 2 characters '),\r\n    // lastName: Yup.string()\r\n    //   .label('Lastname')\r\n    //   .required()\r\n    //   .min(2, 'Lastname must have at least 2 characters '),\r\n    // phone: Yup.string()\r\n    //   .required('Please tell us your mobile number.')\r\n    //   .max(13, 'Please enter a valid mobile number.'),\r\n    // password: Yup.string()\r\n    //   .label('Password')\r\n    //   .required()\r\n    //   .min(6, 'Password must have at least 6 characters'),\r\n    // address1: Yup.string()\r\n    //   .label('Address line 1')\r\n    //   .required()\r\n    //   .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    // email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Customer Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue || customer.country,\r\n            city: selectedCityValue || customer.city,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, customerList[index], { ...updateCustomerRes, \r\n\t\t\t\t\tname: updateCustomerRes.firstName + ' ' + updateCustomerRes.lastName,\r\n\t\t\t\t});\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t  setvisible(false)\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  \r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!updateCustomerState['isLoading']) {\r\n\t\t  const error = updateCustomerState['error'];\r\n\t\t  if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\tif (error['error']['registerError']) {\r\n\t\t\t  // setServerErrors(error['error']['registerError']);\r\n\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t  // setServerErrors(error['error']['checkoutError']);\r\n\t\t\t} else {\r\n\t\t\t  // setServerErrors(error['error']);\r\n\t\t\t}\r\n\t\r\n\t\t\tconst errors =\r\n\t\t\t  Object.values(error['error']).length > 0\r\n\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t: [];\r\n\t\t\terrors.forEach((err, i) => {\r\n\t\t\t  if (typeof err === 'string') {\r\n\t\t\t\topenErrorNotification(err);\r\n\t\t\t  } else if (typeof err === 'object') {\r\n\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t  const errs = Object.values(err);\r\n\t\t\t\t  errs.forEach((err) => {\r\n\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t  });\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t});\r\n\t\t  }\r\n\t\t}\r\n\t\r\n\t\tif (!updateCustomerState['isLoading'] && Object.keys(updateCustomerState.data).length > 0) {\r\n\t\t  if (updateCustomerState['data']['status'] === 'ok') {\r\n\t\t\t// openSuccessNotification('Order Created Successfully');\r\n\t\t\t// history.push({\r\n\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t//   state: checkoutState['data']\r\n\t\t\t// })\r\n\t\t\t// clearCart();\r\n\t\t\t// setIsModalShown(true);\r\n\t\t  }\r\n\t\t}\r\n\t  }, [updateCustomerState]);\r\n\t\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Customer Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\t// disabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address 2'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  Badge,\r\n  Menu,\r\n  Dropdown,\r\n  notification,\r\n  Space,\r\n  Select,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  Modal,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  EditFilled,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewCustomer from './AddNewCustomer';\r\nimport QuickEdit from './QuickEdit';\r\nimport Empty from '../../components/Empty';\r\nimport moment from 'moment';\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst { Option } = Select;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setCustomerList?: any;\r\n}\r\n\r\nconst MyTable = ({ data, setCustomerList }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'deleteCustomer'\r\n  );\r\n  const handleDeleteCustomer = async (id) => {\r\n    const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteCustomerRes && deleteCustomerRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Customer');\r\n      const newCustomerList = data.filter((item) => item.id !== id);\r\n      setCustomerList(newCustomerList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/customer/${record.id}`);\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Phone'\r\n          dataIndex='phone'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        {/* <Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n            /> */}\r\n\r\n        <Column\r\n          title='Dealer'\r\n          dataIndex='dealerName'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  // go to dealer detail\r\n                  // history.push(`/admin/dealer/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Order'\r\n          dataIndex='orderCount'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Total Price'\r\n          dataIndex='totalOrderPrice'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          width={150}\r\n          title='Created'\r\n          dataIndex='created'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm a')}</h5>\r\n            </Space>\r\n          )}\r\n        />\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <a href='##'>\r\n                <Tooltip placement='top' title='Edit Customer'>\r\n                  <span\r\n                    className='iconSize'\r\n                    onClick={() => {\r\n                      setvisible(true);\r\n                      setactiveCategoryForEdit(record);\r\n                    }}\r\n                  >\r\n                    <EditOutlined />\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteCustomer(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <QuickEdit\r\n          customerList={data}\r\n          setCustomerList={setCustomerList}\r\n          setvisible={setvisible}\r\n          visible={visible}\r\n          customer={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst CustomerList = ({ history }: Props) => {\r\n  const [customerList, setCustomerList] = useState([]);\r\n\r\n  const [customerState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'customerList'\r\n  );\r\n  const [orderStatusFilterValue, setorderStatusFilterValue] = useState('');\r\n\r\n  console.log('customerList', customerList);\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const getSorttingvalue = () => {\r\n        switch (orderStatusFilterValue) {\r\n          case 'newFirst':\r\n            return {\r\n              sortItem: 'added',\r\n              sortOrderValue: '-1',\r\n            };\r\n            break;\r\n          case 'orderCountHigh':\r\n            return {\r\n              sortItem: 'orderCount',\r\n              sortOrderValue: '-1',\r\n            };\r\n            break;\r\n          case 'orderCountLow':\r\n            return {\r\n              sortItem: 'orderCount',\r\n              sortOrderValue: '1',\r\n            };\r\n            break;\r\n\r\n          case 'totalPriceHigh':\r\n            return {\r\n              sortItem: 'totalPrice',\r\n              sortOrderValue: '-1',\r\n            };\r\n            break;\r\n\r\n          case 'totalPriceLow':\r\n            return {\r\n              sortItem: 'totalPrice',\r\n              sortOrderValue: '1',\r\n            };\r\n            break;\r\n\r\n          default:\r\n            return {\r\n              sortItem: 'added',\r\n              sortOrderValue: '-1',\r\n            };\r\n        }\r\n      };\r\n      const customers = await handleCustomerListFetch({\r\n        urlOptions: {\r\n          params: getSorttingvalue(),\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setCustomerList(customers);\r\n    };\r\n    setCustomers();\r\n  }, [orderStatusFilterValue]);\r\n\r\n  const handleSearch = (value) => {\r\n    if (customerState.data.length > 0) {\r\n      const newCustomerList = customerState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setCustomerList(newCustomerList);\r\n    }\r\n  };\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  // console.log('customerState',customerState)\r\n\r\n  const orderFilteringOption = [\r\n    {\r\n      name: 'New first',\r\n      value: 'newFirst',\r\n    },\r\n    {\r\n      name: 'Order count (high > low)',\r\n      value: 'orderCountHigh',\r\n    },\r\n    {\r\n      name: 'Order count (low < high)',\r\n      value: 'orderCountLow',\r\n    },\r\n    {\r\n      name: 'Total price (high > low)',\r\n      value: 'totalPriceHigh',\r\n    },\r\n    {\r\n      name: 'Total price (low < high)',\r\n      value: 'totalPriceLow',\r\n    },\r\n  ];\r\n\r\n  const onOrderStatusFilterChange = (value) => {\r\n    setorderStatusFilterValue(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Customers</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search customer..'\r\n              onSearch={(value) => handleSearch(value)}\r\n              // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Select\r\n              style={{\r\n                borderRadius: '15px',\r\n                color: '#3fa6f9',\r\n                marginRight: '15px',\r\n                width: '200px',\r\n              }}\r\n              placeholder='Select status'\r\n              optionFilterProp='children'\r\n              onChange={onOrderStatusFilterChange}\r\n              defaultValue={'newFirst'}\r\n              bordered={false}\r\n            >\r\n              {orderFilteringOption.map((option) => {\r\n                return <Option value={option.value}>{option.name}</Option>;\r\n              })}\r\n            </Select>\r\n\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => setAddNewCategoryVisible(true)}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {customerState.done && customerList.length > 0 && (\r\n            <MyTable setCustomerList={setCustomerList} data={customerList} />\r\n          )}\r\n          {customerState.isLoading && <DataTableSkeleton />}\r\n          {customerState.done && !(customerList.length > 0) && (\r\n            <Empty title='No Customer found' />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {customerState.done && (\r\n        <AddNewCustomer\r\n          setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined, EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .label('Firstname')\r\n        .required()\r\n        .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n        .label('Lastname')\r\n        .required()\r\n        .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n        .required('Please tell us your mobile number.')\r\n        .max(13, 'Please enter a valid mobile number.'),\r\n    address1: Yup.string()\r\n        .label('Address line 1')\r\n        .required()\r\n        .min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Customer Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    setCustomerDetailData:any; \r\n\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setCustomerDetailData }: Props) => {\r\n    const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateCustomerRes = await handleUpdateCustomerFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                phone: values.phone,\r\n                email: values.email,\r\n                password: values.password,\r\n                address1: values.address1,\r\n                address2: values.address2,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                country: selectedCountryValue || customer.country,\r\n                city: selectedCityValue || customer.city,\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updateCustomerRes && updateCustomerRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            setCustomerDetailData({\r\n                // @ts-ignore\r\n                ...updateCustomerRes, \r\n                name: updateCustomerRes.firstName + ' ' + updateCustomerRes.lastName,\r\n            })\r\n   \r\n            setvisible(false)\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.phone ||\r\n            !values.address1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Customer Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        defaultValue={customer && customer.city}\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='More specific address'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import \r\nimport Moment from \"react-moment\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CustomerEdit from \"./CustomerEdit\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [customerDetailState, handleCustomerDetailFetch] = useHandleFetch({}, 'customerDetail');\r\n    const [orderListState, handleOrderListFetch] = useHandleFetch({}, 'orderListForCustomer');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [customerDetailData,setCustomerDetailData] = useState({}); \r\n\r\n\r\n\r\n    console.log('customerDetailData',customerDetailData); \r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const customerId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getCustomerDetail = async () => {\r\n            const customerDetailDataRes = await handleCustomerDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if(customerDetailDataRes){\r\n                // @ts-ignore\r\n                setCustomerDetailData(customerDetailDataRes); \r\n            }\r\n\r\n            console.log('customerDetailDataRes',customerDetailDataRes)\r\n        };\r\n\r\n        getCustomerDetail();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getOrderList = async () => {\r\n            await handleOrderListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        customerId: customerId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderList();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n\r\n    console.log('customerDetailData', customerDetailData);\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Customer Detail\r\n                </h3>\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <>\r\n                        <CustomerEdit\r\n                            visible={tagEditVisible}\r\n                            setvisible={setTagEditVisible}\r\n                            customer={customerDetailData}\r\n                            setCustomerDetailData={setCustomerDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={customerDetailState.isLoading}>\r\n                {customerDetailState.done && customerDetailData && !(Object.keys(customerDetailData).length > 0) && (\r\n                    <Empty description='No Customer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {customerDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {customerDetailData['description']}\r\n                            </h3>\r\n\r\n                            {customerDetailData['country'] && (\r\n                                <h3>\r\n                                    COUNTRY:\r\n                                    <span>\r\n                                        {customerDetailData['country']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {customerDetailData['city'] && (\r\n                                <h3>\r\n                                    CITY:\r\n                                    <span>\r\n                                        {customerDetailData['city']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                        \r\n\r\n\r\n                            {customerDetailData['address1'] && (\r\n                                <h3>\r\n                                    ADDRESS:\r\n                                    <span>\r\n                                        {customerDetailData['address1']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                         \r\n\r\n                            {customerDetailData['phone'] && (\r\n                                <h3>\r\n                                    PHONE:\r\n                                    <span>\r\n                                        {customerDetailData['phone']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                             {customerDetailData['email'] && (\r\n                                <h3>\r\n                                    EMAIL:\r\n                                    <span>\r\n                                        {customerDetailData['email']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Orders \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {orderListState.isLoading && <DataTableSkeleton />}\r\n                {orderListState.done && !(orderListState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orders exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {orderListState.done && orderListState.data && orderListState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={orderListState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                          \r\n          \r\n          \r\n\r\n        <Column\r\n          title=\"Code\"\r\n          dataIndex=\"shortCode\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                #{text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n    <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n\r\n                \r\n\r\n        <Column\r\n           title=\"Delivery\" \r\n           dataIndex=\"deliveryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          <Column\r\n           title=\"Created\" \r\n           dataIndex=\"date_created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n               \r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n\r\n                }}>\r\n                  {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n              <Column\r\n                title=\"Total Price\" \r\n                dataIndex=\"total\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                />\r\n\r\n\r\n\r\n\r\n          <Column\r\n            width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n             <a href='##'>\r\n              <span\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n                {text}\r\n             </span> \r\n            </a>\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  Empty,\r\n  Popconfirm,\r\n  Space,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  notification,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n/// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Page Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setBrandList: any;\r\n  roles: any;\r\n}\r\n\r\nconst MyTable = ({ data, setBrandList, roles }: myTableProps) => {\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deletePageState, handleDeletePageFetch] = useHandleFetch(\r\n    {},\r\n    'deletePage'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeletePage = async (id) => {\r\n    const deletePageRes = await handleDeletePageFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deletePageRes && deletePageRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Page');\r\n      const newBrandList = data.filter((item) => item.id !== id);\r\n      setBrandList(newBrandList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title=''\r\n          dataIndex='cover'\r\n          key='id'\r\n          width={'100px'}\r\n          className='classnameofthecolumn'\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  history.push(`/admin/page/${record.id}`);\r\n                  // history.push(`/admin/page/${record.id}`);\r\n                }}\r\n                src={cover}\r\n                alt='cover img'\r\n                style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: 'contain',\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer',\r\n                }}\r\n              />\r\n            </>\r\n          )}\r\n        />\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  // setactiveCategoryForEdit(record);\r\n                  history.push(`/admin/page/${record.id}`);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Last Modified'\r\n          dataIndex='lastModified'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                }}\r\n              >\r\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Created'\r\n          dataIndex='added'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                }}\r\n              >\r\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n\r\n        {isAccess('postPage', roles) && (\r\n          <Column\r\n            className='classnameofthecolumn'\r\n            title=''\r\n            key='action'\r\n            align='right'\r\n            render={(text, record: any) => (\r\n              <Space size='middle'>\r\n                <a href='##'>\r\n                  <Tooltip placement='top' title='Edit Page'>\r\n                    <span\r\n                      className='iconSize'\r\n                      onClick={() => {\r\n                        history.push(`/admin/page/edit/${record.id}`);\r\n                        setactiveCategoryForEdit(record);\r\n                      }}\r\n                    >\r\n                      <EditOutlined />\r\n                    </span>\r\n                  </Tooltip>\r\n                </a>\r\n\r\n                <Popconfirm\r\n                  onConfirm={() => handleDeletePage(record.id)}\r\n                  title='Are you sure？'\r\n                  okText='Yes'\r\n                  cancelText='No'\r\n                >\r\n                  <span className='iconSize iconSize-danger'>\r\n                    <DeleteOutlined />\r\n                  </span>\r\n                </Popconfirm>\r\n              </Space>\r\n            )}\r\n          />\r\n        )}\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  roles: any;\r\n}\r\n\r\nconst PageList = ({ roles }: Props) => {\r\n  const [pageList, setPageList] = useState([]);\r\n  const [pageState, handlePagsListFetch] = useHandleFetch({}, 'pageList');\r\n\r\n  console.log('myPageList', pageList);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const setPages = async () => {\r\n      const pages = await handlePagsListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setPageList(pages);\r\n    };\r\n    setPages();\r\n  }, []);\r\n\r\n  const handleSearch = (value) => {\r\n    if (pageState.data.length > 0) {\r\n      const newBrandList = pageState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setPageList(newBrandList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Pages</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search pages..'\r\n              onSearch={(value) => handleSearch(value)}\r\n            />\r\n          </div>\r\n\r\n          {isAccess('postPage', roles) && (\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => history.push('/admin/page/new')}\r\n            >\r\n              Add New\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {pageState.done && pageList.length > 0 && (\r\n            <MyTable roles={roles} setBrandList={setPageList} data={pageList} />\r\n          )}\r\n          {pageState.isLoading && <DataTableSkeleton />}\r\n          {pageState.done && !(pageList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '200px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Page found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(PageList);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n// import lib\r\n// import lib\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\n// import TagEdit from \"./TagEdit\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  roles?: any;\r\n}\r\n\r\nconst NewBrandDetail = ({ roles }: Props) => {\r\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\r\n    {},\r\n    'tagProducts'\r\n  );\r\n  const [tagEditVisible, setTagEditVisible] = useState(false);\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'pageDetail'\r\n  );\r\n  const [tagDetailData, setTagDetailData] = useState({});\r\n\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const tagId = params['id'];\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const tagDetailRes = await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (tagDetailRes) {\r\n        console.log('tagDetailRes', tagDetailRes);\r\n        // @ts-ignore\r\n        setTagDetailData(tagDetailRes);\r\n      }\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  useEffect(() => {\r\n    const getTagProducts = async () => {\r\n      await handleTagProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getTagProducts();\r\n  }, [tagId]);\r\n\r\n  console.log('tagProductsState', tagProductsState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Page Detail</h3>\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <>\r\n              {/* <TagEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        /> */}\r\n\r\n              {isAccess('postPage', roles) && (\r\n                <Button\r\n                  onClick={() => {\r\n                    history.push(`/admin/page/edit/${tagDetailData['_id']}`);\r\n                  }}\r\n                  type='link'\r\n                  icon={<EditOutlined />}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              )}\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          !(Object.keys(tagDetailData).length > 0) && (\r\n            <Empty\r\n              description='No Page found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <>\r\n              <div className='brandDetailContainer__header'>\r\n                <div className='brandDetailContainer__header-coverContainer'>\r\n                  <img\r\n                    src={\r\n                      tagDetailData['cover'] && tagDetailData['cover']['cover']\r\n                    }\r\n                    alt=''\r\n                  />\r\n                </div>\r\n                <div className='brandDetailContainer__header-info'>\r\n                  <h2>{tagDetailData['name']}</h2>\r\n                  {tagDetailData['url'] && (\r\n                    <h3>\r\n                      URL:\r\n                      <span>{tagDetailData['url']}</span>\r\n                    </h3>\r\n                  )}\r\n\r\n                  {tagDetailData['lastModified'] && (\r\n                    <h3>\r\n                      LAST MODIFIED:\r\n                      <span>\r\n                        {tagDetailData['lastModified'] &&\r\n                          moment(tagDetailData['lastModified']).format(\r\n                            'MMMM Do YYYY, h:mm a'\r\n                          )}\r\n                      </span>\r\n                    </h3>\r\n                  )}\r\n\r\n                  {tagDetailData['added'] && (\r\n                    <h3>\r\n                      CREATED:\r\n                      <span>\r\n                        {tagDetailData['added'] &&\r\n                          moment(tagDetailData['added']).format(\r\n                            'MMMM Do YYYY, h:mm a'\r\n                          )}\r\n                      </span>\r\n                    </h3>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className='brandDetailContainer__heading'>\r\n                <h3>Content</h3>\r\n              </div>\r\n\r\n              <div\r\n                className='brandDetailContainer__header'\r\n                style={{\r\n                  display: 'block',\r\n                }}\r\n              >\r\n                {ReactHtmlParser(tagDetailData['content'])}\r\n              </div>\r\n            </>\r\n          )}\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(NewBrandDetail);\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import hhooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n  Steps,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  CheckCircleOutlined,\r\n  CaretRightOutlined,\r\n  CaretLeftOutlined,\r\n  CaretRightFilled,\r\n  UserOutlined,\r\n  InfoCircleOutlined,\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from '../../pages/category/MetaTags';\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Page Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  content: '',\r\n  bnContent: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  url: '',\r\n};\r\n\r\nconst steps = [\r\n  {\r\n    title: 'Order Information',\r\n    content: '',\r\n    // description: 'Add Customer & Products'\r\n  },\r\n  {\r\n    title: 'Billing Address',\r\n  },\r\n  {\r\n    title: 'Confirm Order',\r\n    content: '',\r\n  },\r\n];\r\n\r\ninterface Props {}\r\n\r\nconst AddNewPage = ({}: Props) => {\r\n  const [addPageState, handleAddPageFetch] = useHandleFetch({}, 'addPage');\r\n  const [content, setContent] = useState('<p>Hello from the new page !</p>');\r\n  const [bnContent, setBnContent] = useState('<p>হ্যালো নতুন পেজ থেকে!</p>');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  const handleAddPageSubmit = async (values: any, actions: any) => {\r\n    const addOrderRes = await handleAddPageFetch({\r\n      body: {\r\n        name: values.name,\r\n        content: content,\r\n        url: values.name,\r\n        cover: myImages ? myImages[0] && myImages[0].id : '',\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: tags.join(','),\r\n\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnTags.join(','),\r\n          name: values.bnName.trim(),\r\n          content: bnContent,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addOrderRes && addOrderRes.status === 'ok') {\r\n      // openSuccessNotification();\r\n      setCoverImageId('');\r\n      setBnTags([]);\r\n      setTags([]);\r\n      setContent('');\r\n      setBnContent('');\r\n      setvisibleMedia();\r\n      setmyImages([]);\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification(\"Couldn't create page, Something went wrong\");\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addPageState['isLoading']) {\r\n      const error = addPageState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addPageState['isLoading'] &&\r\n      Object.keys(addPageState.data).length > 0\r\n    ) {\r\n      if (addPageState['data']['status'] === 'ok') {\r\n        openSuccessNotification('Page Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addPageState]);\r\n\r\n  console.log('myImagesdx', myImages);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleAddPageSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <div className='addNewPageContainer'>\r\n            <h3 className='addNewPageContainer__heading'>Add New Page</h3>\r\n\r\n            <div className='addNewPageContainer__header'>\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='Title'\r\n                    value={values.name}\r\n                    name='name'\r\n                    placeHolder='About us,Contact us'\r\n                    isError={\r\n                      (touched.name && errors.name) ||\r\n                      (!isSubmitting && addPageState.error['error']['name'])\r\n                    }\r\n                    errorString={\r\n                      (touched.name && errors.name) ||\r\n                      (!isSubmitting && addPageState.error['error']['name'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('name');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='BN Title'\r\n                    value={values.bnName}\r\n                    placeHolder={'ব্লগ...'}\r\n                    name='bnName'\r\n                    isError={\r\n                      (touched.bnName && errors.bnName) ||\r\n                      (!isSubmitting && addPageState.error['error']['bnName'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnName && errors.bnName) ||\r\n                      (!isSubmitting && addPageState.error['error']['bnName'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnName');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <Input\r\n                label='URL'\r\n                value={values.url}\r\n                name='url'\r\n                isError={\r\n                  (touched.url && errors.url) ||\r\n                  (!isSubmitting && addPageState.error['error']['url'])\r\n                }\r\n                errorString={\r\n                  (touched.url && errors.url) ||\r\n                  (!isSubmitting && addPageState.error['error']['url'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('url');\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n\r\n              <div className='aboutToUploadImagesContainer'>\r\n                {myImages &&\r\n                  // @ts-ignore\r\n                  myImages.length > 0 &&\r\n                  myImages.map((image, index) => {\r\n                    return (\r\n                      <div className='aboutToUploadImagesContainer__item'>\r\n                        <div\r\n                          className='aboutToUploadImagesContainer__item-imgContainer'\r\n                          onClick={() => setCoverImageId(image.id)}\r\n                        >\r\n                          <img src={image.cover} alt={image.alt} />\r\n                        </div>\r\n\r\n                        <span\r\n                          onClick={() => handleImagesDelete(image.id)}\r\n                          className='aboutToUploadImagesContainer__item-remove'\r\n                        >\r\n                          <CloseOutlined />\r\n                        </span>\r\n                      </div>\r\n                    );\r\n                  })}\r\n\r\n                {myImages ? (\r\n                  !myImages[0] && (\r\n                    <Tooltip title={'Attach images'}>\r\n                      <div\r\n                        onClick={() => {\r\n                          setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'\r\n                      >\r\n                        {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                        <FileImageFilled />\r\n                        {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                          <PlusOutlined />\r\n                        </span>\r\n                      </div>\r\n                    </Tooltip>\r\n                  )\r\n                ) : (\r\n                  <Tooltip title={'Attach images'}>\r\n                    <div\r\n                      onClick={() => {\r\n                        setvisibleMedia(true);\r\n                      }}\r\n                      className='aboutToUploadImagesContainer__uploadItem'\r\n                    >\r\n                      {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                      <FileImageFilled />\r\n                      {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                      <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                        <PlusOutlined />\r\n                      </span>\r\n                    </div>\r\n                  </Tooltip>\r\n                )}\r\n              </div>\r\n\r\n              <p\r\n                style={{\r\n                  color: '#ff4d4f',\r\n                  marginTop: '-15px',\r\n                }}\r\n              >\r\n                {addPageState.error['error']['cover']}\r\n              </p>\r\n            </div>\r\n            <div className='addNewPageContainer__body'>\r\n              <h3 className='inputFieldLabel'>Content</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={content}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setContent(data);\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  marginTop: '15px',\r\n                }}\r\n              ></div>\r\n\r\n              <h3 className='inputFieldLabel'>BN Content</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={bnContent}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setBnContent(data);\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            ></div>\r\n\r\n            <div className='addNewPageContainer__header'>\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='Meta Title'\r\n                    value={values.metaTitle}\r\n                    name='metaTitle'\r\n                    isError={\r\n                      (touched.metaTitle && errors.metaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaTitle'])\r\n                    }\r\n                    errorString={\r\n                      (touched.metaTitle && errors.metaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaTitle'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('metaTitle');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='BN Meta Title'\r\n                    value={values.bnMetaTitle}\r\n                    placeHolder={'নতুন,ফ্রেশ'}\r\n                    name='bnMetaTitle'\r\n                    isError={\r\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaTitle'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaTitle'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnMetaTitle');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <TextArea\r\n                    label='Meta description'\r\n                    value={values.metaDescription}\r\n                    placeholder={'meta...'}\r\n                    name='metaDescription'\r\n                    isError={\r\n                      (touched.metaDescription && errors.metaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaDescription'])\r\n                    }\r\n                    errorString={\r\n                      (touched.metaDescription && errors.metaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaDescription'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('metaDescription');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <TextArea\r\n                    label='BN Meta Description'\r\n                    value={values.bnMetaDescription}\r\n                    placeholder={'এইয় মেট...'}\r\n                    name='bnMetaDescription'\r\n                    isError={\r\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaDescription'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaDescription'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnMetaDescription');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <h3 className='inputFieldLabel'>\r\n                    Meta Tags (grocery,fashion)\r\n                  </h3>\r\n\r\n                  <MetaTags\r\n                    // @ts-ignore\r\n                    setTags={setTags}\r\n                    tags={tags}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <h3 className='inputFieldLabel'>\r\n                    BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                  </h3>\r\n\r\n                  <MetaTags\r\n                    // @ts-ignore\r\n                    setTags={setBnTags}\r\n                    tags={bnTags}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            ></div>\r\n\r\n            <Button\r\n              loading={addPageState.isLoading}\r\n              onClick={(e: any) => handleSubmit(e)}\r\n              className='btnPrimaryClassNameoutline'\r\n            >\r\n              Create page\r\n            </Button>\r\n          </div>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewPage;\r\n\r\n/*\r\n\r\n<div className=\"addNewPageContainer\">\r\n\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\tAdd New Order\r\n\t\t\t</h3>\r\n\t\t\t<div className='addNewPageContainer__header'>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className='addNewPageContainer__body'>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n*/\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import hhooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport { useParams } from 'react-router-dom';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n  Steps,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  CheckCircleOutlined,\r\n  CaretRightOutlined,\r\n  CaretLeftOutlined,\r\n  CaretRightFilled,\r\n  UserOutlined,\r\n  InfoCircleOutlined,\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from '../../pages/category/MetaTags';\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Page Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  content: '',\r\n  bnContent: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  url: '',\r\n};\r\n\r\nconst steps = [\r\n  {\r\n    title: 'Order Information',\r\n    content: '',\r\n    // description: 'Add Customer & Products'\r\n  },\r\n  {\r\n    title: 'Billing Address',\r\n  },\r\n  {\r\n    title: 'Confirm Order',\r\n    content: '',\r\n  },\r\n];\r\n\r\ninterface Props {}\r\n\r\nconst AddNewPage = ({}: Props) => {\r\n  const [addPageState, handleAddPageFetch] = useHandleFetch({}, 'updatePage');\r\n  const [content, setContent] = useState('');\r\n  const [bnContent, setBnContent] = useState('');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'pageDetail'\r\n  );\r\n  const [tagDetailData, setTagDetailData] = useState({});\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n\r\n  const params = useParams();\r\n  const tagId = params['id'];\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const tagDetailRes = await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (tagDetailRes) {\r\n        console.log('tagDetailRes', tagDetailRes);\r\n        // @ts-ignore\r\n        setTagDetailData(tagDetailRes);\r\n      }\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  useEffect(() => {\r\n    if (tagDetailData && Object.keys(tagDetailData).length > 0) {\r\n      if (tagDetailData.cover && tagDetailData.cover['id']) {\r\n        // @ts-ignore\r\n        setmyImages([tagDetailData.cover]);\r\n        setCoverImageId(tagDetailData.cover['id']);\r\n      }\r\n    }\r\n  }, [tagDetailData]);\r\n\r\n  useEffect(() => {\r\n    if (tagDetailData && Object.keys(tagDetailData).length > 0) {\r\n      setContent(tagDetailData['content'] || '');\r\n      setBnContent(\r\n        tagDetailData['bn'] && tagDetailData['bn']['content']\r\n          ? tagDetailData['bn']['content']\r\n          : ''\r\n      );\r\n    }\r\n  }, [tagDetailData]);\r\n\r\n  const handleAddPageSubmit = async (values: any, actions: any) => {\r\n    const addOrderRes = await handleAddPageFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: tagDetailData._id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name,\r\n        content: content,\r\n        url: values.name,\r\n        cover: myImages ? myImages[0] && myImages[0].id : '',\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\r\n          name: values.bnName.trim(),\r\n          content: bnContent,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addOrderRes && addOrderRes.status === 'ok') {\r\n      // openSuccessNotification();\r\n      // setCoverImageId('');\r\n      // setBnTags([]);\r\n      // setTags([]);\r\n      // setContent('');\r\n      // setBnContent('');\r\n      // setvisibleMedia();\r\n      // setmyImages([]);\r\n      // actions.resetForm();\r\n    } else {\r\n      openErrorNotification(\"Couldn't Update page, Something went wrong\");\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'page',\r\n          itemId: tagDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      openSuccessNotification('Set as thumbnail!');\r\n      // const positionInBrand = () => {\r\n      //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n\r\n      // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n      // if (prevItem) {\r\n      //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n      //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n      //     setBrandList(updateBrandList);\r\n      // }\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  useEffect(() => {\r\n    if (!addPageState['isLoading']) {\r\n      const error = addPageState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addPageState['isLoading'] &&\r\n      Object.keys(addPageState.data).length > 0\r\n    ) {\r\n      if (addPageState['data']['status'] === 'ok') {\r\n        openSuccessNotification('Page Updated Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addPageState]);\r\n\r\n  useEffect(() => {\r\n    if (tagDetailData && Object.keys(tagDetailData).length > 0) {\r\n      const metaTags =\r\n        tagDetailData.metaTags && tagDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        tagDetailData.bn &&\r\n        tagDetailData.bn['metaTags'] &&\r\n        tagDetailData.bn['metaTags'].split(',');\r\n      setTags(metaTags || []);\r\n      setBnTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    console.log('dure', id);\r\n    console.log('dure2', tagDetailData);\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'page',\r\n          itemId: tagDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleAddPageSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...tagDetailData,\r\n        ...(tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && {\r\n            bnMetaTitle:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].metaTitle &&\r\n              tagDetailData['bn'].metaTitle,\r\n            bnMetaDescription:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].metaDescription &&\r\n              tagDetailData['bn'].metaDescription,\r\n            bnName:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].name &&\r\n              tagDetailData['bn'].name,\r\n            bnDescription:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].description &&\r\n              tagDetailData['bn'].description,\r\n          }),\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <div className='addNewPageContainer'>\r\n            <h3 className='addNewPageContainer__heading'>Edit Page</h3>\r\n\r\n            <div className='addNewPageContainer__header'>\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='Title'\r\n                    value={values.name}\r\n                    name='name'\r\n                    placeHolder='About us,Contact us'\r\n                    isError={\r\n                      (touched.name && errors.name) ||\r\n                      (!isSubmitting && addPageState.error['error']['name'])\r\n                    }\r\n                    errorString={\r\n                      (touched.name && errors.name) ||\r\n                      (!isSubmitting && addPageState.error['error']['name'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('name');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='BN Title'\r\n                    value={values.bnName}\r\n                    placeHolder={'ব্লগ...'}\r\n                    name='bnName'\r\n                    isError={\r\n                      (touched.bnName && errors.bnName) ||\r\n                      (!isSubmitting && addPageState.error['error']['bnName'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnName && errors.bnName) ||\r\n                      (!isSubmitting && addPageState.error['error']['bnName'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnName');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <Input\r\n                label='URL'\r\n                value={values.url}\r\n                name='url'\r\n                isError={\r\n                  (touched.url && errors.url) ||\r\n                  (!isSubmitting && addPageState.error['error']['url'])\r\n                }\r\n                errorString={\r\n                  (touched.url && errors.url) ||\r\n                  (!isSubmitting && addPageState.error['error']['url'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('url');\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n\r\n              <div className='aboutToUploadImagesContainer'>\r\n                {tagDetailData && Object.keys(tagDetailData).length > 0 && (\r\n                  <>\r\n                    {myImages &&\r\n                      // @ts-ignore\r\n                      myImages.length > 0 &&\r\n                      myImages.map((image, index) => {\r\n                        return (\r\n                          <div className='aboutToUploadImagesContainer__item'>\r\n                            <div\r\n                              className='aboutToUploadImagesContainer__item-imgContainer'\r\n                              onClick={() => {\r\n                                setCoverImageId(image.id);\r\n                                // handleSetImageAsThumnail(image);\r\n                              }}\r\n                            >\r\n                              <img src={image.cover} alt={image.alt} />\r\n                            </div>\r\n\r\n                            <span\r\n                              onClick={() => {\r\n                                handleImagesDelete(image.id);\r\n                                handleDetachSingleImage(image.id);\r\n                              }}\r\n                              className='aboutToUploadImagesContainer__item-remove'\r\n                            >\r\n                              <CloseOutlined />\r\n                            </span>\r\n\r\n                            {coverImageId === image.id ? (\r\n                              <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                <CheckOutlined />\r\n                              </span>\r\n                            ) : (\r\n                              !coverImageId &&\r\n                              index === 0 && (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                  <CheckOutlined />\r\n                                </span>\r\n                              )\r\n                            )}\r\n                          </div>\r\n                        );\r\n                      })}\r\n\r\n                    {!myImages ||\r\n                    // @ts-ignore\r\n                    (myImages && !(myImages && myImages.length > 0)) ? (\r\n                      <>\r\n                        <Tooltip title={'Attach images'}>\r\n                          <div\r\n                            onClick={() => {\r\n                              setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem'\r\n                          >\r\n                            <FileImageFilled />\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                              <PlusOutlined />\r\n                            </span>\r\n                          </div>\r\n                        </Tooltip>\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              <p\r\n                style={{\r\n                  color: '#ff4d4f',\r\n                  marginTop: '-15px',\r\n                }}\r\n              >\r\n                {addPageState.error['error']['cover']}\r\n              </p>\r\n            </div>\r\n            <div className='addNewPageContainer__body'>\r\n              <h3 className='inputFieldLabel'>Content</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={content}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setContent(data);\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  marginTop: '15px',\r\n                }}\r\n              ></div>\r\n\r\n              <h3 className='inputFieldLabel'>BN Content</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={bnContent}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setBnContent(data);\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            ></div>\r\n\r\n            <div className='addNewPageContainer__header'>\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='Meta Title'\r\n                    value={values.metaTitle}\r\n                    name='metaTitle'\r\n                    isError={\r\n                      (touched.metaTitle && errors.metaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaTitle'])\r\n                    }\r\n                    errorString={\r\n                      (touched.metaTitle && errors.metaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaTitle'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('metaTitle');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='BN Meta Title'\r\n                    value={values.bnMetaTitle}\r\n                    placeHolder={'নতুন,ফ্রেশ'}\r\n                    name='bnMetaTitle'\r\n                    isError={\r\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaTitle'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaTitle'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnMetaTitle');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <TextArea\r\n                    label='Meta description'\r\n                    value={values.metaDescription}\r\n                    placeholder={'meta...'}\r\n                    name='metaDescription'\r\n                    isError={\r\n                      (touched.metaDescription && errors.metaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaDescription'])\r\n                    }\r\n                    errorString={\r\n                      (touched.metaDescription && errors.metaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaDescription'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('metaDescription');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <TextArea\r\n                    label='BN Meta Description'\r\n                    value={values.bnMetaDescription}\r\n                    placeholder={'এইয় মেট...'}\r\n                    name='bnMetaDescription'\r\n                    isError={\r\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaDescription'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaDescription'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnMetaDescription');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <h3 className='inputFieldLabel'>\r\n                    Meta Tags (grocery,fashion)\r\n                  </h3>\r\n\r\n                  <MetaTags\r\n                    // @ts-ignore\r\n                    setTags={setTags}\r\n                    tags={tags}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <h3 className='inputFieldLabel'>\r\n                    BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                  </h3>\r\n\r\n                  <MetaTags\r\n                    // @ts-ignore\r\n                    setTags={setBnTags}\r\n                    tags={bnTags}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            ></div>\r\n\r\n            <Button\r\n              loading={addPageState.isLoading}\r\n              onClick={(e: any) => handleSubmit(e)}\r\n              className='btnPrimaryClassNameoutline'\r\n            >\r\n              Update page\r\n            </Button>\r\n          </div>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewPage;\r\n\r\n/*\r\n\r\n<div className=\"addNewPageContainer\">\r\n\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\tAdd New Order\r\n\t\t\t</h3>\r\n\t\t\t<div className='addNewPageContainer__header'>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className='addNewPageContainer__body'>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n*/\r\n","import React,{useState} from 'react';\r\nimport { Modal  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\n\r\nimport React from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass EditableTagGroup extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTagGroup","import React, {useState} from 'react';\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\r\n\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddAttributeValues from \"./AddAttributeValues\"\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({data}) => {\r\n    const [visible,setvisible] = useState(false);   \r\n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\tconst handleDeleteCategory = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n      }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n              <Tooltip placement=\"top\" title='Delete Tag'>\r\n            \r\n\r\n             <span \r\n             className='iconSize iconSize-danger'\r\n             onClick={() => handleDeleteCategory(record.id)}\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n            \r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n     \r\n\r\n\t\t{activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\t// console.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst AttributeList = ({  }: Props) => {\r\n\tconst tagState = useFetch([], [], 'brandList', {\r\n\t\turlOptions: {\r\n\t\t  params: {\r\n\t\t\tisSubCategory: true,\r\n\t\t  },\r\n\t\t},\r\n\t  });\r\n\r\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t  urlOptions: {\r\n\t\t\t  placeHolders: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t  body: {\r\n\t\t\t  name: values.name,\r\n\t\t\t  description: values.description,\r\n\t\t  },\r\n\t\t});\r\n\t  \r\n\t\tactions.setSubmitting(false);\r\n\t  };\r\n\t  \r\n \r\n  \r\n  \r\n  \r\n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\t  if(!values.name || !values.description || !isValid){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  return false; \r\n\t\t}\r\n\r\n\r\n\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...initialValues}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\t\t\t   <div style={{\r\n\t\t\t\t   marginTop: '0px'\r\n\t\t\t   }}></div>\r\n\t\t\t  \r\n\r\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\r\n\t\t\t\t\r\n\t\t\t\t<AddAttributeValues />\r\n\t\t\t\t\t  <Button \r\n\t\t\t\t\t  style={{\r\n\t\t\t\t\t\t  display: 'block',\r\n\t\t\t\t\t\t  marginTop: '20px'\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\r\n\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n                <div className='addproductSection addproductSection-right'> \r\n\r\n\t\t\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n          {/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            {/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\r\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AttributeList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Empty, Spin } from 'antd';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport moment from 'moment';\r\n\r\nconst { Option } = Select;\r\n\r\nconst QuickEdit = ({ id, setShowInvoice, showInvoice }) => {\r\n  const [orderDetailState, handleOrderDetailFetch] = useHandleFetch(\r\n    {},\r\n    'orderDetail'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getOrderDetail = async () => {\r\n      await handleOrderDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getOrderDetail();\r\n  }, [id]);\r\n\r\n  console.log('orderDetailState', orderDetailState);\r\n\r\n  const handleOk = () => {\r\n    window.print();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Invoice'\r\n      visible={showInvoice}\r\n      bodyStyle={{\r\n        margin: '0',\r\n        padding: '10px',\r\n      }}\r\n      onCancel={() => setShowInvoice(false)}\r\n      width={'60vw'}\r\n      okText='Print'\r\n      onOk={() => handleOk()}\r\n    >\r\n      {orderDetailState.isLoading && <Spin />}\r\n      {orderDetailState.data && Object.keys(orderDetailState.data).length > 0 && (\r\n        <>\r\n          <div className='invoiceContainer'>\r\n            <table\r\n              width='100%'\r\n              border={0}\r\n              cellPadding={0}\r\n              cellSpacing={0}\r\n              align='center'\r\n              className='fullTable'\r\n              bgcolor='#e1e1e1'\r\n            >\r\n              <tbody>\r\n                <tr>\r\n                  <td height={20} />\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <table\r\n                      width={600}\r\n                      border={0}\r\n                      cellPadding={0}\r\n                      cellSpacing={0}\r\n                      align='center'\r\n                      className='fullTable'\r\n                      bgcolor='#ffffff'\r\n                      style={{ borderRadius: '10px 10px 0 0' }}\r\n                    >\r\n                      <tbody>\r\n                        <tr className='hiddenMobile'>\r\n                          <td height={40} />\r\n                        </tr>\r\n                        <tr className='visibleMobile'>\r\n                          <td height={30} />\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <table\r\n                              width={480}\r\n                              border={0}\r\n                              cellPadding={0}\r\n                              cellSpacing={0}\r\n                              align='center'\r\n                              className='fullPadding'\r\n                            >\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td>\r\n                                    <table\r\n                                      width={220}\r\n                                      border={0}\r\n                                      cellPadding={0}\r\n                                      cellSpacing={0}\r\n                                      align='left'\r\n                                      className='col'\r\n                                    >\r\n                                      <tbody>\r\n                                        {/* <tr>\r\n                                                                                    <td align=\"left\">\r\n                                                                                        {\" \"}\r\n                                                                                        // <img\r\n                                                                                        //     src=\"http://www.supah.it/dribbble/017/logo.png\"\r\n                                                                                        //     width={32}\r\n                                                                                        //     height={32}\r\n                                                                                        //     alt=\"logo\"\r\n                                                                                        //     border={0}\r\n                                                                                        // />\r\n                                                                                    </td>\r\n                                                                                </tr> */}\r\n                                        <tr className='hiddenMobile'>\r\n                                          <td height={40} />\r\n                                        </tr>\r\n                                        <tr className='visibleMobile'>\r\n                                          <td height={20} />\r\n                                        </tr>\r\n                                        <tr>\r\n                                          <td\r\n                                            style={{\r\n                                              fontSize: 12,\r\n                                              color: '#5b5b5b',\r\n                                              fontFamily:\r\n                                                '\"Open Sans\", sans-serif',\r\n                                              lineHeight: 1.6,\r\n                                              verticalAlign: 'top',\r\n                                              textAlign: 'left',\r\n                                            }}\r\n                                          >\r\n                                            Hello,{' '}\r\n                                            {orderDetailState.data['name']}\r\n                                            <br /> Thank you for your order.\r\n                                          </td>\r\n                                        </tr>\r\n                                      </tbody>\r\n                                    </table>\r\n                                    <table\r\n                                      width={220}\r\n                                      border={0}\r\n                                      cellPadding={0}\r\n                                      cellSpacing={0}\r\n                                      align='right'\r\n                                      className='col'\r\n                                    >\r\n                                      <tbody>\r\n                                        <tr className='visibleMobile'>\r\n                                          <td height={20} />\r\n                                        </tr>\r\n                                        <tr>\r\n                                          <td height={5} />\r\n                                        </tr>\r\n                                        <tr>\r\n                                          <td\r\n                                            style={{\r\n                                              fontSize: 21,\r\n                                              color: '#ff0000',\r\n                                              letterSpacing: '-1px',\r\n                                              fontFamily:\r\n                                                '\"Open Sans\", sans-serif',\r\n                                              lineHeight: 1.6,\r\n                                              verticalAlign: 'top',\r\n                                              textAlign: 'right',\r\n                                            }}\r\n                                          >\r\n                                            Invoice\r\n                                          </td>\r\n                                        </tr>\r\n                                        <tr></tr>\r\n                                        <tr className='hiddenMobile'>\r\n                                          <td height={50} />\r\n                                        </tr>\r\n                                        <tr className='visibleMobile'>\r\n                                          <td height={20} />\r\n                                        </tr>\r\n                                        <tr>\r\n                                          <td\r\n                                            style={{\r\n                                              fontSize: 12,\r\n                                              color: '#5b5b5b',\r\n                                              fontFamily:\r\n                                                '\"Open Sans\", sans-serif',\r\n                                              lineHeight: 1.6,\r\n                                              verticalAlign: 'top',\r\n                                              textAlign: 'right',\r\n                                            }}\r\n                                          >\r\n                                            <small>ORDER</small> #\r\n                                            {orderDetailState.data['shortCode']}\r\n                                            <br />\r\n                                            <small>\r\n                                              {orderDetailState.data[\r\n                                                'date_created'\r\n                                              ] &&\r\n                                                moment(\r\n                                                  orderDetailState.data[\r\n                                                    'date_created'\r\n                                                  ]\r\n                                                ).format(\r\n                                                  'MMMM Do YYYY, h:mm a'\r\n                                                )}\r\n                                            </small>\r\n                                          </td>\r\n                                        </tr>\r\n                                      </tbody>\r\n                                    </table>\r\n                                  </td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            {/* /Header */}\r\n            {/* Order Details */}\r\n            {orderDetailState.data &&\r\n              orderDetailState.data['products'] &&\r\n              orderDetailState.data['products'].length > 0 && (\r\n                <table\r\n                  width='100%'\r\n                  border={0}\r\n                  cellPadding={0}\r\n                  cellSpacing={0}\r\n                  align='center'\r\n                  className='fullTable'\r\n                  bgcolor='#e1e1e1'\r\n                >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>\r\n                        <table\r\n                          width={600}\r\n                          border={0}\r\n                          cellPadding={0}\r\n                          cellSpacing={0}\r\n                          align='center'\r\n                          className='fullTable'\r\n                          bgcolor='#ffffff'\r\n                        >\r\n                          <tbody>\r\n                            <tr></tr>\r\n                            <tr className='hiddenMobile'>\r\n                              <td height={60} />\r\n                            </tr>\r\n                            <tr className='visibleMobile'>\r\n                              <td height={40} />\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                <table\r\n                                  width={480}\r\n                                  border={0}\r\n                                  cellPadding={0}\r\n                                  cellSpacing={0}\r\n                                  align='center'\r\n                                  className='fullPadding'\r\n                                >\r\n                                  <tbody>\r\n                                    <tr>\r\n                                      <th\r\n                                        style={{\r\n                                          fontSize: 12,\r\n                                          fontFamily: '\"Open Sans\", sans-serif',\r\n                                          color: '#5b5b5b',\r\n                                          fontWeight: 'normal',\r\n                                          lineHeight: 1.6,\r\n                                          verticalAlign: 'top',\r\n                                          padding: '0 10px 7px 0',\r\n                                        }}\r\n                                        width='52%'\r\n                                        align='left'\r\n                                      >\r\n                                        Name\r\n                                      </th>\r\n\r\n                                      <th\r\n                                        style={{\r\n                                          fontSize: 12,\r\n                                          fontFamily: '\"Open Sans\", sans-serif',\r\n                                          color: '#5b5b5b',\r\n                                          fontWeight: 'normal',\r\n                                          lineHeight: 1.6,\r\n                                          verticalAlign: 'top',\r\n                                          padding: '0 0 7px',\r\n                                        }}\r\n                                        align='center'\r\n                                      ></th>\r\n                                      <th\r\n                                        style={{\r\n                                          fontSize: 12,\r\n                                          fontFamily: '\"Open Sans\", sans-serif',\r\n                                          color: '#5b5b5b',\r\n                                          fontWeight: 'normal',\r\n                                          lineHeight: 1.6,\r\n                                          verticalAlign: 'top',\r\n                                          padding: '0 0 7px',\r\n                                        }}\r\n                                        align='center'\r\n                                      >\r\n                                        Quantity\r\n                                      </th>\r\n                                      <th\r\n                                        style={{\r\n                                          fontSize: 12,\r\n                                          fontFamily: '\"Open Sans\", sans-serif',\r\n                                          color: '#1e2b33',\r\n                                          fontWeight: 'normal',\r\n                                          lineHeight: 1.6,\r\n                                          verticalAlign: 'top',\r\n                                          padding: '0 0 7px',\r\n                                        }}\r\n                                        align='right'\r\n                                      >\r\n                                        Unit Price\r\n                                      </th>\r\n                                    </tr>\r\n\r\n                                    {orderDetailState.data['products'].map(\r\n                                      (item) => {\r\n                                        return (\r\n                                          <>\r\n                                            <tr>\r\n                                              <td\r\n                                                height={1}\r\n                                                style={{\r\n                                                  background: '#bebebe',\r\n                                                }}\r\n                                                colSpan={4}\r\n                                              />\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td height={10} colSpan={4} />\r\n                                            </tr>\r\n                                            <tr>\r\n                                              <td\r\n                                                style={{\r\n                                                  fontSize: 12,\r\n                                                  fontFamily:\r\n                                                    '\"Open Sans\", sans-serif',\r\n                                                  color: '#ff0000',\r\n                                                  lineHeight: 1.6,\r\n                                                  verticalAlign: 'top',\r\n                                                  padding: '10px 0',\r\n                                                }}\r\n                                                className='article'\r\n                                              >\r\n                                                {item.name}\r\n                                              </td>\r\n\r\n                                              <td\r\n                                                style={{\r\n                                                  fontSize: 12,\r\n                                                  fontFamily:\r\n                                                    '\"Open Sans\", sans-serif',\r\n                                                  color: '#646a6e',\r\n                                                  lineHeight: 1.6,\r\n                                                  verticalAlign: 'top',\r\n                                                  padding: '10px 0',\r\n                                                }}\r\n                                                align='center'\r\n                                              >\r\n                                                {item.quantity}\r\n                                              </td>\r\n                                              <td\r\n                                                style={{\r\n                                                  fontSize: 12,\r\n                                                  fontFamily:\r\n                                                    '\"Open Sans\", sans-serif',\r\n                                                  color: '#1e2b33',\r\n                                                  lineHeight: 1.6,\r\n                                                  verticalAlign: 'top',\r\n                                                  padding: '10px 0',\r\n                                                }}\r\n                                                align='right'\r\n                                              >\r\n                                                {item.quantity * item.unitPrice}\r\n                                              </td>\r\n                                            </tr>\r\n                                          </>\r\n                                        );\r\n                                      }\r\n                                    )}\r\n\r\n                                    <tr>\r\n                                      <td\r\n                                        height={1}\r\n                                        colSpan={4}\r\n                                        style={{\r\n                                          borderBottom: '1px solid #e4e4e4',\r\n                                        }}\r\n                                      />\r\n                                    </tr>\r\n                                  </tbody>\r\n                                </table>\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td height={20} />\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              )}\r\n            {/* /Order Details */}\r\n            {/* Total */}\r\n            <table\r\n              width='100%'\r\n              border={0}\r\n              cellPadding={0}\r\n              cellSpacing={0}\r\n              align='center'\r\n              className='fullTable'\r\n              bgcolor='#e1e1e1'\r\n            >\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                    <table\r\n                      width={600}\r\n                      border={0}\r\n                      cellPadding={0}\r\n                      cellSpacing={0}\r\n                      align='center'\r\n                      className='fullTable'\r\n                      bgcolor='#ffffff'\r\n                    >\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>\r\n                            {/* Table Total */}\r\n                            <table\r\n                              width={480}\r\n                              border={0}\r\n                              cellPadding={0}\r\n                              cellSpacing={0}\r\n                              align='center'\r\n                              className='fullPadding'\r\n                            >\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td\r\n                                    style={{\r\n                                      fontSize: 12,\r\n                                      fontFamily: '\"Open Sans\", sans-serif',\r\n                                      color: '#646a6e',\r\n                                      lineHeight: 1.6,\r\n                                      verticalAlign: 'top',\r\n                                      textAlign: 'right',\r\n                                    }}\r\n                                  >\r\n                                    Total\r\n                                  </td>\r\n                                  <td\r\n                                    style={{\r\n                                      fontSize: 12,\r\n                                      fontFamily: '\"Open Sans\", sans-serif',\r\n                                      color: '#646a6e',\r\n                                      lineHeight: 1.6,\r\n                                      verticalAlign: 'top',\r\n                                      textAlign: 'right',\r\n                                      whiteSpace: 'nowrap',\r\n                                    }}\r\n                                    width={80}\r\n                                  >\r\n                                    {orderDetailState.data['total']}\r\n                                  </td>\r\n                                </tr>\r\n                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Shipping &amp; Handling\r\n                        </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        $15.00\r\n                        </td>\r\n                                                                </tr> */}\r\n                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#000\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <strong>Grand Total (Incl.Tax)</strong>\r\n                                                                    </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#000\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <strong>$344.90</strong>\r\n                                                                    </td>\r\n                                                                </tr> */}\r\n                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#b0b0b0\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <small>TAX</small>\r\n                                                                    </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#b0b0b0\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <small>$72.40</small>\r\n                                                                    </td>\r\n                                                                </tr> */}\r\n                              </tbody>\r\n                            </table>\r\n                            {/* /Table Total */}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            {/* /Total */}\r\n            {/* Information */}\r\n            <table\r\n              width='100%'\r\n              border={0}\r\n              cellPadding={0}\r\n              cellSpacing={0}\r\n              align='center'\r\n              className='fullTable'\r\n              bgcolor='#e1e1e1'\r\n            >\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                    <table\r\n                      width={600}\r\n                      border={0}\r\n                      cellPadding={0}\r\n                      cellSpacing={0}\r\n                      align='center'\r\n                      className='fullTable'\r\n                      bgcolor='#ffffff'\r\n                    >\r\n                      <tbody>\r\n                        <tr></tr>\r\n                        <tr className='hiddenMobile'>\r\n                          <td height={60} />\r\n                        </tr>\r\n                        <tr className='visibleMobile'>\r\n                          <td height={40} />\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <table\r\n                              width={480}\r\n                              border={0}\r\n                              cellPadding={0}\r\n                              cellSpacing={0}\r\n                              align='center'\r\n                              className='fullPadding'\r\n                            >\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td>\r\n                                    <table\r\n                                      width={220}\r\n                                      border={0}\r\n                                      cellPadding={0}\r\n                                      cellSpacing={0}\r\n                                      align='left'\r\n                                      className='col'\r\n                                    >\r\n                                      <tbody>\r\n                                        <tr>\r\n                                          <td\r\n                                            style={{\r\n                                              fontSize: 11,\r\n                                              fontFamily:\r\n                                                '\"Open Sans\", sans-serif',\r\n                                              color: '#5b5b5b',\r\n                                              lineHeight: 1.6,\r\n                                              verticalAlign: 'top',\r\n                                            }}\r\n                                          >\r\n                                            <strong>BILLING INFORMATION</strong>\r\n                                          </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                          <td width='100%' height={10} />\r\n                                        </tr>\r\n                                        <tr>\r\n                                          <td\r\n                                            style={{\r\n                                              fontSize: 12,\r\n                                              fontFamily:\r\n                                                '\"Open Sans\", sans-serif',\r\n                                              color: '#5b5b5b',\r\n                                              lineHeight: 1.6,\r\n                                              verticalAlign: 'top',\r\n                                            }}\r\n                                          >\r\n                                            {orderDetailState.data['name']}\r\n                                            <br />{' '}\r\n                                            {orderDetailState.data['country']}\r\n                                            <br />{' '}\r\n                                            {orderDetailState.data['city']}\r\n                                            <br />\r\n                                            {orderDetailState.data['address']}\r\n                                            <br />{' '}\r\n                                            {orderDetailState.data['phone']}\r\n                                            <br />{' '}\r\n                                            {orderDetailState.data['email']}\r\n                                          </td>\r\n                                        </tr>\r\n                                      </tbody>\r\n                                    </table>\r\n                                    <table\r\n                                      width={220}\r\n                                      border={0}\r\n                                      cellPadding={0}\r\n                                      cellSpacing={0}\r\n                                      align='right'\r\n                                      className='col'\r\n                                    >\r\n                                      <tbody>\r\n                                        <tr className='visibleMobile'>\r\n                                          <td height={20} />\r\n                                        </tr>\r\n                                        <tr>\r\n                                          <td\r\n                                            style={{\r\n                                              fontSize: 11,\r\n                                              fontFamily:\r\n                                                '\"Open Sans\", sans-serif',\r\n                                              color: '#5b5b5b',\r\n                                              lineHeight: 1.6,\r\n                                              verticalAlign: 'top',\r\n                                            }}\r\n                                          >\r\n                                            <strong>Status</strong>\r\n                                          </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                          <td width='100%' height={10} />\r\n                                        </tr>\r\n                                        <tr>\r\n                                          <td\r\n                                            style={{\r\n                                              fontSize: 12,\r\n                                              fontFamily:\r\n                                                '\"Open Sans\", sans-serif',\r\n                                              color: '#5b5b5b',\r\n                                              lineHeight: 1.6,\r\n                                              verticalAlign: 'top',\r\n                                            }}\r\n                                          >\r\n                                            {\r\n                                              orderDetailState.data[\r\n                                                'paymentStatus'\r\n                                              ]\r\n                                            }\r\n                                          </td>\r\n                                        </tr>\r\n                                      </tbody>\r\n                                    </table>\r\n                                  </td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <table\r\n                              width={480}\r\n                              border={0}\r\n                              cellPadding={0}\r\n                              cellSpacing={0}\r\n                              align='center'\r\n                              className='fullPadding'\r\n                            >\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td>\r\n                                    <table\r\n                                      width={220}\r\n                                      border={0}\r\n                                      cellPadding={0}\r\n                                      cellSpacing={0}\r\n                                      align='left'\r\n                                      className='col'\r\n                                    >\r\n                                      <tbody>\r\n                                        <tr className='hiddenMobile'>\r\n                                          <td height={35} />\r\n                                        </tr>\r\n                                        <tr className='visibleMobile'>\r\n                                          <td height={20} />\r\n                                        </tr>\r\n                                        <tr>\r\n                                          {/* <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>SHIPPING INFORMATION</strong>\r\n                                                                                    </td> */}\r\n                                        </tr>\r\n                                        <tr>\r\n                                          <td width='100%' height={10} />\r\n                                        </tr>\r\n                                        <tr>\r\n                                          {/* <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Sup Inc\r\n                                  <br /> Another Place, Somewhere\r\n                                  <br /> New York NY\r\n                                  <br /> 4468, United States\r\n                                  <br /> T: 202-555-0171\r\n                                </td> */}\r\n                                        </tr>\r\n                                      </tbody>\r\n                                    </table>\r\n                                    <table\r\n                                      width={220}\r\n                                      border={0}\r\n                                      cellPadding={0}\r\n                                      cellSpacing={0}\r\n                                      align='right'\r\n                                      className='col'\r\n                                    >\r\n                                      <tbody>\r\n                                        <tr className='hiddenMobile'>\r\n                                          <td height={35} />\r\n                                        </tr>\r\n                                        <tr className='visibleMobile'>\r\n                                          <td height={20} />\r\n                                        </tr>\r\n                                        <tr>\r\n                                          <td\r\n                                            style={{\r\n                                              fontSize: 11,\r\n                                              fontFamily:\r\n                                                '\"Open Sans\", sans-serif',\r\n                                              color: '#5b5b5b',\r\n                                              lineHeight: 1.6,\r\n                                              verticalAlign: 'top',\r\n                                            }}\r\n                                          >\r\n                                            {/* <strong>SHIPPING METHOD</strong> */}\r\n                                          </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                          <td width='100%' height={10} />\r\n                                        </tr>\r\n                                        <tr>\r\n                                          <td\r\n                                            style={{\r\n                                              fontSize: 12,\r\n                                              fontFamily:\r\n                                                '\"Open Sans\", sans-serif',\r\n                                              color: '#5b5b5b',\r\n                                              lineHeight: 1.6,\r\n                                              verticalAlign: 'top',\r\n                                            }}\r\n                                          >\r\n                                            {/* UPS: U.S. Shipping Services */}\r\n                                          </td>\r\n                                        </tr>\r\n                                      </tbody>\r\n                                    </table>\r\n                                  </td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                          </td>\r\n                        </tr>\r\n                        <tr className='hiddenMobile'>\r\n                          <td height={60} />\r\n                        </tr>\r\n                        <tr className='visibleMobile'>\r\n                          <td height={30} />\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            {/* /Information */}\r\n            <table\r\n              width='100%'\r\n              border={0}\r\n              cellPadding={0}\r\n              cellSpacing={0}\r\n              align='center'\r\n              className='fullTable'\r\n              bgcolor='#e1e1e1'\r\n            >\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                    <table\r\n                      width={600}\r\n                      border={0}\r\n                      cellPadding={0}\r\n                      cellSpacing={0}\r\n                      align='center'\r\n                      className='fullTable'\r\n                      bgcolor='#ffffff'\r\n                      style={{ borderRadius: '0 0 10px 10px' }}\r\n                    >\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>\r\n                            <table\r\n                              width={480}\r\n                              border={0}\r\n                              cellPadding={0}\r\n                              cellSpacing={0}\r\n                              align='center'\r\n                              className='fullPadding'\r\n                            >\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td\r\n                                    style={{\r\n                                      fontSize: 12,\r\n                                      color: '#5b5b5b',\r\n                                      fontFamily: '\"Open Sans\", sans-serif',\r\n                                      lineHeight: 1.6,\r\n                                      verticalAlign: 'top',\r\n                                      textAlign: 'left',\r\n                                    }}\r\n                                  >\r\n                                    Have a nice day.\r\n                                  </td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                          </td>\r\n                        </tr>\r\n                        <tr className='spacer'>\r\n                          <td height={50} />\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td height={20} />\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          ;\r\n        </>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n\r\n\r\n// import lib \r\nimport { Skeleton } from 'antd'\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={productDetailState.isLoading}>\r\n                {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                    <div className='cart-item' key={''}>\r\n\r\n\r\n                        <img\r\n\r\n                            src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']}\r\n                            alt='Img'\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        />\r\n                        <div className='cart-item-info'>\r\n                            <h4\r\n\r\n                            >\r\n                                {productDetailState.data['name']}\r\n                            </h4>\r\n                            <h5\r\n                            >\r\n                                Quantity : {quantity}\r\n                            </h5>\r\n                            <h5\r\n                            >\r\n                                {item['unitPrice']}\r\n                            </h5>\r\n\r\n\r\n                            {/* {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))} */}\r\n\r\n                            {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                        </div>\r\n                        {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                    </div>\r\n                )}\r\n            </Skeleton>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport ProductItemForOrderDetail from \"./productItemForOrderDetail\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // name: Yup.string()\r\n    //     .label('Name')\r\n    //     .required()\r\n    //     .min(2, 'Name must have at least 2 characters '),\r\n    // pickUpLocation: Yup.string()\r\n    //     .label('Pick up Location')\r\n    //     .required()\r\n    //     .min(2, 'Pick up Location must have at least 2 characters '),\r\n    // time: Yup.string()\r\n    //     .label('Time')\r\n    //     .required()\r\n    //     .min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    orderList?: any;\r\n    setOrderList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setOrderList, orderList }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\r\n\r\n    console.log('customerVie', customer);\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n    const [showInvoice, setShowInvoice] = useState(false);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // console.log('selectedCityValue', selectedCityValue); \r\n        console.log('cooles', customer)\r\n\r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: customer.id,\r\n                }\r\n            },\r\n            body: {\r\n                billingAddress: {\r\n                    phone: values.phone,\r\n                    email: values.email,\r\n                    address1: values.address1,\r\n                    address2: values.address2,\r\n                    firstName: values.firstName,\r\n                    lastName: values.lastName,\r\n                    city: selectedCityValue || customer['billingAddress']['city'],\r\n                    country: selectedCountryValue || customer['billingAddress']['country'],\r\n                },\r\n                products: customer.products,\r\n                customerId: customer.customerId\r\n                // charge\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return orderList.map(item => item.id).indexOf(customer.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\r\n            const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\r\n            setOrderList(updateRegionList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n\r\n    };\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.LastName) {\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer.billingAddress ? customer.billingAddress : {} }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Order detail\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                            width={'70vw'}\r\n                        >\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                                    <Form.Item\r\n                                        validateStatus={(updateOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['country']}\r\n                                    // noStyle={true}\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.country}\r\n                                            notFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a Country'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCountry}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {countryListState.done &&\r\n                                                countryListState.data.length > 0 &&\r\n                                                countryOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n\r\n                                    </Form.Item>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n                                    </h3>\r\n                                    <Form.Item\r\n                                        // noStyle={true}\r\n                                        validateStatus={(updateOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['city']}\r\n\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.city}\r\n                                            className='selectClassName'\r\n                                            notFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a city'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCity}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {cityListState.done &&\r\n                                                cityListState.data.length > 0 &&\r\n                                                cityOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address 2'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                                    {customer.products && customer.products.length > 0 && (\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        Products \r\n                                    </h3>\r\n                                    )}\r\n\r\n\r\n                            {customer.products && customer.products.length > 0 && <> \r\n                            \r\n                                {customer.products.map(item => {\r\n                    return <ProductItemForOrderDetail\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                            </>}\r\n\r\n\r\n                            <div style={{\r\n                                marginTop: '20px'\r\n                            }}></div>\r\n                    <Button\r\n                    onClick={() => setShowInvoice(true)}\r\n                    className='btnPrimaryClassNameoutline'\r\n                    >\r\n                        Generate Invoice\r\n                        \r\n                        </Button>\r\n\r\n            <div style={{\r\n                                marginBottom: '20px'\r\n                            }}></div>\r\n\r\n            <OrderInvoice\r\n            id={customer.id}\r\n            setShowInvoice={setShowInvoice}\r\n             showInvoice={showInvoice} \r\n            />\r\n\r\n                            \r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n\r\n\r\n\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { CSVLink } from 'react-csv';\r\n\r\nimport {\r\n  Table,\r\n  Badge,\r\n  Menu,\r\n  Dropdown,\r\n  Space,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  notification,\r\n  Popconfirm,\r\n  Select,\r\n  DatePicker,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  DownOutlined,\r\n  DownloadOutlined,\r\n} from '@ant-design/icons';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewOrder from './AddNewOrder';\r\nimport QuickEdit from './QuickEdit';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\n// import lib\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst { Option } = Select;\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setOrderList: any;\r\n  roles: any;\r\n}\r\n\r\nconst MyTable = ({ data, setOrderList, roles }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch(\r\n    {},\r\n    'deleteOrder'\r\n  );\r\n  const [updateOrderStatusState, handleUpdateOrderStatusFetch] = useHandleFetch(\r\n    {},\r\n    'updateOrderStatus'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteRegion = async (id) => {\r\n    const deleteOrderRes = await handleDeleteOrderFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteOrderRes && deleteOrderRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Order');\r\n      const newOrderList = data.filter((item) => item.id !== id);\r\n      setOrderList(newOrderList);\r\n    }\r\n  };\r\n\r\n  const handleUpdateOrderStatus = async (record, id, newStatus) => {\r\n    const updateOrderStatusRes = await handleUpdateOrderStatusFetch({\r\n      urlOptions: {\r\n        params: {\r\n          newOrderstatus: newStatus,\r\n        },\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateOrderStatusRes && updateOrderStatusRes.status === 'ok') {\r\n      openSuccessNotification('Updated Order Status');\r\n\r\n      const positionInTag = () => {\r\n        return data.map((item) => item.id).indexOf(id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n      console.log('recordis', record, index);\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, data[index], { status: newStatus });\r\n      const updateOrderList = [\r\n        ...data.slice(0, index),\r\n        updatedItem,\r\n        ...data.slice(index + 1),\r\n      ];\r\n      console.log('updateOrderList', updateOrderList, '-----', setOrderList);\r\n      setOrderList(updateOrderList);\r\n    } else {\r\n      openErrorNotification(\r\n        \"Couldn't changed order status, Something went wrong\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const StatusItemMenu = (record, id) => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, 'pending')}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Pending\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, 'processing')}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Processing\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, 'sentForDelivery')}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Sent for delivery\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, 'complete')}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Completed\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, 'cancel')}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Cancel\r\n        </Menu.Item>\r\n\r\n        {/* <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'deliver')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Delivered\r\n              </Menu.Item>\r\n     */}\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Code'\r\n          dataIndex='shortCode'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                #{text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Delivery'\r\n          dataIndex='deliveryName'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Created'\r\n          dataIndex='date_created'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                }}\r\n              >\r\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Total Price'\r\n          dataIndex='total'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          align='right'\r\n          title='Status'\r\n          dataIndex='status'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              {isAccess('postOrder', roles) ? (\r\n                <Dropdown\r\n                  overlay={() => StatusItemMenu(record, record.id)}\r\n                  placement='bottomRight'\r\n                >\r\n                  <a href='##'>\r\n                    <span\r\n                      // className={'product-attributeTag'}\r\n                      style={{\r\n                        fontSize: '12px',\r\n                      }}\r\n                    >\r\n                      {text}\r\n                      <span\r\n                        style={{\r\n                          marginLeft: '5px',\r\n                          fontSize: '10px',\r\n                        }}\r\n                      >\r\n                        <DownOutlined />\r\n                      </span>\r\n                    </span>\r\n                  </a>\r\n                </Dropdown>\r\n              ) : (\r\n                <a href='##'>\r\n                  <span\r\n                    // className={'product-attributeTag'}\r\n                    style={{\r\n                      fontSize: '12px',\r\n                    }}\r\n                  >\r\n                    {text}\r\n                    <span\r\n                      style={{\r\n                        marginLeft: '5px',\r\n                        fontSize: '10px',\r\n                      }}\r\n                    ></span>\r\n                  </span>\r\n                </a>\r\n              )}\r\n            </>\r\n          )}\r\n        />\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        {/* <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Edit Order'>\r\n              <span className='iconSize' \r\n              onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n              </span>\r\n\r\n               </Tooltip>\r\n               </a>\r\n            </Space>\r\n          )}\r\n        /> */}\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <QuickEdit\r\n          setvisible={setvisible}\r\n          visible={visible}\r\n          customer={activeCategoryForEdit}\r\n          orderList={data}\r\n          setOrderList={setOrderList}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  history?: any;\r\n  roles?: any;\r\n}\r\n\r\nconst CustomerList = ({ history, roles }: Props) => {\r\n  const [orderList, setOrderList] = useState([]);\r\n\r\n  const [orderState, handleOrderListFetch] = useHandleFetch({}, 'orderList');\r\n  const [orderStatusFilterValue, setorderStatusFilterValue] = useState('');\r\n  const [deliveryRegionNameValue, setdeliveryRegionNameValue] = useState('');\r\n\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n\r\n  const handleStartEndDateRangeDate = (e) => {\r\n    console.log('dateOrder', moment(e[0]).format());\r\n    console.log('dateOff', moment(e[1]).format());\r\n    const startDate = new Date(moment(e[0]).format());\r\n    const endDate = new Date(moment(e[1]).format());\r\n    // @ts-ignore\r\n    setStartDate(startDate);\r\n    // @ts-ignore\r\n    setEndDate(endDate);\r\n  };\r\n\r\n  console.log('orderState', orderState);\r\n\r\n  useEffect(() => {\r\n    const setOrders = async () => {\r\n      const regions = await handleOrderListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            statusValue:\r\n              orderStatusFilterValue === 'all' ? '' : orderStatusFilterValue,\r\n            limitNumber: 500000,\r\n            startDateValue: startDate,\r\n            endDateValue: endDate,\r\n            deliveryRegionNameValue: deliveryRegionNameValue,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setOrderList(regions);\r\n    };\r\n    setOrders();\r\n  }, [orderStatusFilterValue, startDate, endDate, deliveryRegionNameValue]);\r\n\r\n  const [regionList, setRegionList] = useState([]);\r\n  const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n\r\n  useEffect(() => {\r\n    const setRegions = async () => {\r\n      const regions = await handleRegionListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (regions && regions.length > 0) {\r\n        // @ts-ignore\r\n        const regionListOptions = regions.map((item) => {\r\n          return {\r\n            name: item.name,\r\n            value: item.name,\r\n          };\r\n        });\r\n        // @ts-ignore\r\n        setRegionList(regionListOptions);\r\n      }\r\n    };\r\n    setRegions();\r\n  }, []);\r\n\r\n  console.log('regionList33', regionList);\r\n\r\n  // console.log('orderState',orderState)\r\n\r\n  const handleSearch = (value) => {\r\n    if (orderState.data.length > 0) {\r\n      const newOrderList = orderState.data.filter((item) =>\r\n        item.name.includes(value)\r\n      );\r\n      setOrderList(newOrderList);\r\n    }\r\n  };\r\n\r\n  const onOrderStatusFilterChange = (value) => {\r\n    setorderStatusFilterValue(value);\r\n  };\r\n\r\n  const deliveryRegionFilterChange = (value) => {\r\n    setdeliveryRegionNameValue(value);\r\n  };\r\n\r\n  const orderFilteringOption = [\r\n    {\r\n      name: 'All',\r\n      value: 'all',\r\n    },\r\n    {\r\n      name: 'Pending',\r\n      value: 'pending',\r\n    },\r\n    {\r\n      name: 'Processing',\r\n      value: 'processing',\r\n    },\r\n    {\r\n      name: 'Sent for delivery',\r\n      value: 'sentForDelivery',\r\n    },\r\n\r\n    {\r\n      name: 'Completed',\r\n      value: 'complete',\r\n    },\r\n    {\r\n      name: 'Cancel',\r\n      value: 'cancel',\r\n    },\r\n  ];\r\n\r\n  const headers = [\r\n    { label: 'Order Code', key: 'shortCode' },\r\n    { label: 'Name', key: 'name' },\r\n    { label: 'Delivery', key: 'deliveryName' },\r\n    { label: 'Created', key: 'date_created' },\r\n    { label: 'Total Price', key: 'total' },\r\n    { label: 'Status', key: 'status' },\r\n  ];\r\n\r\n  const getData = () => {\r\n    if (orderList && orderList.length > 0) {\r\n      const csvData = orderList.map((item) => {\r\n        return {\r\n          shortCode: item.shortCode,\r\n          name: item.name,\r\n          deliveryName: item.deliveryName,\r\n          date_created: item.date_created\r\n            ? moment(item.joiningDate).format('MMMM Do YYYY, h:mm a')\r\n            : '',\r\n          Status: item.status,\r\n          total: item.total,\r\n        };\r\n      });\r\n\r\n      return csvData;\r\n    } else return [];\r\n  };\r\n\r\n  const data = getData();\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Orders</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search orders..'\r\n              onSearch={(value) => handleSearch(value)}\r\n              // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            {orderList && orderList.length > 0 && (\r\n              <>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    marginRight: '25px',\r\n                  }}\r\n                >\r\n                  <CSVLink\r\n                    filename={'Orders.csv'}\r\n                    data={data}\r\n                    headers={headers}\r\n                  >\r\n                    Export as csv\r\n                  </CSVLink>\r\n                  <span\r\n                    style={{\r\n                      color: '#1890ff',\r\n                      marginLeft: '10px',\r\n                    }}\r\n                  >\r\n                    <DownloadOutlined />\r\n                  </span>\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {isAccess('postOrder', roles) && (\r\n              <Button\r\n                // type=\"primary\"\r\n                className='btnPrimaryClassNameoutline'\r\n                icon={<PlusOutlined />}\r\n                onClick={() => history.push('/admin/order/new')}\r\n              >\r\n                Add New\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: '30px',\r\n          }}\r\n          className='categoryListContainer__header'\r\n        >\r\n          <div></div>\r\n\r\n          <div>\r\n            <RangePicker\r\n              style={{\r\n                width: 270,\r\n                color: '#3fa6f9',\r\n              }}\r\n              onChange={handleStartEndDateRangeDate}\r\n              picker={'date'}\r\n              bordered={false}\r\n            />\r\n\r\n            {regionList && regionList.length > 0 && (\r\n              <>\r\n                <Select\r\n                  showSearch\r\n                  style={{\r\n                    borderRadius: '15px',\r\n                    color: '#3fa6f9',\r\n                    width: '150px',\r\n                    marginRight: '15px',\r\n                  }}\r\n                  placeholder='Delivery Region'\r\n                  optionFilterProp='children'\r\n                  onChange={deliveryRegionFilterChange}\r\n                  // defaultValue={'pending'}\r\n                  bordered={false}\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {regionList.map((option) => {\r\n                    return <Option value={option.value}>{option.name}</Option>;\r\n                  })}\r\n                </Select>\r\n              </>\r\n            )}\r\n\r\n            <Select\r\n              style={{ borderRadius: '15px', color: '#3fa6f9', width: '100px' }}\r\n              placeholder='Select status'\r\n              optionFilterProp='children'\r\n              onChange={onOrderStatusFilterChange}\r\n              defaultValue={'all'}\r\n              bordered={false}\r\n            >\r\n              {orderFilteringOption.map((option) => {\r\n                return <Option value={option.value}>{option.name}</Option>;\r\n              })}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {orderState.done && orderList.length > 0 && (\r\n            <MyTable\r\n              roles={roles}\r\n              setOrderList={setOrderList}\r\n              data={orderList}\r\n            />\r\n          )}\r\n          {orderState.isLoading && <DataTableSkeleton />}\r\n\r\n          {orderState.done && !(orderList.length > 0) && (\r\n            <Empty title='No Order found' />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* {orderState.done && \r\n          <AddNewOrder \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          orderList={orderState.data}\r\n          setOrderList={setOrderList}\r\n           />} */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(CustomerList);\r\n","import React, {memo} from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n                  <h3 className='addOrderContainer-sectionTitle'>\r\n                <span>\r\n                    <ShopOutlined />\r\n                </span>\r\n                Added Products\r\n            </h3>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(AddNewOrderSummary)\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\ninterface Props {\r\n    setCustomerId?: any;\r\n    setSelectedCustomerData?: any;\r\n    customerListState?:any; \r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setCustomerId, setSelectedCustomerData }: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedBrandId, setSelectedBrandId] = useState('');\r\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n    function onChange(option) {\r\n        if (options && options.length > 0) {\r\n            const customerData = options.find(item => item.value === option);\r\n            if (customerData) {\r\n                setSelectedCustomerData(customerData);\r\n            }\r\n        }\r\n        setSelectedBrandId(option);\r\n        setCustomerId(option);\r\n        // console.log(`selected ${value}`);\r\n    }\r\n\r\n    function onBlur() {\r\n        // console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        // console.log('focus');\r\n    }\r\n\r\n    function onSearch(val) {\r\n        // console.log('search:', val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setBrands = async () => {\r\n            const brandListRes = await handleTagListFetch({\r\n                urlOptions:{\r\n                    params: {\r\n                      sortItem: 'added',\r\n                      sortOrderValue: '-1'\r\n                    }\r\n                    }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (brandListRes && brandListRes.length > 0) {\r\n                // @ts-ignore\r\n                const brandOptions = brandListRes.map((brand) => {\r\n                    return {\r\n                        ...brand,\r\n                        value: brand.id,\r\n                        name: `${brand.firstName} ${brand.lastName}`\r\n                    };\r\n                });\r\n                setoptions(brandOptions);\r\n            }\r\n        };\r\n\r\n        setBrands();\r\n    }, []);\r\n\r\n    return (\r\n        <Skeleton loading={brandState.isLoading}>\r\n            <Select\r\n                showSearch\r\n                size='middle'\r\n                style={{ width: '100%' }}\r\n                placeholder='Select a Customer'\r\n                optionFilterProp='children'\r\n                onChange={onChange}\r\n                onFocus={onFocus}\r\n                onBlur={onBlur}\r\n                onSearch={onSearch}\r\n                filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            >\r\n                {brandState.done &&\r\n                    brandState.data.length > 0 &&\r\n                    options.map((option) => {\r\n                        return <Option value={option.value}>{option.name}</Option>;\r\n                    })}\r\n            </Select>\r\n        </Skeleton>\r\n\r\n    );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useEffect, useState,memo } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n    productListState?:any; \r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds,\r\n    productListState\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (productListState.done && productListState.data  && productListState.data.length > 0) {\r\n            // @ts-ignore\r\n            const productOptions = productListState.data.map((product) => {\r\n                return product.name\r\n            });\r\n            setoptions(productOptions);\r\n        }\r\n\r\n    }, [productListState]);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (productListState.done && productListState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = productListState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Skeleton loading={productListState.isLoading}>\r\n                {productListState.done && productListState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Tags);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  Radio,\r\n  message,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Empty,\r\n  Steps,\r\n  Form,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  PlusOutlined,\r\n  CheckCircleOutlined,\r\n  CaretRightOutlined,\r\n  CaretLeftOutlined,\r\n  CaretRightFilled,\r\n  UserOutlined,\r\n  InfoCircleOutlined,\r\n  CarOutlined,\r\n  ClockCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport AddNewOrderSummary from './AddNewOrderSummary';\r\nimport CustomersId from './CustomersId';\r\nimport AddProducts from './AddProducts';\r\nimport { product } from '../../state/ducks';\r\n\r\n//import utils\r\nimport { getDeliveryChargeTotal } from '.././../utils';\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Order Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst initialValues = {\r\n  phone: '',\r\n  email: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  address1: '',\r\n  address2: '',\r\n  zipCode: '',\r\n  additionalInfo: '',\r\n  country: '',\r\n  city: '',\r\n};\r\n\r\nconst steps = [\r\n  {\r\n    title: 'Order Information',\r\n    content: '',\r\n    // description: 'Add Customer & Products'\r\n  },\r\n  {\r\n    title: 'Shipping Address',\r\n  },\r\n  {\r\n    title: 'Confirm Order',\r\n    content: '',\r\n  },\r\n];\r\n\r\ninterface Props {}\r\n\r\nconst AddNewOrder = ({}: Props) => {\r\n  const [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n  const [customerId, setCustomerId] = useState([]);\r\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n  const [current, setCurrent] = useState(0);\r\n  const [productIds, setProductIds] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  const [productListState, handleProductListFetch] = useHandleFetch(\r\n    {},\r\n    'productList'\r\n  );\r\n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'customerList'\r\n  );\r\n\r\n  const [deliveryRegionState, handleDeliveryRegionFetch] = useHandleFetch(\r\n    [],\r\n    'getDeliveryRegion'\r\n  );\r\n\r\n  const [deliveryRegionName, setDeliveryRegionName] = useState('');\r\n  const [selectedRegion, setSelectedRegion] = useState({});\r\n  const [regionDeliveryCharge, setregionDeliveryCharge] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (selectedCustomerData && Object.keys(selectedCustomerData).length > 0) {\r\n      setselectedCityValue(selectedCustomerData['city']);\r\n      setselectedCountryValue(selectedCustomerData['country']);\r\n    }\r\n  }, [selectedCustomerData]);\r\n\r\n  const isDeliveryChargeExists = (regions) => {\r\n    if (!regions) {\r\n      return false;\r\n    } else return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getAndSetShippingDeliveryCharge = async () => {\r\n      const deliveryRegionState = await handleDeliveryRegionFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            cityName: selectedCityValue,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setregionDeliveryCharge(deliveryRegionState);\r\n    };\r\n\r\n    getAndSetShippingDeliveryCharge();\r\n    console.log('selectedCityValue', selectedCityValue);\r\n  }, [selectedCityValue]);\r\n\r\n  const handleDeviliveryRegionChange = (value) => {\r\n    setDeliveryRegionName(value);\r\n\r\n    if (\r\n      isDeliveryChargeExists(\r\n        regionDeliveryCharge.length > 0 && regionDeliveryCharge\r\n      )\r\n    ) {\r\n      const deliveryRegions = regionDeliveryCharge;\r\n\r\n      const selectedRegion = deliveryRegions.find(\r\n        (region) => region['_id'] === value\r\n      );\r\n      if (selectedRegion) {\r\n        setSelectedRegion(selectedRegion);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      isDeliveryChargeExists(\r\n        regionDeliveryCharge.length > 0 && regionDeliveryCharge\r\n      )\r\n    ) {\r\n      const deliveryRegions = regionDeliveryCharge;\r\n\r\n      const selectedRegion = deliveryRegions.find(\r\n        (region, index) => 0 === index\r\n      );\r\n      if (selectedRegion) {\r\n        setDeliveryRegionName(selectedRegion['name']);\r\n        setSelectedRegion(selectedRegion);\r\n      }\r\n    }\r\n  }, [regionDeliveryCharge]);\r\n\r\n  useEffect(() => {\r\n    const setProducts = async () => {\r\n      const productListRes = await handleProductListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            productType: 'product',\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    setProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const customerListRes = await handleCustomerListFetch({});\r\n    };\r\n    setCustomers();\r\n  }, []);\r\n\r\n  const next = () => {\r\n    const newCurrent = current + 1;\r\n    setCurrent(newCurrent);\r\n  };\r\n\r\n  const prev = () => {\r\n    const newCurrent = current - 1;\r\n    setCurrent(newCurrent);\r\n  };\r\n\r\n  const handleCheckoutSubmit = async (values: any, actions: any) => {\r\n    const products =\r\n      productList && productList.length > 0\r\n        ? productList.map((item) => {\r\n            return {\r\n              product: item._id,\r\n              quantity: item.quantity,\r\n              variation: item.variation,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    const addOrderRes = await handleOrderFetch({\r\n      body: {\r\n        shippingAddress: {\r\n          phone: values.phone,\r\n          email: values.email,\r\n          address1: values.address1,\r\n          address2: values.address2,\r\n          firstName: values.firstName,\r\n          lastName: values.lastName,\r\n          city: selectedCityValue || selectedCustomerData['city'],\r\n          country: selectedCountryValue || selectedCustomerData['country'],\r\n        },\r\n        items: products,\r\n        delivery: deliveryRegionName,\r\n        customerId: customerId,\r\n        // charge\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addOrderRes && addOrderRes.status === 'ok') {\r\n      // openSuccessNotification();\r\n\r\n      actions.resetForm();\r\n\r\n      setCurrent(0);\r\n      setProductIds([]);\r\n      setProductList([]);\r\n      setCustomerId([]);\r\n      setselectedCityValue('');\r\n      setselectedCountryValue('');\r\n      setDeliveryRegionName('');\r\n      setSelectedRegion({});\r\n      setregionDeliveryCharge([]);\r\n      setSelectedCustomerData({});\r\n    } else {\r\n      openErrorNotification(\"Couldn't create order, Something went wrong\");\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addOrderState['isLoading']) {\r\n      const error = addOrderState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addOrderState['isLoading'] &&\r\n      Object.keys(addOrderState.data).length > 0\r\n    ) {\r\n      if (addOrderState['data']['status'] === 'ok') {\r\n        openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addOrderState]);\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.id,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleAddDeliveryCharge = () => {};\r\n\r\n  useEffect(() => {\r\n    if (productIds && productIds.length > 0 && productList) {\r\n      if (productIds.length > productList.length) {\r\n        const variation =\r\n          productIds[productIds.length - 1]['pricing'] &&\r\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\r\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n\r\n        setProductList([\r\n          ...productList,\r\n          {\r\n            ...productIds[productIds.length - 1],\r\n            _id: productIds[productIds.length - 1]['id'],\r\n            variation: variation,\r\n            quantity: 1,\r\n          },\r\n        ]);\r\n      } else if (productIds.length < productList.length) {\r\n        console.log('productIds', productIds);\r\n        console.log('productList', productList);\r\n\r\n        const newProductList = productList.filter((item) => {\r\n          let isTrue = false;\r\n          productIds.forEach((product) => {\r\n            if (product.id === item._id) {\r\n              isTrue = true;\r\n            }\r\n          });\r\n          return isTrue;\r\n        });\r\n        setProductList(newProductList);\r\n      }\r\n    } else {\r\n      setProductList([]);\r\n    }\r\n    // console.log('productIds', productIds)\r\n  }, [productIds]);\r\n\r\n  // console.log('productList', productList)\r\n  console.log('selectedCustomerData', selectedCustomerData);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleCheckoutSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...selectedCustomerData }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <div className='addOrderContainer'>\r\n            <h3>Add New Order</h3>\r\n            <div className='addOrderContainer__container'>\r\n              <Steps current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n\r\n              {current === 0 && (\r\n                <div className='addOrderContainer__container-OrderInfoContainer'>\r\n                  <div className='addOrderContainer__container-OrderInfoContainer-left'>\r\n                    <h3 style={{}} className='addOrderContainer-sectionTitle'>\r\n                      <span>\r\n                        <UserOutlined />\r\n                      </span>\r\n                      Customers And products\r\n                    </h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h4 className='inputFieldLabel'>Customer</h4>\r\n                    <CustomersId\r\n                      customerListState={customerListState}\r\n                      setSelectedCustomerData={setSelectedCustomerData}\r\n                      setCustomerId={setCustomerId}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n                    <h4 className='inputFieldLabel'>Products</h4>\r\n                    <AddProducts\r\n                      productListState={productListState}\r\n                      productIds={productIds}\r\n                      setProductIds={setProductIds}\r\n                    />\r\n                  </div>\r\n                  <div className='addOrderContainer__container-OrderInfoContainer-right'>\r\n                    <AddNewOrderSummary\r\n                      setProductList={setProductList}\r\n                      productList={productList}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {current === 1 && (\r\n                <div className='addOrderContainer__container-address'>\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='First Name'\r\n                        value={values.firstName}\r\n                        name='firstName'\r\n                        isError={\r\n                          (touched.firstName && errors.firstName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['firstName'])\r\n                        }\r\n                        errorString={\r\n                          (touched.firstName && errors.firstName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['firstName'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('firstName');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Last Name'\r\n                        value={values.lastName}\r\n                        name='lastName'\r\n                        isError={\r\n                          (touched.lastName && errors.lastName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['lastName'])\r\n                        }\r\n                        errorString={\r\n                          (touched.lastName && errors.lastName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['lastName'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('lastName');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Phone'\r\n                        value={values.phone}\r\n                        name='phone'\r\n                        isError={\r\n                          (touched.phone && errors.phone) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['phone'])\r\n                        }\r\n                        errorString={\r\n                          (touched.phone && errors.phone) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['phone'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('phone');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Email'\r\n                        value={values.email}\r\n                        name='email'\r\n                        isError={\r\n                          (touched.email && errors.email) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['email'])\r\n                        }\r\n                        errorString={\r\n                          (touched.email && errors.email) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['email'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('email');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <h3 className='inputFieldLabel'>Country</h3>\r\n\r\n                      <Form.Item\r\n                        validateStatus={\r\n                          addOrderState.error['error']['country'] ? 'error' : ''\r\n                        }\r\n                        help={addOrderState.error['error']['country']}\r\n                        // noStyle={true}\r\n                      >\r\n                        <Select\r\n                          defaultValue={values.country}\r\n                          notFoundContent={\r\n                            <Empty\r\n                              description='No Country Found'\r\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                            />\r\n                          }\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select a Country'\r\n                          optionFilterProp='children'\r\n                          onChange={onChangeCountry}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {countryListState.done &&\r\n                            countryListState.data.length > 0 &&\r\n                            countryOptions.map((option) => {\r\n                              return (\r\n                                <Option value={option.value}>\r\n                                  {option.name}\r\n                                </Option>\r\n                              );\r\n                            })}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <h3 className='inputFieldLabel'>City</h3>\r\n                      <Form.Item\r\n                        // noStyle={true}\r\n                        validateStatus={\r\n                          addOrderState.error['error']['city'] ? 'error' : ''\r\n                        }\r\n                        help={addOrderState.error['error']['city']}\r\n                      >\r\n                        <Select\r\n                          defaultValue={values.city}\r\n                          className='selectClassName'\r\n                          notFoundContent={\r\n                            <Empty\r\n                              description='First Select a Country'\r\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                            />\r\n                          }\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select a city'\r\n                          optionFilterProp='children'\r\n                          onChange={onChangeCity}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {cityListState.done &&\r\n                            cityListState.data.length > 0 &&\r\n                            cityOptions.map((option) => {\r\n                              return (\r\n                                <Option value={option.value}>\r\n                                  {option.name}\r\n                                </Option>\r\n                              );\r\n                            })}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      marginTop: '12px',\r\n                    }}\r\n                  ></div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Address'\r\n                        value={values.address1}\r\n                        name='address1'\r\n                        isError={\r\n                          (touched.address1 && errors.address1) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address1'])\r\n                        }\r\n                        errorString={\r\n                          (touched.address1 && errors.address1) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address1'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('address1');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Address 2'\r\n                        value={values.address2}\r\n                        name='address2'\r\n                        isError={\r\n                          (touched.address2 && errors.address2) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address2'])\r\n                        }\r\n                        errorString={\r\n                          (touched.address2 && errors.address2) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address2'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('address2');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {current === 10 && (\r\n                <div className='addOrderContainer__container-address'>\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='First Name'\r\n                        value={values.firstName}\r\n                        name='firstName'\r\n                        isError={\r\n                          (touched.firstName && errors.firstName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['firstName'])\r\n                        }\r\n                        errorString={\r\n                          (touched.firstName && errors.firstName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['firstName'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('firstName');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Last Name'\r\n                        value={values.lastName}\r\n                        name='lastName'\r\n                        isError={\r\n                          (touched.lastName && errors.lastName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['lastName'])\r\n                        }\r\n                        errorString={\r\n                          (touched.lastName && errors.lastName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['lastName'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('lastName');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Phone'\r\n                        value={values.phone}\r\n                        name='phone'\r\n                        isError={\r\n                          (touched.phone && errors.phone) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['phone'])\r\n                        }\r\n                        errorString={\r\n                          (touched.phone && errors.phone) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['phone'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('phone');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Email'\r\n                        value={values.email}\r\n                        name='email'\r\n                        isError={\r\n                          (touched.email && errors.email) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['email'])\r\n                        }\r\n                        errorString={\r\n                          (touched.email && errors.email) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['email'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('email');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <h3 className='inputFieldLabel'>Country</h3>\r\n\r\n                      <Form.Item\r\n                        validateStatus={\r\n                          addOrderState.error['error']['country'] ? 'error' : ''\r\n                        }\r\n                        help={addOrderState.error['error']['country']}\r\n                        // noStyle={true}\r\n                      >\r\n                        <Select\r\n                          defaultValue={'Comoros'}\r\n                          notFoundContent={\r\n                            <Empty\r\n                              description='No Country Found'\r\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                            />\r\n                          }\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select a Country'\r\n                          optionFilterProp='children'\r\n                          onChange={onChangeCountry}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {countryListState.done &&\r\n                            countryListState.data.length > 0 &&\r\n                            countryOptions.map((option) => {\r\n                              return (\r\n                                <Option value={option.value}>\r\n                                  {option.name}\r\n                                </Option>\r\n                              );\r\n                            })}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <h3 className='inputFieldLabel'>City</h3>\r\n                      <Form.Item\r\n                        // noStyle={true}\r\n                        validateStatus={\r\n                          addOrderState.error['error']['city'] ? 'error' : ''\r\n                        }\r\n                        help={addOrderState.error['error']['city']}\r\n                      >\r\n                        <Select\r\n                          defaultValue={'Dhaka'}\r\n                          className='selectClassName'\r\n                          notFoundContent={\r\n                            <Empty\r\n                              description='First Select a Country'\r\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                            />\r\n                          }\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select a city'\r\n                          optionFilterProp='children'\r\n                          onChange={onChangeCity}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {cityListState.done &&\r\n                            cityListState.data.length > 0 &&\r\n                            cityOptions.map((option) => {\r\n                              return (\r\n                                <Option value={option.value}>\r\n                                  {option.name}\r\n                                </Option>\r\n                              );\r\n                            })}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      marginTop: '12px',\r\n                    }}\r\n                  ></div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Address'\r\n                        value={values.address1}\r\n                        name='address1'\r\n                        isError={\r\n                          (touched.address1 && errors.address1) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address1'])\r\n                        }\r\n                        errorString={\r\n                          (touched.address1 && errors.address1) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address1'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('address1');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='More specific address'\r\n                        value={values.address2}\r\n                        name='address2'\r\n                        isError={\r\n                          (touched.address2 && errors.address2) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address2'])\r\n                        }\r\n                        errorString={\r\n                          (touched.address2 && errors.address2) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address2'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('address2');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {current === 2 && (\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    marginTop: '40px',\r\n                    alignItems: 'center',\r\n                    flexDirection: 'column',\r\n                  }}\r\n                >\r\n                  <AddNewOrderSummary\r\n                    setProductList={setProductList}\r\n                    productList={productList}\r\n                  />\r\n\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'center',\r\n                    }}\r\n                  >\r\n                    <h3\r\n                      style={{\r\n                        marginTop: '20px',\r\n                        display: 'inline-block',\r\n                        textAlign: 'center',\r\n                      }}\r\n                      className='addOrderContainer-sectionTitle'\r\n                    >\r\n                      <span>\r\n                        <CarOutlined />\r\n                      </span>\r\n                      Delivery Region List ({selectedCityValue})\r\n                    </h3>\r\n\r\n                    {regionDeliveryCharge && regionDeliveryCharge.length > 0 ? (\r\n                      <>\r\n                        <Radio.Group\r\n                          style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            flexWrap: 'wrap',\r\n                          }}\r\n                          value={deliveryRegionName}\r\n                          defaultValue={deliveryRegionName}\r\n                          name='radiogroup'\r\n                        >\r\n                          {regionDeliveryCharge.map((deliveryRegionItem) => {\r\n                            return (\r\n                              <div\r\n                                onClick={() =>\r\n                                  handleDeviliveryRegionChange(\r\n                                    deliveryRegionItem._id\r\n                                  )\r\n                                }\r\n                                className='deliveryRegionLabelContainer'\r\n                              >\r\n                                <div className='deliveryRegionLabelContainer__radio'>\r\n                                  <Radio value={deliveryRegionItem._id}></Radio>\r\n                                </div>\r\n                                <div className='deliveryRegionLabelContainer__info'>\r\n                                  <h3>{deliveryRegionItem.name}</h3>\r\n                                  <h4>\r\n                                    <span>\r\n                                      <CarOutlined />\r\n                                    </span>\r\n                                    {deliveryRegionItem.pickUpLocation}\r\n                                  </h4>\r\n                                  <h4>\r\n                                    <span>\r\n                                      <ClockCircleOutlined />\r\n                                    </span>\r\n                                    {deliveryRegionItem.time}\r\n                                  </h4>\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </Radio.Group>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <h4\r\n                          style={{\r\n                            textAlign: 'center',\r\n                            color: '#777',\r\n                            marginTop: '50px',\r\n                          }}\r\n                        >\r\n                          Delivery not found\r\n                        </h4>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      marginTop: '40px',\r\n                      marginBottom: '50px',\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      loading={addOrderState.isLoading}\r\n                      style={{\r\n                        marginTop: '10px',\r\n                        marginLeft: '15px',\r\n                      }}\r\n                      className='btnPrimaryClassNameoutline-blue'\r\n                      onClick={(e: any) => handleSubmit(e)}\r\n                    >\r\n                      Place Order\r\n                      <CaretRightOutlined />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                }}\r\n              >\r\n                {current > 0 && (\r\n                  <Button\r\n                    style={{ marginRight: '15px', marginTop: '10px' }}\r\n                    // type=\"primary\"\r\n                    className='btnPrimaryClassNameoutline'\r\n                    type='primary'\r\n                    onClick={() => prev()}\r\n                  >\r\n                    <CaretLeftOutlined /> Previous\r\n                  </Button>\r\n                )}\r\n\r\n                {current < steps.length - 1 && (\r\n                  <>\r\n                    <div>\r\n                      <Button\r\n                        style={{\r\n                          marginTop: '10px',\r\n                        }}\r\n                        className='btnPrimaryClassNameoutline'\r\n                        type='primary'\r\n                        onClick={() => {\r\n                          if (current === 1) {\r\n                            setCurrent(2);\r\n                          } else {\r\n                            next();\r\n                          }\r\n                        }}\r\n                      >\r\n                        Next\r\n                        <CaretRightOutlined />\r\n                      </Button>\r\n\r\n                      {/* {current === 1 && <Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => setCurrent(2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUse different address< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t} */}\r\n                    </div>\r\n                  </>\r\n                )}\r\n\r\n                {/* {current === steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t)} */}\r\n              </div>\r\n\r\n              {/* <div className='addOrderContainer__container-left'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\r\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\r\n\t\t\t\t\t\t\t\t</div> */}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewOrder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport SelectProducts from \"./OrderProductIds\";\r\nimport SelectedProductItems from \"../productBundle/SelectedProductItems\";\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Order Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    summary: '',\r\n    note: ''\r\n}\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setTagEditVisible: any;\r\n    tagEditVisible: any;\r\n    setOrderNotes?:any; \r\n    orderNotes?:any; \r\n}\r\n\r\nconst QuickEdit = ({ customer, setTagEditVisible, tagEditVisible, setOrderNotes, orderNotes }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'addOrderNote');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        console.log('orderValues',values); \r\n        \r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            body: {\r\n                note: values.note,\r\n                summary: values.summary,\r\n                order: customer.id,\r\n            },\r\n        });\r\n\r\n        \r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification('Order Note added');\r\n            // @ts-ignore\r\n            setOrderNotes([{...addRegionRes},...orderNotes])\r\n            setTagEditVisible(false)\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Add Order Note\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <TextArea\r\n                                rows={4}\r\n\t\t\t\t\t\t\t\tlabel='Note'\r\n\t\t\t\t\t\t\t\tvalue={values.note}\r\n\t\t\t\t\t\t\t\tname='note'\r\n\t\t\t\t\t\t\t\tisError={(touched.note && errors.note) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.note && errors.note) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('note');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                            <TextArea\r\n                                rows={2}\r\n\t\t\t\t\t\t\t\tlabel='Summary'\r\n\t\t\t\t\t\t\t\tvalue={values.summary}\r\n\t\t\t\t\t\t\t\tname='summary'\r\n\t\t\t\t\t\t\t\tisError={(touched.summary && errors.summary) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.summary && errors.summary) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('summary');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                        </Modal>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport SelectProducts from \"./OrderProductIds\";\r\nimport SelectedProductItems from \"../productBundle/SelectedProductItems\";\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Order Note Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    summary: '',\r\n    note: ''\r\n}\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setTagEditVisible: any;\r\n    tagEditVisible: any;\r\n    setOrderNotes?:any; \r\n    orderNotes?:any; \r\n    activeNote?:any; \r\n}\r\n\r\nconst QuickEdit = ({ customer, setTagEditVisible, tagEditVisible, setOrderNotes, orderNotes,activeNote }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrderNote');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        console.log('orderValues',values); \r\n        \r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: activeNote._id\r\n                }\r\n            }, \r\n            body: {\r\n                note: values.note,\r\n                summary: values.summary,\r\n                order: customer.id,\r\n            },\r\n        });\r\n\r\n        \r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            const positionInTag = () => {\r\n\t\t\t\treturn orderNotes.map(item => item._id).indexOf(activeNote._id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, orderNotes[index], { ...addRegionRes, _id: activeNote._id });\r\n\t\t\tconst updateTagList = [...orderNotes.slice(0, index), updatedItem, ...orderNotes.slice(index + 1)];\r\n\t\t\tsetOrderNotes(updateTagList);\r\n            setTagEditVisible(false)\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...activeNote }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Update Order Note\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <TextArea\r\n                                rows={4}\r\n\t\t\t\t\t\t\t\tlabel='Note'\r\n\t\t\t\t\t\t\t\tvalue={values.note}\r\n\t\t\t\t\t\t\t\tname='note'\r\n\t\t\t\t\t\t\t\tisError={(touched.note && errors.note) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.note && errors.note) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('note');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                            <TextArea\r\n                                rows={2}\r\n\t\t\t\t\t\t\t\tlabel='Summary'\r\n\t\t\t\t\t\t\t\tvalue={values.summary}\r\n\t\t\t\t\t\t\t\tname='summary'\r\n\t\t\t\t\t\t\t\tisError={(touched.summary && errors.summary) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.summary && errors.summary) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('summary');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                        </Modal>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n  InfoCircleOutlined,\r\n  EyeOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport OrderEdit from './OrderEdit';\r\nimport OrderNoteEdit from './OrderNoteEdit';\r\nimport OrderInvoice from './OrderInvoice';\r\nimport { OrderDetail } from '.';\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Order Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  roles?: any;\r\n}\r\n\r\n\r\n\r\nconst NewBrandDetail = ({\r\n  roles\r\n}: Props) => {\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'orderDetail'\r\n  );\r\n  const [orderDetailNotesState, handleOrderDetailNotesFetch] = useHandleFetch(\r\n    {},\r\n    'getOrderNote'\r\n  );\r\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\r\n    {},\r\n    'tagProducts'\r\n  );\r\n  const [deleteOrderNoteState, handleDeleteOrderNoteFetch] = useHandleFetch(\r\n    {},\r\n    'deleteOrderNote'\r\n  );\r\n  const [tagEditVisible, setTagEditVisible] = useState(false);\r\n  const [activeOrderNote, setActiveOrderNote] = useState({});\r\n  const [isOrderNoteEdit, setIsOrderNoteEdit] = useState(false);\r\n  const [isInvoiceShow, setIsInvoiceShow] = useState(false);\r\n\r\n  console.log('orderDetailNotesState', orderDetailNotesState);\r\n\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const tagId = params['id'];\r\n  const [orderNotes, setOrderNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      const orderNotes = await handleOrderDetailNotesFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (orderNotes) {\r\n        // @ts-ignore\r\n        setOrderNotes(orderNotes);\r\n      }\r\n    };\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  console.log('orderDetailState', tagDetailState);\r\n\r\n  useEffect(() => {\r\n    const getTagProducts = async () => {\r\n      await handleTagProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getTagProducts();\r\n  }, [tagId]);\r\n\r\n  console.log('orderDetailState', tagDetailState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  const handleDeleteOrderNote = async (id) => {\r\n    const res = await handleDeleteOrderNoteFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (res && res.status === 'ok') {\r\n      const newOrderNoteList =\r\n        orderNotes && orderNotes.filter((item) => item._id !== id);\r\n      setOrderNotes(newOrderNoteList);\r\n      openSuccessNotification('Order note deleted!');\r\n    }\r\n  };\r\n\r\n  console.log(\r\n    \"tagDetailState.data['products']\",\r\n    tagDetailState.data['products']\r\n  );\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <OrderNoteEdit\r\n        setOrderNotes={setOrderNotes}\r\n        orderNotes={orderNotes}\r\n        tagEditVisible={isOrderNoteEdit}\r\n        setTagEditVisible={setIsOrderNoteEdit}\r\n        customer={tagDetailState.data}\r\n        activeNote={activeOrderNote}\r\n      />\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Order Detail</h3>\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          Object.keys(tagDetailState.data).length > 0 && (\r\n            <>\r\n              <div>\r\n                <OrderInvoice\r\n                  setShowInvoice={setIsInvoiceShow}\r\n                  showInvoice={isInvoiceShow}\r\n                  id={tagDetailState['data']['id']}\r\n                />\r\n                <OrderEdit\r\n                  setOrderNotes={setOrderNotes}\r\n                  orderNotes={orderNotes}\r\n                  tagEditVisible={tagEditVisible}\r\n                  setTagEditVisible={setTagEditVisible}\r\n                  customer={tagDetailState.data}\r\n                />\r\n                <Button\r\n                  onClick={() => setIsInvoiceShow(true)}\r\n                  type='link'\r\n                  icon={<EyeOutlined />}\r\n                >\r\n                  Generate Invoice\r\n                </Button>\r\n\r\n                {isAccess('postOrder','roles') && (\r\n                  <>\r\n                   <Button\r\n                  onClick={() => setTagEditVisible(true)}\r\n                  type='link'\r\n                  icon={<PlusOutlined />}\r\n                >\r\n                  Add note\r\n                </Button>\r\n                  </>\r\n                )}\r\n               \r\n              </div>\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          !(Object.keys(tagDetailState.data).length > 0) && (\r\n            <Empty\r\n              description='No Order found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          Object.keys(tagDetailState.data).length > 0 && (\r\n            <>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    flex: 1,\r\n                    marginRight: '20px',\r\n                  }}\r\n                  className='brandDetailContainer__header'\r\n                >\r\n                  <div className='brandDetailContainer__header-info'>\r\n                    <h2>{tagDetailState.data['name']}</h2>\r\n                    <h3>{tagDetailState.data['description']}</h3>\r\n                    {tagDetailState.data['url'] && (\r\n                      <h3>\r\n                        URL:\r\n                        <span>{tagDetailState.data['url']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['country'] && (\r\n                      <h3>\r\n                        COUNTRY:\r\n                        <span>{tagDetailState['data']['country']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['city'] && (\r\n                      <h3>\r\n                        CITY:\r\n                        <span>{tagDetailState['data']['city']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['address1'] && (\r\n                      <h3>\r\n                        ADDRESS:\r\n                        <span>{tagDetailState['data']['address1']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['phone'] && (\r\n                      <h3>\r\n                        PHONE:\r\n                        <span>{tagDetailState['data']['phone']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['email'] && (\r\n                      <h3>\r\n                        EMAIL:\r\n                        <span>{tagDetailState['data']['email']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['paymentMethod'] && (\r\n                      <h3>\r\n                        PAYMENT METHOD:\r\n                        <span>{tagDetailState['data']['paymentMethod']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['paymentStatus'] && (\r\n                      <h3>\r\n                        PAYMENT STATUS:\r\n                        <span>{tagDetailState['data']['paymentStatus']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['status'] && (\r\n                      <h3>\r\n                        ORDER STATUS:\r\n                        <span>{tagDetailState['data']['status']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {/* \r\n                            {tagDetailState['data']['deliveryCharge'] && (\r\n                                <h3>\r\n                                    DELIVERY CHARGE:\r\n                                    <span>\r\n                                        {tagDetailState['data']['deliveryCharge']}\r\n                                    </span>\r\n                                </h3>\r\n                            )} */}\r\n\r\n                    {tagDetailState['data']['deliveryName'] && (\r\n                      <h3>\r\n                        DELIVERY LOCATION:\r\n                        <span>\r\n                          {`${tagDetailState['data']['deliveryName']}, ${tagDetailState['data']['deliveryPickUpLocation']}, ${tagDetailState['data']['deliveryCountryName']}`}\r\n                        </span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['total'] && (\r\n                      <h3>\r\n                        TOTAL ORDER PRICE:\r\n                        <span>{`${tagDetailState['data']['total']}`}</span>\r\n                      </h3>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  style={{\r\n                    maxWidth: '35%',\r\n                    minWidth: '35%',\r\n                  }}\r\n                  className='brandDetailContainer__header'\r\n                >\r\n                  <div\r\n                    style={{\r\n                      width: '100%',\r\n                    }}\r\n                    className='brandDetailContainer__header-info'\r\n                  >\r\n                    <h2>Notes</h2>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                      }}\r\n                    >\r\n                      {orderDetailNotesState.done &&\r\n                        orderNotes &&\r\n                        orderNotes.length > 0 &&\r\n                        orderNotes.map((noteItem: any) => {\r\n                          return (\r\n                            <div className='OrderNoteItem'>\r\n                              <div className='OrderNoteItem__action'>\r\n                                {/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n                                <span\r\n                                  className='OrderNoteItem__action-edit'\r\n                                  onClick={() => {\r\n                                    setActiveOrderNote(noteItem);\r\n                                    setIsOrderNoteEdit(true);\r\n                                  }}\r\n                                >\r\n                                  <EditOutlined />\r\n                                </span>\r\n                                <span\r\n                                  className='OrderNoteItem__action-delete'\r\n                                  onClick={() =>\r\n                                    handleDeleteOrderNote(noteItem._id)\r\n                                  }\r\n                                >\r\n                                  <DeleteOutlined />\r\n                                </span>\r\n                              </div>\r\n                              <h4>\r\n                                <span>NOTE:</span>\r\n                                {` ${noteItem.note}`}\r\n                              </h4>\r\n\r\n                              {noteItem.summary && (\r\n                                <>\r\n                                  <h4>\r\n                                    <span>SUMMARY :</span>\r\n\r\n                                    {` ${noteItem.summary}`}\r\n                                  </h4>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        })}\r\n\r\n                      {orderDetailNotesState.done &&\r\n                        orderNotes &&\r\n                        !(Object.keys(orderNotes).length > 0) && (\r\n                          <>\r\n                            <div\r\n                              style={{\r\n                                width: '100%',\r\n                                margin: '100px 0',\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                              }}\r\n                            >\r\n                              <Empty\r\n                                description='No Notes found'\r\n                                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                              />\r\n                            </div>\r\n                          </>\r\n                        )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div></div>\r\n              </div>\r\n            </>\r\n          )}\r\n      </Skeleton>\r\n\r\n\r\n      {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && (\r\n        <>\r\n          <div className='brandDetailContainer__heading'>\r\n            <h3>Products</h3>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      <div className='brandDetailContainer__body'>\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          Object.keys(tagDetailState.data).length > 0 &&\r\n          tagDetailState.data['products'] &&\r\n          !(tagDetailState.data['products'].length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '100px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Products exists for this order'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          Object.keys(tagDetailState.data).length > 0 &&\r\n          tagDetailState.data['products'] &&\r\n          tagDetailState.data['products'].length > 0 && (\r\n            <>\r\n              <Table\r\n                style={{\r\n                  paddingTop: '10px',\r\n                  borderRadius: '5px !important',\r\n                  overflow: 'hidden',\r\n                  boxShadow:\r\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\r\n                }}\r\n                size='small'\r\n                dataSource={tagDetailState.data['products']}\r\n                tableLayout={'auto'}\r\n                onHeaderRow={(column) => {\r\n                  return {\r\n                    style: {\r\n                      color: 'red !important',\r\n                    },\r\n                  };\r\n                }}\r\n              >\r\n                <Column\r\n                  title=''\r\n                  dataIndex='cover'\r\n                  key='id'\r\n                  width={'80px'}\r\n                  className='classnameofthecolumn'\r\n                  render={(cover, record: any) => (\r\n                    <>\r\n                      <img\r\n                        onClick={() => {\r\n                          history.push(`/admin/product/${record.id}`);\r\n                        }}\r\n                        src={cover}\r\n                        alt='cover img'\r\n                        style={{\r\n                          height: '40px',\r\n                          width: '40px',\r\n                          objectFit: 'contain',\r\n                          borderRadius: '3px',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      />\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Name'\r\n                  dataIndex='name'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <>\r\n                      <h4\r\n                        onClick={() => {\r\n                          history.push(`/admin/product/${record.id}`);\r\n                        }}\r\n                        style={{\r\n                          fontWeight: 400,\r\n                          color: '#555',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      >\r\n                        {text}\r\n                      </h4>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='stock'\r\n                  dataIndex='inStock'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <>\r\n                      <h4\r\n                        style={{\r\n                          fontWeight: 400,\r\n                          color: '#555',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      >\r\n                        {text ? 'inStock' : 'out of stock'}\r\n                      </h4>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Unit Price'\r\n                  dataIndex='unitPrice'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Quantity'\r\n                  dataIndex='quantity'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Total Price'\r\n                  dataIndex='price'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n              </Table>\r\n            </>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  roles: state.globalState,\r\n})\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(NewBrandDetail);\r\n\r\n\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\nconst date = new Date();\r\nconst thisMonth = MONTHS[date.getMonth()]\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n    `${order}${thisMonth}`;\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'dayOfMonth',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    This Month\r\n                </h2>\r\n                <h3>\r\n                      Order report by days of month \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'dayOfMonth'} \r\n                         tickFormatter={getMonthNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'dayOfWeek',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    This Week\r\n                </h2>\r\n                <h3>\r\n                      Order report by days of week \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n{orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'dayOfWeek'} \r\n                         tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'date',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                   BY DATE\r\n                </h2>\r\n                <h3>\r\n                      Order report by date\r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'date'} \r\n                        //  tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for date`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\nexport const getHourFormatter = (order: number): string | undefined =>\r\n    `${order}hr`;\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'hour',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    BY HOUR\r\n                </h2>\r\n                <h3>\r\n                      Order report by hours \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'hour'} \r\n                         tickFormatter={getHourFormatter}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for hours`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n `${MONTHS[order - 1]}`;\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'month',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsStateMonth',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                   BY MONTH\r\n                </h2>\r\n                <h3>\r\n                   Order report by month\r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'month'} \r\n                         tickFormatter={getMonthNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this months`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n         </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'year',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    By Year\r\n                </h2>\r\n                <h3>\r\n                      Order report by year \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'year'} \r\n                        //  tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this year`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                    In the last year\r\n            </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\nconst DeliveryRegionReport = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'deliveryRegion',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes && ordersDataRes.length > 0){\r\n               // @ts-ignore\r\n               const orderData = ordersDataRes.map(item => {\r\n                   return {\r\n                       ...item,\r\n                       name: item['deliveryRegion'] && Object.keys(item['deliveryRegion']).length > 0 ? item['deliveryRegion']['name'] : 'Region Name'\r\n                   }\r\n               })\r\n            // @ts-ignore\r\n            setorderData(orderData);\r\n           }\r\n           else {\r\n            setorderData([]);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderListByDeliveryRegion',orderAnalyticsVisitsState);\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                  BY DELIVERY REGION\r\n                </h2>\r\n                <h3>\r\n                      Order report by delivery region\r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                 <>\r\n                 \r\n                 <Table\r\n                 pagination={{ defaultPageSize: 5}}\r\n                            style={{\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={orderData}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                \r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                       <a href='##'>\r\n                                       <h4\r\n                                            onClick={() => {\r\n                                                // history.push(`/admin/${selectedApiValue && selectedApiValue.toLowerCase()}/${record.itemId}`)\r\n                                            }}  \r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                textTransform:'uppercase',\r\n                                                cursor: 'pointer'\r\n                                            }}>\r\n                                            {text || `Deleted`}\r\n                                        </h4>\r\n                                       </a>\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Count\"\r\n                                dataIndex=\"count\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n\r\n                 </>\r\n                     )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for date`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DeliveryRegionReport\r\n","import OrderOverviewReport from \"./OrderOverviewReport\";\r\nexport default OrderOverviewReport;","import React, { useEffect, useState } from 'react';\r\n\r\n// import components \r\nimport ThisMonthOrderReport from \"./ThisMonthOrderReport\";\r\nimport ThisWeekOrderReport from \"./ThisWeekOrderReport\";\r\nimport DateOrderReport from \"./DateOrderReport\";\r\nimport HourOrderReport from \"./HourOrderReport\";\r\nimport MonthOrderReport from \"./MonthOrderReport\";\r\nimport YearOrderReport from \"./YearOrderReport\";\r\nimport DeliveryRegionReport from \"./DeliveryRegionReport\";\r\n\r\n// import lib \r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tUserOutlined,\r\n\tCalendarOutlined,\r\n\tGoldOutlined,\r\n\tShoppingCartOutlined,\r\n\tTagOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst getTotalUserCount = async () => {\r\n\t\t\tawait handleGetTotalUserCountFetch({});\r\n\t\t}\r\n\r\n\t\tgetTotalUserCount();\r\n\t}, []);\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst getProductVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\r\n\t\t\t\tparams: 'product'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetProductVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst getCategoryVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\r\n\t\t\t\tparams: 'category'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetCategoryVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='overviewContainer'>\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<DeliveryRegionReport/>\r\n\t\t\t\t<ThisWeekOrderReport />\r\n\t\t\t\t<ThisMonthOrderReport />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<DateOrderReport />\r\n\t\t\t\t<HourOrderReport />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<MonthOrderReport />\r\n\t\t\t\t<YearOrderReport />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst ConfigOrderStatus = (props: Props) => {\r\n    return (\r\n        <div>\r\n            ConfigOrderStatus\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfigOrderStatus\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Tooltip } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: componentItem.title,\r\n        target: componentItem.target,\r\n        text: componentItem.text,\r\n        image: componentItem.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\r\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\r\n        setItemsList(updateComponentList);\r\n\r\n    }, [localComponentItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\r\n        setItemsList(updateComponentList);\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  PlusOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport ComponentItem from './ComponentItem';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  groupName: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Component Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  groupName: '',\r\n  items: [],\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  componentList?: any;\r\n  setComponentList?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  componentList,\r\n  setComponentList,\r\n}: Props) => {\r\n  const [addComponentState, handleAddComponentFetch] = useHandleFetch(\r\n    {},\r\n    'addComponent'\r\n  );\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [itemsList, setItemsList] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addComponentRes = await handleAddComponentFetch({\r\n      body: {\r\n        groupName: values.groupName,\r\n        items: itemsList,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addComponentRes && addComponentRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      setComponentList([\r\n        ...componentList,\r\n        {\r\n          id: addComponentRes['_id'] || '',\r\n          key: addComponentRes['_id'] || '',\r\n          groupName: addComponentRes['groupName'] || '',\r\n          // @ts-ignore\r\n          ...addComponentRes,\r\n        },\r\n      ]);\r\n      actions.resetForm();\r\n      setItemsList([]);\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addComponentState['isLoading']) {\r\n      const error = addComponentState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addComponentState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.groupName) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleAddComponentItem = () => {\r\n    setItemsList([\r\n      ...itemsList,\r\n      {\r\n        title: '',\r\n        target: '',\r\n        text: '',\r\n        image: [],\r\n        id: `${itemsList.length}`,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Component'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n            width={'50vw'}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name'\r\n              value={values.groupName}\r\n              name='groupName'\r\n              isError={\r\n                (touched.groupName && errors.groupName) ||\r\n                (!isSubmitting && addComponentState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.groupName && errors.groupName) ||\r\n                (!isSubmitting && addComponentState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('groupName');\r\n              }}\r\n            />\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n            <h3 className='inputFieldLabel'>Children</h3>\r\n\r\n            <div className='componentItemsContainer'>\r\n              {itemsList.map((itemComponent) => {\r\n                return (\r\n                  <ComponentItem\r\n                    componentItem={itemComponent}\r\n                    itemsList={itemsList}\r\n                    setItemsList={setItemsList}\r\n                  />\r\n                );\r\n              })}\r\n\r\n              <Button\r\n                size='small'\r\n                onClick={handleAddComponentItem}\r\n                style={{\r\n                  width: '290px',\r\n                  minHeight: '145px',\r\n                  marginTop: '0px',\r\n                  borderRadius: '8px',\r\n                }}\r\n                type='dashed'\r\n                icon={<PlusOutlined />}\r\n              >\r\n                Add Childrens\r\n              </Button>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            />\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Button, Tooltip } from 'antd';\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined, \r\n    SaveOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate, isLoadingUpdate }) => {\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: item.title,\r\n        target: item.target,\r\n        text: item.text,\r\n        image: item.image,\r\n    }); \r\n\r\n\r\n    console.log('localComponentItem',localComponentItem); \r\n    console.log('componentItem',item); \r\n\r\n\r\n\r\n    // useEffect(()=>{\r\n\r\n    //     if(item && item.image && item.image.length > 0){\r\n    //         setlocalComponentItem({\r\n    //             ...localComponentItem,\r\n    //             image: \r\n    //         })\r\n    //     }; \r\n\r\n\r\n    // },item)\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                // @ts-ignore\r\n                image: [...new Set([...localComponentItem.image, ...myImages])]\r\n            })\r\n        }\r\n        // else {\r\n        //     setlocalComponentItem({\r\n        //         ...localComponentItem,\r\n        //         image: []\r\n        //     })\r\n        // }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(item && item.image && item.image.length > 0){\r\n            setmyImages(item.image)\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = localComponentItem.image && localComponentItem.image.length > 0 && localComponentItem.image.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            image: [...newImages]\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleComponentItemUpdate = () => {\r\n        componentUpdate(item,component,localComponentItem); \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    boxShadow: \"none\"\r\n                }}\r\n                className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {localComponentItem.image &&\r\n                        // @ts-ignore\r\n                        localComponentItem.image.length > 0 && localComponentItem.image.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n                <Button\r\n                style={{\r\n                    marginTop: '15px'\r\n                }}\r\n                    icon={<SaveOutlined />}\r\n          className='btnPrimaryClassNameoutline'\r\n          onClick={() => handleComponentItemUpdate()}\r\n        >\r\n\r\n            {isLoadingUpdate ? \"Saving...\" : \"Save\"}\r\n            \r\n            </Button>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n  CloseOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport ComponentItem from './ComponentItem';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  groupName: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Component Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  groupName: '',\r\n  items: [],\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  componentList?: any;\r\n  setComponentList?: any;\r\n  updateComponentByAddingItem?: any;\r\n  componentId?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  componentList,\r\n  setComponentList,\r\n  updateComponentByAddingItem,\r\n  componentId,\r\n}: Props) => {\r\n  const [localComponentItem, setlocalComponentItem] = useState({\r\n    title: '',\r\n    target: '',\r\n    text: '',\r\n    image: [],\r\n  });\r\n\r\n  const [myImages, setmyImages] = useState([]);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n  const handleComponentItemsChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setlocalComponentItem({\r\n      ...localComponentItem,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.groupName) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (myImages.length > 0) {\r\n      const newImages = myImages.map((item) => item.id);\r\n      setlocalComponentItem({\r\n        ...localComponentItem,\r\n        image: [...newImages],\r\n      });\r\n    } else {\r\n      setlocalComponentItem({\r\n        ...localComponentItem,\r\n        image: [],\r\n      });\r\n    }\r\n  }, [myImages]);\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleAddItem = (e) => {\r\n    updateComponentByAddingItem(localComponentItem, componentId);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        style={{\r\n          top: '40px',\r\n        }}\r\n        destroyOnClose={true}\r\n        title='Add New Component Item'\r\n        visible={addNewCategoryVisible}\r\n        onOk={(e: any) => handleAddItem(e)}\r\n        onCancel={handleCancel}\r\n        okText='Add'\r\n        okButtonProps={{\r\n          htmlType: 'submit',\r\n        }}\r\n        width={'400px'}\r\n        bodyStyle={{\r\n          margin: '0',\r\n          padding: '10px',\r\n        }}\r\n      >\r\n        <Input\r\n          label='Title'\r\n          value={localComponentItem.title}\r\n          name='title'\r\n          onChange={handleComponentItemsChange}\r\n        />\r\n        <Input\r\n          label='Text'\r\n          value={localComponentItem.text}\r\n          name='text'\r\n          onChange={handleComponentItemsChange}\r\n        />\r\n\r\n        <Input\r\n          label='Target'\r\n          value={localComponentItem.target}\r\n          name='target'\r\n          onChange={handleComponentItemsChange}\r\n        />\r\n\r\n        <h3 className='inputFieldLabel-small'>Images</h3>\r\n\r\n        <div className='aboutToUploadImagesContainer'>\r\n          {myImages &&\r\n            // @ts-ignore\r\n            myImages.length > 0 &&\r\n            myImages.map((image, index) => {\r\n              return (\r\n                <div className='aboutToUploadImagesContainer__item'>\r\n                  <div className='aboutToUploadImagesContainer__item-imgContainer'>\r\n                    <img src={image.cover} alt={image.alt} />\r\n                  </div>\r\n\r\n                  <span\r\n                    onClick={() => handleImagesDelete(image.id)}\r\n                    className='aboutToUploadImagesContainer__item-remove'\r\n                  >\r\n                    <CloseOutlined />\r\n                  </span>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n          <Tooltip title={'Attach images'}>\r\n            <div\r\n              onClick={() => {\r\n                setvisibleMedia(true);\r\n              }}\r\n              className='aboutToUploadImagesContainer__uploadItem'\r\n            >\r\n              {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n              <FileImageFilled />\r\n              {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n              <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                <PlusOutlined />\r\n              </span>\r\n            </div>\r\n          </Tooltip>\r\n        </div>\r\n\r\n        <MediaLibrary\r\n          setvisible={setvisibleMedia}\r\n          visible={visibleMedia}\r\n          myImages={myImages}\r\n          setmyImages={setmyImages}\r\n          isModalOpenForImages={true}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Collapse,\r\n  Button,\r\n  Tooltip,\r\n  Upload,\r\n  Modal,\r\n  Input,\r\n  notification,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  CaretRightOutlined,\r\n  CheckCircleOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import components\r\nimport InputField from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\nimport ComponentImageUpload from './ComponentImageUpload';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewComponent from './AddNewComponent';\r\nimport ComponentListComponentItem from './ComponentListComponentItem';\r\nimport AddNewComponentItem from './AddNewComponentItem';\r\nimport { category } from '../../state/ducks';\r\nimport { truncate } from 'fs';\r\n\r\nconst { Panel } = Collapse;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Component Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nfunction getBase64(file: any) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n}\r\n\r\nconst genExtra = (updateComponentByDeleting, component, id) => (\r\n  <div\r\n    style={{\r\n      display: 'flex',\r\n    }}\r\n  >\r\n    <Tooltip placement='top' title='Edit Component'>\r\n      <a href='##'>\r\n        <EditOutlined\r\n          onClick={(event) => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            // event.stopPropagation();\r\n          }}\r\n        />\r\n      </a>\r\n    </Tooltip>\r\n\r\n    <div\r\n      style={{\r\n        marginLeft: '15px',\r\n      }}\r\n    />\r\n    <a\r\n      href='##'\r\n      style={{\r\n        color: 'rgb(241, 67, 67)',\r\n      }}\r\n    >\r\n      <Popconfirm\r\n        onConfirm={() => updateComponentByDeleting(id, component)}\r\n        title='Are you sure？'\r\n        okText='Yes'\r\n        cancelText='No'\r\n      >\r\n        <DeleteOutlined\r\n          onClick={(event) => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            event.stopPropagation();\r\n          }}\r\n        />\r\n      </Popconfirm>\r\n    </a>\r\n  </div>\r\n);\r\n\r\nconst genExtraForGroup = (\r\n  setitemVisible: any,\r\n  handleDeleteComponent: any,\r\n  id: any,\r\n  setComponentId: any\r\n) => (\r\n  <div\r\n    style={{\r\n      display: 'flex',\r\n    }}\r\n  >\r\n    <Tooltip placement='top' title='Add new item Component'>\r\n      <a href='##'>\r\n        <PlusOutlined\r\n          onClick={(event) => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            // event.stopPropagation();\r\n            setitemVisible(true);\r\n            setComponentId(id);\r\n          }}\r\n        />\r\n      </a>\r\n    </Tooltip>\r\n\r\n    <div\r\n      style={{\r\n        marginLeft: '15px',\r\n      }}\r\n    />\r\n    <Tooltip placement='top' title='Edit Component'>\r\n      <a href='##'>\r\n        <EditOutlined\r\n          onClick={(event) => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            // event.stopPropagation();\r\n          }}\r\n        />\r\n      </a>\r\n    </Tooltip>\r\n\r\n    <div\r\n      style={{\r\n        marginLeft: '15px',\r\n      }}\r\n    />\r\n    <a\r\n      href='##'\r\n      style={{\r\n        color: 'rgb(241, 67, 67)',\r\n      }}\r\n    >\r\n      <Popconfirm\r\n        onConfirm={() => handleDeleteComponent(id)}\r\n        title='Are you sure？'\r\n        okText='Yes'\r\n        cancelText='No'\r\n      >\r\n        <DeleteOutlined\r\n          onClick={(event) => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            event.stopPropagation();\r\n          }}\r\n        />\r\n      </Popconfirm>\r\n    </a>\r\n  </div>\r\n);\r\n\r\nconst Component = (props) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [groupVisible, setgroupVisible] = useState(false);\r\n  const [itemVisible, setitemVisible] = useState(false);\r\n  const [componentId, setComponentId] = useState('');\r\n\r\n  const [componentState, handleComponentListFetch] = useHandleFetch(\r\n    {},\r\n    'componentList'\r\n  );\r\n  const [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch(\r\n    {},\r\n    'deleteComponent'\r\n  );\r\n  const [updateComponentState, handleUpdateComponentFetch] = useHandleFetch(\r\n    {},\r\n    'updateComponent'\r\n  );\r\n\r\n  const [componentList, setComponentList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const setComponents = async () => {\r\n      const components = await handleComponentListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            imageValue: true,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setComponentList(components);\r\n    };\r\n    setComponents();\r\n  }, []);\r\n\r\n  console.log('componentListd', componentList);\r\n\r\n  const handleSearch = (value) => {\r\n    if (componentState.data.length > 0) {\r\n      const newComponentList = componentState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setComponentList(newComponentList);\r\n    }\r\n  };\r\n\r\n  const handleDeleteComponent = async (id) => {\r\n    const deleteComponentRes = await handleDeleteComponentFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteComponentRes && deleteComponentRes.status === 'ok') {\r\n      openSuccessNotification('Component Deleted');\r\n      const newComponentList = componentList.filter((item) => item.id !== id);\r\n      setComponentList(newComponentList);\r\n    } else {\r\n      openErrorNotification(\"Couldn't delete, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleOk = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n  const handleOkGroup = (e: any) => {\r\n    setgroupVisible(false);\r\n  };\r\n\r\n  const handleCancelGroup = (e: any) => {\r\n    setgroupVisible(false);\r\n  };\r\n\r\n  const componentUpdate = async (item, component, localComponentItem) => {\r\n    const positionInComponents = () => {\r\n      return componentList.map((item) => item.id).indexOf(component.id);\r\n    };\r\n\r\n    const positionInItemsOfComponent = () => {\r\n      return component.items.map((item) => item.id).indexOf(item.id);\r\n    };\r\n\r\n    const componentIndex = positionInComponents();\r\n\r\n    const itemIndex = positionInItemsOfComponent();\r\n\r\n    const manupulatedLocalComponentForTheReq =\r\n      localComponentItem.image.length > 0\r\n        ? {\r\n            ...localComponentItem,\r\n            image:\r\n              localComponentItem.image.length > 0\r\n                ? localComponentItem.image.map((img) => img.id)\r\n                : [],\r\n          }\r\n        : localComponentItem;\r\n\r\n    const componentItems =\r\n      component.items.length > 0\r\n        ? component.items.map((componentItem) => {\r\n            return {\r\n              ...componentItem,\r\n              image:\r\n                componentItem.image && componentItem.image.length > 0\r\n                  ? componentItem.image.map((imgItem) => imgItem['id'] || '')\r\n                  : [],\r\n            };\r\n          })\r\n        : [];\r\n\r\n    const updatedItems = [\r\n      ...component.items.slice(0, itemIndex),\r\n      localComponentItem,\r\n      ...component.items.slice(itemIndex + 1),\r\n    ];\r\n\r\n    console.log('updatedItemsTheDamnItems', updatedItems);\r\n\r\n    const manupulatedUpdatedItems = [\r\n      ...componentItems.slice(0, itemIndex),\r\n      manupulatedLocalComponentForTheReq,\r\n      ...componentItems.slice(itemIndex + 1),\r\n    ];\r\n\r\n    const manupulatedUpdatedItem = Object.assign(\r\n      {},\r\n      componentList[componentIndex],\r\n      {\r\n        ...component,\r\n        items: manupulatedUpdatedItems,\r\n      }\r\n    );\r\n\r\n    const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n      ...component,\r\n      items: updatedItems,\r\n    });\r\n\r\n    const updateComponentList = [\r\n      ...componentList.slice(0, componentIndex),\r\n      updatedItem,\r\n      ...componentList.slice(componentIndex + 1),\r\n    ];\r\n\r\n    const updateComponentRes = await handleUpdateComponentFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: component.id,\r\n        },\r\n      },\r\n      body: {\r\n        ...manupulatedUpdatedItem,\r\n        groupName: updatedItem.name,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateComponentRes && updateComponentRes.status === 'ok') {\r\n      openSuccessNotification('Component Updated');\r\n      setComponentList(updateComponentList);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  const updateComponentByDeleting = async (id, component) => {\r\n    const positionInComponents = () => {\r\n      return componentList.map((item) => item.id).indexOf(component.id);\r\n    };\r\n\r\n    const positionInItemsOfComponent = () => {\r\n      return component.items.map((item) => item.id).indexOf(id);\r\n    };\r\n\r\n    const componentIndex = positionInComponents();\r\n\r\n    const itemIndex = positionInItemsOfComponent();\r\n\r\n    const updatedItems = [\r\n      ...component.items.slice(0, itemIndex),\r\n      ...component.items.slice(itemIndex + 1),\r\n    ];\r\n\r\n    const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n      ...component,\r\n      items: updatedItems,\r\n    });\r\n\r\n    const updateComponentList = [\r\n      ...componentList.slice(0, componentIndex),\r\n      updatedItem,\r\n      ...componentList.slice(componentIndex + 1),\r\n    ];\r\n\r\n    const updateComponentRes = await handleUpdateComponentFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: component.id,\r\n        },\r\n      },\r\n      body: {\r\n        ...updatedItem,\r\n        groupName: updatedItem.name,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateComponentRes && updateComponentRes.status === 'ok') {\r\n      openSuccessNotification('Component Item deleted');\r\n      setComponentList(updateComponentList);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  const updateComponentByAddingItem = async (localComponentItem, id) => {\r\n    const positionInComponents = () => {\r\n      return componentList.map((item) => item.id).indexOf(id);\r\n    };\r\n\r\n    const componentIndex = positionInComponents();\r\n\r\n    const updatedItems = [\r\n      ...componentList[componentIndex].items,\r\n      localComponentItem,\r\n    ];\r\n\r\n    const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n      ...componentList[componentIndex],\r\n      items: updatedItems,\r\n    });\r\n\r\n    const updateComponentList = [\r\n      ...componentList.slice(0, componentIndex),\r\n      updatedItem,\r\n      ...componentList.slice(componentIndex + 1),\r\n    ];\r\n\r\n    const updateComponentRes = await handleUpdateComponentFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: id,\r\n        },\r\n      },\r\n      body: {\r\n        ...updatedItem,\r\n        groupName: updatedItem.name,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateComponentRes && updateComponentRes.status === 'ok') {\r\n      openSuccessNotification('Component Item Added');\r\n      setComponentList(updateComponentList);\r\n      setitemVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Components</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search components..'\r\n              onSearch={(value) => handleSearch(value)}\r\n            />\r\n          </div>\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setgroupVisible(true)}\r\n          >\r\n            Add New\r\n          </Button>\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'></div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {componentState.isLoading && <DataTableSkeleton />}\r\n\r\n          {componentState.done && !(componentList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '50px',\r\n              }}\r\n            >\r\n              <Empty title='No Component found' />\r\n            </div>\r\n          )}\r\n\r\n          {componentState.done && componentList.length > 0 && (\r\n            <div className='componentsItemContainer'>\r\n              {componentList.map((component) => {\r\n                console.log('mycomponent');\r\n                return (\r\n                  <div className='componentsItemContainer-item'>\r\n                    <Collapse\r\n                      accordion={false}\r\n                      bordered={false}\r\n                      expandIconPosition='left'\r\n                      expandIcon={({ isActive }) => (\r\n                        <CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n                      )}\r\n                      className='site-collapse-custom-collapse'\r\n                    >\r\n                      <Panel\r\n                        header={component.name}\r\n                        key='1'\r\n                        className='site-collapse-custom-panel'\r\n                        extra={genExtraForGroup(\r\n                          setitemVisible,\r\n                          handleDeleteComponent,\r\n                          component.id,\r\n                          setComponentId\r\n                        )}\r\n                      >\r\n                        <div className=' componentsItemContainer-white'>\r\n                          {component.items &&\r\n                            component.items.length > 0 &&\r\n                            component.items.map((item) => {\r\n                              return (\r\n                                <div className='componentsItemContainer-item-item'>\r\n                                  <Collapse\r\n                                    accordion={false}\r\n                                    bordered={false}\r\n                                    expandIconPosition='left'\r\n                                    expandIcon={({ isActive }) => (\r\n                                      <CaretRightOutlined\r\n                                        rotate={isActive ? 90 : 0}\r\n                                      />\r\n                                    )}\r\n                                    className='site-collapse-custom-collapse'\r\n                                  >\r\n                                    <Panel\r\n                                      header={item.title || ''}\r\n                                      key='1'\r\n                                      className='site-collapse-custom-panel'\r\n                                      extra={genExtra(\r\n                                        updateComponentByDeleting,\r\n                                        component,\r\n                                        item.id\r\n                                      )}\r\n                                    >\r\n                                      <ComponentListComponentItem\r\n                                        setComponentList={setComponentList}\r\n                                        componentList={componentList}\r\n                                        item={item}\r\n                                        component={component}\r\n                                        componentUpdate={componentUpdate}\r\n                                        isLoadingUpdate={\r\n                                          updateComponentState.isLoading\r\n                                        }\r\n                                      />\r\n                                    </Panel>\r\n                                  </Collapse>\r\n                                </div>\r\n                              );\r\n                            })}\r\n\r\n                          {!(component.items.length > 0) && (\r\n                            <Empty title='No item Found' />\r\n                          )}\r\n                        </div>\r\n                      </Panel>\r\n                    </Collapse>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AddNewComponent\r\n        addNewCategoryVisible={groupVisible}\r\n        setAddNewCategoryVisible={setgroupVisible}\r\n        setComponentList={setComponentList}\r\n        componentList={componentList}\r\n      />\r\n      <AddNewComponentItem\r\n        addNewCategoryVisible={itemVisible}\r\n        setAddNewCategoryVisible={setitemVisible}\r\n        setComponentList={setComponentList}\r\n        componentList={componentList}\r\n        updateComponentByAddingItem={updateComponentByAddingItem}\r\n        componentId={componentId}\r\n      />\r\n\r\n      <Modal\r\n        title='Add New Group Component'\r\n        visible={false}\r\n        onOk={handleOkGroup}\r\n        onCancel={handleCancelGroup}\r\n        footer={null}\r\n        okText='Done'\r\n      >\r\n        <InputField label='Group Component Name' />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Component;\r\n","import React, { useState } from 'react';\r\n\r\n// import third libraries\r\nimport { Upload, message, notification, Modal } from 'antd';\r\n// import { Formik } from 'formik';\r\n// import * as Yup from 'yup';\r\nimport reqwest from 'reqwest';\r\n\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\n\r\nimport {\r\n    InboxOutlined,\r\n    CheckCircleOutlined,\r\n    LoadingOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\nconst { Dragger } = Upload;\r\n\r\n\r\n// const validationSchema = Yup.object().shape({\r\n//     name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n// });\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Brand Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    themeList?: any;\r\n    setThemeList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\r\n\r\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme', 'form');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\r\n    const [fileList, setfileList] = useState([]);\r\n    const [uploading, setuploading] = useState(false);\r\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [name, setname] = useState('')\r\n    const [thumbnailFile, setThumbnailFile] = useState('')\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        setuploading(true);\r\n\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', thumbnailFile)\r\n\r\n\r\n        const addThemeRes = await handleAddthemeFetch({\r\n            body: formData,\r\n        });\r\n\r\n\r\n        setuploading(false);\r\n        // @ts-ignore\r\n        if (addThemeRes && addThemeRes.status === 'ok') {\r\n\r\n            setThemeList([...themeList, {\r\n                id: addThemeRes['_id'] || '',\r\n                key: addThemeRes['_id'] || '',\r\n                name: addThemeRes['name'] || '',\r\n                thumbnail: addThemeRes['thumbnail'] || '',\r\n                path: addThemeRes['path'] || '',\r\n                added: addThemeRes['added'] || '',\r\n                // @ts-ignore\r\n                ...addThemeRes\r\n            }]);\r\n\r\n            setfileList([]);\r\n            setuploading(false);\r\n            openSuccessNotification('Theme Uploaded!')\r\n            setAddNewCategoryVisible(false);\r\n            setname('');\r\n            setselectedThemeTypeValue('');\r\n\r\n\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification('Theme upload failed, Something went wrong');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = () => {\r\n        if (addThemeState.isLoading) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        // @ts-ignore\r\n        else setmyThumbnailImage([]);\r\n    }\r\n\r\n\r\n    const onChangeThemeType = (value) => {\r\n        setselectedThemeTypeValue(value);\r\n    }\r\n\r\n\r\n\r\n    const uploadProps = {\r\n        //  listType: 'picture',\r\n        onRemove: file => {\r\n            setfileList(filelist => {\r\n                const index = fileList.indexOf(file);\r\n                const newFileList = fileList.slice();\r\n                newFileList.splice(index, 1);\r\n                return newFileList;\r\n            })\r\n\r\n        },\r\n        beforeUpload: file => {\r\n            setfileList(filelist => {\r\n                return [...fileList, file]\r\n            })\r\n            return false;\r\n        },\r\n        fileList,\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n        setuploading(true);\r\n\r\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n        // \tbody: formData\r\n        //   });\r\n\r\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // You can use any AJAX library you like\r\n        reqwest({\r\n            url: `${config.baseURL}/admin/theme/add`,\r\n            method: 'post',\r\n            processData: false,\r\n            data: formData,\r\n            withCredentials: true,\r\n            success: () => {\r\n                setfileList([]);\r\n                setuploading(false);\r\n                openSuccessNotification('Theme Uploaded!')\r\n                setAddNewCategoryVisible(false);\r\n                setname('');\r\n                setselectedThemeTypeValue('');\r\n                setThemeList([...themeList, {\r\n\r\n                }])\r\n                // setThemeList([...themeList, {\r\n                //     id: addCategoryRes['id'] || '',\r\n                //     key: addCategoryRes['id'] || '',\r\n                //     name: addCategoryRes['name'] || '',\r\n                //     description: addCategoryRes['description'] || '',\r\n                //     // @ts-ignore\r\n                //     ...addCategoryRes\r\n                // }])\r\n            },\r\n            error: () => {\r\n                setuploading(false);\r\n                openErrorNotification('Theme Upload failed!')\r\n                message.error('upload failed.');\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    function getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    function beforeUpload(file) {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n\r\n\r\n        getBase64(file, imageUrl => {\r\n            setImageUrl(imageUrl)\r\n            setThumbnailFile(file);\r\n            setLoadingThumbnail(false)\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                title=\"Add New Theme\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={handleSubmit}\r\n                onCancel={handleCancel}\r\n                okText='Upload Theme'\r\n                okButtonProps={{\r\n                    loading: uploading,\r\n                    htmlType: \"submit\",\r\n                    disabled: getisSubmitButtonDisabled()\r\n                }}\r\n\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n\r\n                <Input\r\n                    label='Name'\r\n                    value={name}\r\n                    name='name'\r\n                    onChange={(e: any) => setname(e.target.value)}\r\n                    isError={addThemeState.error['error']['name']}\r\n\r\n                    errorString={addThemeState.error['error']['name']}\r\n                />\r\n\r\n                <div style={{\r\n                    marginTop: '20px'\r\n                }}></div>\r\n\r\n\r\n                <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    beforeUpload={beforeUpload}\r\n                    multiple={false}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n\r\n\r\n\r\n                <div style={{\r\n                    marginTop: '3px'\r\n                }}></div>\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Folder (.zip)\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Dragger\r\n                    multiple={false}\r\n                    className='upload-list-inline'\r\n                    listType='picture'\r\n                    style={{\r\n                        background: '#fff'\r\n                    }}\r\n                    {...uploadProps}\r\n                >\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\r\n                        other band files\r\n\t\t\t\t\t\t\t</p>\r\n                </Dragger>\r\n\r\n                {addThemeState.error['error']['folder'] && (\r\n                    <p style={{\r\n                        color: 'rgba(255, 0, 0, 0.507)'\r\n                    }}>{addThemeState.error['error']['folder']}</p>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n            </Modal>\r\n\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={false}\r\n                setmyThumbnailImage={setmyThumbnailImage}\r\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                myThumbnailImage={myThumbnailImage}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button, Input,Tooltip, Modal, notification, Popconfirm,Badge} from 'antd';\r\nimport { \r\n  PlusOutlined, EditOutlined, \r\n  DeleteOutlined,EditFilled,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewTheme from \"./AddNewTheme\";\r\n\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [themeList,setThemeList] = useState([]); \r\n\r\n    const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\r\n    const [activeThemeState, handleActiveThemeFetch] = useHandleFetch({}, 'activeTheme');\r\n    const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch({}, 'deletetheme');\r\n  \r\n\r\n    \r\n    useEffect(()=>{\r\n     const setThemes = async () => {\r\n       const themes = await handleThemeListFetch({}); \r\n       // @ts-ignore\r\n       setThemeList(themes); \r\n     }\r\n     setThemes(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(themeState.data.length > 0 ){\r\n      const newThemeList = themeState.data.filter(item => item.name.includes(value)); \r\n      setThemeList(newThemeList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  const handleActiveTheme = async (id) => {\r\n    const activeThemeRes = await handleActiveThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(activeThemeRes && activeThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme activated'); \r\n   \r\n  }\r\n  else {\r\n    openErrorNotification(\"Couldn't activate the theme, Something went wrong\")\r\n  }\r\n     \r\n     \r\n  }\r\n\r\n\r\n  const handleDeleteTheme = async (id) => {\r\n    const deleteThemeRes = await handleDeleteThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(deleteThemeRes && deleteThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme Deleted'); \r\n    const newThemeList =  themeList.filter(item => item.id !== id);\r\n    setThemeList(newThemeList); \r\n  }\r\n  else {\r\n  openErrorNotification(\"Couldn't delete, Something went wrong\")\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n\t\t Themes\r\n \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search themes..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {themeState.done && themeList.length > 0 && (\r\n   \r\n   <div className='categoryListContainer__bodyContainerList'>\r\n\t\t\r\n          {themeList.map(theme => {\r\n            return (\r\n              <div className='categoryListContainer__bodyContainerList-item'>\r\n              {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n               \r\n                  </Badge> */}\r\n                  <div className='categoryListContainer__bodyContainerList-item-top'>\r\n                  <img\r\n                    alt='theme img'\r\n                    src={theme.thumbnail}\r\n                  />\r\n                </div>\r\n                <div className='categoryListContainer__bodyContainerList-item-body'>\r\n                  <h3> {theme.name} </h3>\r\n     \r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Tooltip placement='top' title='Active this theme'>\r\n                    <Button\r\n                  \r\n                   size='small'\r\n                   className='btnPrimaryClassNameoutline'\r\n                   icon={<CheckOutlined />}\r\n                   onClick={() => handleActiveTheme(theme.id)}\r\n                  >\r\n                    <span style={{\r\n                      fontSize:'11px'\r\n                    }}>\r\n                    Set Active\r\n                 \r\n                    </span>\r\n                \r\n                 </Button>\r\n     \r\n     \r\n                      \r\n                    </Tooltip>\r\n     \r\n                    <Tooltip placement='top' title='Delete theme'>\r\n                    <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteTheme(theme.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <Button\r\n                        size='small'\r\n                        type='link'\r\n                        danger={true}\r\n                        icon={<DeleteOutlined />}\r\n                      >\r\n                        \r\n                        </Button>\r\n           </Popconfirm>\r\n\r\n\r\n                     \r\n     \r\n                        \r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n          })}\r\n         </div>\r\n\t\t)}\r\n\r\n\r\n        {themeState.isLoading && <DataTableSkeleton />}\r\n\r\n        {themeState.done && !(themeList.length > 0) && (\r\n        <Empty title='No Theme found'  />\r\n        )}\r\n        \r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    {themeState.done && \r\n    <AddNewTheme \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          themeList={themeState.data}\r\n          setThemeList={setThemeList}\r\n           />}\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    return (\r\n        <div>\r\n            Image\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst Invoice = (props: Props) => {\r\n\treturn <div>Invoice</div>;\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .label('Title')\r\n        .required('Site title can not be empty'),\r\n    adminEmail: Yup.string()\r\n        .label('Admin Email')\r\n        .required('Admin Email can not be empty'),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    adminName: '',\r\n    adminEmail: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateSiteSettings');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'siteSettings');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState])\r\n\r\n\r\n    // console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n\r\n            body: {\r\n                title: values.title,\r\n                adminName: values.adminName,\r\n                adminEmail: values.adminEmail,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.title || !values.adminEmail || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Site Title'\r\n                                    value={values.title}\r\n                                    name='title'\r\n                                    isError={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n\r\n                                    errorString={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('title');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Admin Name'\r\n                                    value={values.adminName}\r\n                                    name='adminName'\r\n                                    isError={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n\r\n                                    errorString={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminName');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <Input\r\n                                    label='Admin Email'\r\n                                    value={values.adminEmail}\r\n                                    name='adminEmail'\r\n                                    isError={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n\r\n                                    errorString={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminEmail');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Admin Info\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n//","import React, { useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n// import MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    invoiceTitle: Yup.string().label('Title').required('Invoice title is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    invoiceTitle: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    additionalText: \"\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [updateInfovSettingsState, handleUpdateInvoiceSettingsFetch] = useHandleFetch({}, 'updateInvoiceSettings');\r\n    const [InvoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch({}, 'invoiceSettingsDetail');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteInvoiceSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [updateInfovSettingsState])\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\r\n\r\n            body: {\r\n                invoiceTitle: values.invoiceTitle,\r\n                address: values.address,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                additionalText: values.additionalText\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.invoiceTitle || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (InvoiceSettingsState.data && Object.keys(InvoiceSettingsState.data).length > 0) {\r\n            return { ...InvoiceSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Company Name'\r\n                                    value={values.invoiceTitle}\r\n                                    name='invoiceTitle'\r\n                                    isError={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n\r\n                                    errorString={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('invoiceTitle');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Phone Number'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Additional Text'\r\n                                    value={values.additionalText}\r\n                                    name='additionalText'\r\n                                    isError={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n\r\n                                    errorString={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('additionalText');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <TextArea\r\n                                    label='Address'\r\n                                    value={values.address}\r\n                                    name='address'\r\n                                    isError={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n\r\n                                    errorString={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('address');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Admin Info\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .label('Title')\r\n        .required('Site title can not be empty'),\r\n    adminEmail: Yup.string()\r\n        .label('Admin Email')\r\n        .required('Admin Email can not be empty'),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    metaTitle: '',\r\n    metaTags: '',\r\n    metaDescription: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteSEO = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateSiteSEO');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'getSiteSEO');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState])\r\n\r\n\r\n    // console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n            body: {\r\n                metaTitle: values.metaTitle,\r\n                metaTags: values.metaTags,\r\n                metaDescription: values.metaDescription\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.metaTitle || !values.metaTags || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Meta Title'\r\n                                    value={values.metaTitle}\r\n                                    name='metaTitle'\r\n                                    isError={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaTitle'])}\r\n\r\n                                    errorString={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaTitle'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaTitle');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Meta Tags'\r\n                                    value={values.metaTags}\r\n                                    name='metaTags'\r\n                                    isError={(touched.metaTags && errors.metaTags) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaTags'])}\r\n\r\n                                    errorString={(touched.metaTags && errors.metaTags) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaTags'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaTags');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                            <TextArea\r\n                                    label='Meta Description'\r\n                                    value={values.metaDescription}\r\n                                    name='metaDescription'\r\n                                    isError={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaDescription'])}\r\n\r\n                                    errorString={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaDescription'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaDescription');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            // disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Site SEO\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteSEO;\r\n//","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    newPassword: Yup.string()\r\n    .label('New Password')\r\n    .required()\r\n    .min(6, 'New Password must have at least 6 characters'),\r\n  newPassword2: Yup.string()\r\n    .label('Confirm New password')\r\n    .required()\r\n    .min(6, 'Confirm New password must have at least 6 characters')\r\n    .oneOf(\r\n      [Yup.ref('newPassword'), null],\r\n      'Confirm new password must match to new password'\r\n    ),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    newPass: '',\r\n    password:'',\r\n    newPassword: '',\r\n    newPassword2: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst ChangeAdminPassword = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateAdminCredential');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'getAdminCredential');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState]);\r\n\r\n\r\n\r\n    console.log('siteSettingsState',siteSettingsState)\r\n\r\n    // console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n            body: {\r\n                name: values.name,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                password: values.password, \r\n                newPass: values.newPassword,\r\n                newPassRepeat: values.newPassword2,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    type='text'\r\n                                    label='Name'\r\n                                    value={values.name}\r\n                                    name='name'\r\n                                    isError={(touched.name && errors.name) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['name'])}\r\n\r\n                                    errorString={(touched.name && errors.name) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['name'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('name');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    type='text'\r\n                                    label='Phone'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={{\r\n                            width: '90%',\r\n                            paddingRight: '30px'\r\n                        }}>\r\n                                     <Input\r\n                                    type='text'\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            width: '90%',\r\n                            paddingRight: '30px'\r\n                        }}>\r\n                                    <Input\r\n                                    type='password'\r\n                                    label='Password (Enter current password to update credentials)'\r\n                                    value={values.password}\r\n                                    name='password'\r\n                                    isError={(touched.password && errors.password) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['password'])}\r\n\r\n                                    errorString={(touched.password && errors.password) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['password'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('password');\r\n                                    }}\r\n                                />\r\n                        </div>\r\n\r\n\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    type='password'\r\n                                    label='New Password'\r\n                                    value={values.newPassword}\r\n                                    name='newPassword'\r\n                                    isError={(touched.newPassword && errors.newPassword) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword'])}\r\n\r\n                                    errorString={(touched.newPassword && errors.newPassword) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('newPassword');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    type='password'\r\n                                    label='Confirm New Password'\r\n                                    value={values.newPassword2}\r\n                                    name='newPassword2'\r\n                                    isError={(touched.newPassword2 && errors.newPassword2) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword2'])}\r\n\r\n                                    errorString={(touched.newPassword2 && errors.newPassword2) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword2'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('newPassword2');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            // disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                          Update Credentials\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default ChangeAdminPassword;\r\n//","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs, Tooltip, } from 'antd';\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tCheckOutlined,\r\n\tCloseOutlined,\r\n\tLoadingOutlined,\r\n\tInfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AdminSiteInfo from \"./AdminSiteInfo\";\r\nimport SiteInfoInvoice from \"./SiteInfoInvoice\";\r\nimport SiteSeo from \"./SiteSeo\";\r\nimport ChangeAdminPassword from \"./ChangeAdminPassword\";\r\n\r\n\r\n// import config\r\nimport config from \"../../config.json\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst SiteInfo = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateSiteLogoAndIcon, handleUpdateSiteLogoAndIconFetch] = useHandleFetch({}, 'updateSiteLogoAndIcon','form');\r\n\r\n\tconst [imageUrl, setImageUrl] = useState(`${config.baseURL}/images/logo.png`);\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\r\n\t\r\n\tconst [iconimageUrl, setIconImageUrl] = useState(`${config.baseURL}/favicon.ico`);\r\n\tconst [loadingIcon, setloadingIcon] = useState(false);\r\n\r\n\r\n\r\n\t\t\r\n\tconst [appLogo, setAppLogo] = useState(`${config.baseURL}/images/logo-app.png`);\r\n\tconst [loadingAppLogo, setloadingAppLogo] = useState(false);\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('logo',file); \r\n\r\n\r\n\t\t\t\tconst res = await handleUpdateSiteLogoAndIconFetch({\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Site Logo updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update site Logo, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tfunction beforeIconUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetIconImageUrl(imageUrl)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('icon',file); \r\n\r\n\r\n\t\t\t\tconst res = await handleUpdateSiteLogoAndIconFetch({\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Site Icon updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update site icon, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetloadingIcon(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction beforeAppIconUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetAppLogo(imageUrl)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('logoApp',file); \r\n\r\n\r\n\t\t\t\tconst res = await handleUpdateSiteLogoAndIconFetch({\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('App logo updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update App logo, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetloadingAppLogo(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\r\n\tconst iconUploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingIcon ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\tconst appIconUploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingAppLogo ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='siteInfoContainer'>\r\n\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\" >\r\n\t\t\t\t\t<TabPane tab=\"Site Info\" key=\"1\">\r\n\t\t\t\t\t\t<AdminSiteInfo />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"Site logo\" key=\"2\">\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\talignItems: 'center',marginTop: '15px'\r\n\t\t\t\t\t\t}}>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '40px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'> Logo </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Update Site Logo image'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img \r\n\t\t\t\t\t\t\t\tonError={() => setImageUrl('')}\r\n\t\t\t\t\t\t\t\tsrc={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '40px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'> Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Update Icon image'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeIconUpload}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{iconimageUrl ? <img\r\n\t\t\t\t\t\t\t\t\tonError={() => setIconImageUrl('')}\r\n\t\t\t\t\t\t\t\t src={iconimageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : iconUploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '20px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'> App Logo </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Update App logo image'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeAppIconUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{appLogo ? <img \r\n\t\t\t\t\t\t\t\tonError={() => setAppLogo('')}\r\n\r\n\t\t\t\t\t\t\t\tsrc={appLogo} alt=\"avatar\" style={{ width: '100%' }} /> : appIconUploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t<TabPane tab=\"Site SEO\" key=\"3\">\r\n\t\t\t\t\t\t<SiteSeo />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t<TabPane tab=\"Invoice Information\" key=\"4\">\r\n\r\n\t\t\t\t\t\t<SiteInfoInvoice />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t<TabPane tab=\"Change Credentials\" key=\"5\">\r\n\t\t\t\t\t\t<ChangeAdminPassword />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t</Tabs>\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default SiteInfo;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  FileImageOutlined,\r\n  FileImageTwoTone,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n  setdeliveryChargeList: any;\r\n  deliveryChargeList: any;\r\n  deliveryChargeItem: any;\r\n}\r\n\r\nconst DeliveryCharge = ({\r\n  deliveryChargeItem,\r\n  setdeliveryChargeList,\r\n  deliveryChargeList,\r\n}: Props) => {\r\n  const handleDeliveryChargeChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    const updatedValue = {\r\n      ...deliveryChargeItem,\r\n      [name]: value,\r\n      id: deliveryChargeItem.id,\r\n    };\r\n\r\n    const positionInAttribute = () => {\r\n      return deliveryChargeList\r\n        .map((item) => item.id)\r\n        .indexOf(deliveryChargeItem.id);\r\n    };\r\n\r\n    const index = positionInAttribute();\r\n\r\n    const updateAttributeList = [\r\n      ...deliveryChargeList.slice(0, index),\r\n      updatedValue,\r\n      ...deliveryChargeList.slice(index + 1),\r\n    ];\r\n    setdeliveryChargeList(updateAttributeList);\r\n  };\r\n\r\n  const handleAttributeDelete = () => {\r\n    console.log('delete---deliveryChargeItem', deliveryChargeItem);\r\n    console.log('delete-----deliveryChargeList', deliveryChargeList);\r\n\r\n    const positionInAttribute = () => {\r\n      return deliveryChargeList\r\n        .map((item) => item.id)\r\n        .indexOf(deliveryChargeItem.id);\r\n    };\r\n\r\n    const index = positionInAttribute();\r\n\r\n    const updateAttributeList = [\r\n      ...deliveryChargeList.slice(0, index),\r\n      ...deliveryChargeList.slice(index + 1),\r\n    ];\r\n    setdeliveryChargeList([...updateAttributeList]);\r\n\r\n    console.log('updated-----deliveryChargeList', updateAttributeList);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: '45%',\r\n          marginRight: '10px',\r\n        }}\r\n      >\r\n        <Input\r\n          min={0}\r\n          type='number'\r\n          addonBefore='Minimum Order'\r\n          value={deliveryChargeItem.minimumOrder}\r\n          name='minimumOrder'\r\n          onChange={handleDeliveryChargeChange}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: '45%',\r\n          marginRight: '10px',\r\n        }}\r\n      >\r\n        <Input\r\n          min={0}\r\n          type='number'\r\n          addonBefore='Charge'\r\n          value={deliveryChargeItem.charge}\r\n          name='charge'\r\n          onChange={handleDeliveryChargeChange}\r\n        />\r\n      </div>\r\n      <div\r\n        onClick={() => handleAttributeDelete()}\r\n        style={{\r\n          width: '5%',\r\n          marginBottom: '15px',\r\n          fontSize: '13px',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        <CloseOutlined />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeliveryCharge;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  PlusOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\nconst { Option } = Select;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'New Region Added',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  pickUpLocation: '',\r\n  time: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  regionList?: any;\r\n  setRegionList?: any;\r\n}\r\n\r\nconst AddNewRegion = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  regionList,\r\n  setRegionList,\r\n}: Props) => {\r\n  const [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  const [deliveryChargeList, setdeliveryChargeList] = useState([\r\n    {\r\n      minimumOrder: '',\r\n      charge: '',\r\n      id: `${Math.floor(100000 + Math.random() * 900000)}`,\r\n    },\r\n  ]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // console.log('selectedCityValue', selectedCityValue)\r\n\r\n    if (deliveryChargeList.length > 0) {\r\n      const charge = {};\r\n\r\n      for (let item of deliveryChargeList) {\r\n        if (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n          charge[item['minimumOrder']] = item['charge'];\r\n        }\r\n      }\r\n\r\n      const addRegionRes = await handleRegionFetch({\r\n        body: {\r\n          name: values.name,\r\n          pickUpLocation: values.pickUpLocation,\r\n          time: values.time,\r\n          country: selectedCountryValue,\r\n          city: selectedCityValue,\r\n          charge,\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (addRegionRes && addRegionRes.status === 'ok') {\r\n        openSuccessNotification();\r\n\r\n        setRegionList([\r\n          {\r\n            id: addRegionRes['id'] || '',\r\n            key: addRegionRes['id'] || '',\r\n            name: addRegionRes['name'] || '',\r\n            // @ts-ignore\r\n            ...addRegionRes,\r\n          },\r\n          ...regionList,\r\n        ]);\r\n        setAddNewCategoryVisible(false);\r\n        actions.resetForm();\r\n      } else {\r\n        openErrorNotification();\r\n      }\r\n    } else {\r\n      const addRegionRes = await handleRegionFetch({\r\n        body: {\r\n          name: values.name,\r\n          pickUpLocation: values.pickUpLocation,\r\n          time: values.time,\r\n          country: selectedCountryValue,\r\n          city: selectedCityValue,\r\n          charge: {},\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (addRegionRes && addRegionRes.status === 'ok') {\r\n        openSuccessNotification();\r\n\r\n        setRegionList([\r\n          ...regionList,\r\n          {\r\n            id: addRegionRes['id'] || '',\r\n            key: addRegionRes['id'] || '',\r\n            name: addRegionRes['name'] || '',\r\n            // @ts-ignore\r\n            ...addRegionRes,\r\n          },\r\n        ]);\r\n        setAddNewCategoryVisible(false);\r\n        actions.resetForm();\r\n      } else {\r\n        openErrorNotification();\r\n      }\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  useEffect(() => {\r\n    if (!addRegionState['isLoading']) {\r\n      const error = addRegionState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addRegionState['isLoading'] &&\r\n      Object.keys(addRegionState.data).length > 0\r\n    ) {\r\n      if (addRegionState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addRegionState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  console.log('region----deliveryChargeList', deliveryChargeList);\r\n\r\n  const handleAddDeliveryCharge = () => {\r\n    setdeliveryChargeList([\r\n      ...deliveryChargeList,\r\n      {\r\n        minimumOrder: '',\r\n        charge: '',\r\n        id: `${Math.floor(100000 + Math.random() * 900000)}`,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n            title='Add New Region'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              // disabled: getisSubmitButtonDisabled(values, isValid)\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Name'\r\n                  value={values.name}\r\n                  name='name'\r\n                  isError={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && addRegionState.error['error']['name'])\r\n                  }\r\n                  errorString={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && addRegionState.error['error']['name'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('name');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Pick up Location'\r\n                  value={values.pickUpLocation}\r\n                  name='pickUpLocation'\r\n                  isError={\r\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\r\n                    (!isSubmitting &&\r\n                      addRegionState.error['error']['pickUpLocation'])\r\n                  }\r\n                  errorString={\r\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\r\n                    (!isSubmitting &&\r\n                      addRegionState.error['error']['pickUpLocation'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('pickUpLocation');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginRight: '10px',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Time'\r\n                value={values.time}\r\n                name='time'\r\n                isError={\r\n                  (touched.time && errors.time) ||\r\n                  (!isSubmitting && addRegionState.error['error']['time'])\r\n                }\r\n                errorString={\r\n                  (touched.time && errors.time) ||\r\n                  (!isSubmitting && addRegionState.error['error']['time'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('time');\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <h3 className='inputFieldLabel'>Country</h3>\r\n                <Select\r\n                  notFoundContent={\r\n                    <Empty\r\n                      description='No Country Found'\r\n                      image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                    />\r\n                  }\r\n                  showSearch\r\n                  style={{ width: '100%' }}\r\n                  placeholder='Select a Country'\r\n                  optionFilterProp='children'\r\n                  onChange={onChangeCountry}\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {countryListState.done &&\r\n                    countryListState.data.length > 0 &&\r\n                    countryOptions.map((option) => {\r\n                      return (\r\n                        <Option value={option.value}>{option.name}</Option>\r\n                      );\r\n                    })}\r\n                </Select>\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <h3 className='inputFieldLabel'>City</h3>\r\n                <Select\r\n                  notFoundContent={\r\n                    <Empty\r\n                      description='First Select a Country'\r\n                      image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                    />\r\n                  }\r\n                  mode='multiple'\r\n                  showSearch\r\n                  style={{ width: '100%' }}\r\n                  placeholder='Select a city'\r\n                  optionFilterProp='children'\r\n                  onChange={onChangeCity}\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {cityListState.done &&\r\n                    cityListState.data.length > 0 &&\r\n                    cityOptions.map((option) => {\r\n                      return (\r\n                        <Option value={option.value}>{option.name}</Option>\r\n                      );\r\n                    })}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '12px',\r\n              }}\r\n            ></div>\r\n            <h3 className='inputFieldLabel'>Delivery Charges</h3>\r\n\r\n            {deliveryChargeList.map((deliveryChargeItem) => {\r\n              console.log('deliveryChargeItem-region', deliveryChargeItem);\r\n              return (\r\n                <DeliveryCharge\r\n                  deliveryChargeItem={deliveryChargeItem}\r\n                  deliveryChargeList={deliveryChargeList}\r\n                  setdeliveryChargeList={setdeliveryChargeList}\r\n                />\r\n              );\r\n            })}\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '5px',\r\n              }}\r\n            ></div>\r\n            <Button\r\n              size='middle'\r\n              onClick={handleAddDeliveryCharge}\r\n              type='dashed'\r\n              icon={<PlusOutlined />}\r\n            >\r\n              Add Charge\r\n            </Button>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewRegion;\r\n","//@ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // name: Yup.string()\r\n  // \t.label('Name')\r\n  // \t.required()\r\n  // \t.min(2, 'Name must have at least 2 characters '),\r\n  // pickUpLocation: Yup.string()\r\n  // \t.label('Pick up Location')\r\n  // \t.required()\r\n  // \t.min(2, 'Pick up Location must have at least 2 characters '),\r\n  // time: Yup.string()\r\n  // \t.label('Time')\r\n  // \t.required()\r\n  // \t.min(2, 'Time must have at least 2 characters '),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Region Updated!',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  customer: any;\r\n  setvisible: any;\r\n  visible: any;\r\n  regionList?: any;\r\n  setRegionList?: any;\r\n}\r\n\r\nconst QuickEdit = ({\r\n  customer,\r\n  setvisible,\r\n  visible,\r\n  setRegionList,\r\n  regionList,\r\n}: Props) => {\r\n  const [updateRegionState, handleUpdateRegionFetch] = useHandleFetch(\r\n    {},\r\n    'updateRegion'\r\n  );\r\n\r\n  console.log('DeliveryRegion', customer);\r\n\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  const [deliveryChargeList, setdeliveryChargeList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (customer.charge && Object.keys(customer.charge).length > 0) {\r\n      const deliveryChargeListFromRegionDetail = [];\r\n      const chargeKeys = Object.keys(customer.charge);\r\n      chargeKeys.forEach((chargeKey) => {\r\n        deliveryChargeListFromRegionDetail.push({\r\n          minimumOrder: chargeKey,\r\n          charge: customer.charge[chargeKey],\r\n          id: `${Math.floor(100000 + Math.random() * 900000)}`,\r\n        });\r\n      });\r\n      setdeliveryChargeList(deliveryChargeListFromRegionDetail);\r\n    }\r\n  }, [customer]);\r\n\r\n  console.log('deliveryCharge333', customer.charge);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // console.log('selectedCityValue',selectedCityValue)\r\n    const charge = {};\r\n\r\n    if (deliveryChargeList.length > 0) {\r\n      for (let item of deliveryChargeList) {\r\n        if (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n          charge[item['minimumOrder']] = item['charge'];\r\n        }\r\n      }\r\n    }\r\n    const addRegionRes = await handleUpdateRegionFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: customer.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name,\r\n        pickUpLocation: values.pickUpLocation,\r\n        time: values.time,\r\n        country: selectedCountryValue || customer.country,\r\n        city: selectedCityValue || customer.city,\r\n        charge,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addRegionRes && addRegionRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      const positionInTag = () => {\r\n        return regionList.map((item) => item.id).indexOf(customer.id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, regionList[index], {\r\n        // @ts-check\r\n        ...addRegionRes,\r\n      });\r\n      const updateRegionList = [\r\n        ...regionList.slice(0, index),\r\n        updatedItem,\r\n        ...regionList.slice(index + 1),\r\n      ];\r\n      setRegionList(updateRegionList);\r\n      setvisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!updateRegionState['isLoading']) {\r\n      const error = updateRegionState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !updateRegionState['isLoading'] &&\r\n      Object.keys(updateRegionState.data).length > 0\r\n    ) {\r\n      if (updateRegionState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [updateRegionState]);\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleAddDeliveryCharge = () => {\r\n    setdeliveryChargeList([\r\n      ...deliveryChargeList,\r\n      {\r\n        minimumOrder: '',\r\n        charge: '',\r\n        id: `${Math.floor(100000 + Math.random() * 900000)}`,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...customer }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            title='Region Edit'\r\n            visible={visible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              // disabled: getisSubmitButtonDisabled(values, isValid)\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Name'\r\n                  value={values.name}\r\n                  name='name'\r\n                  isError={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && updateRegionState.error['error']['name'])\r\n                  }\r\n                  errorString={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && updateRegionState.error['error']['name'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('name');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Pick up Location'\r\n                  value={values.pickUpLocation}\r\n                  name='pickUpLocation'\r\n                  isError={\r\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\r\n                    (!isSubmitting &&\r\n                      updateRegionState.error['error']['pickUpLocation'])\r\n                  }\r\n                  errorString={\r\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\r\n                    (!isSubmitting &&\r\n                      updateRegionState.error['error']['pickUpLocation'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('pickUpLocation');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginRight: '10px',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Time'\r\n                value={values.time}\r\n                name='time'\r\n                isError={\r\n                  (touched.time && errors.time) ||\r\n                  (!isSubmitting && updateRegionState.error['error']['time'])\r\n                }\r\n                errorString={\r\n                  (touched.time && errors.time) ||\r\n                  (!isSubmitting && updateRegionState.error['error']['time'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('time');\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <h3 className='inputFieldLabel'>Country</h3>\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: '100%' }}\r\n                  placeholder='Select a Country'\r\n                  optionFilterProp='children'\r\n                  defaultValue={customer && customer.country}\r\n                  onChange={onChangeCountry}\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {countryListState.done &&\r\n                    countryListState.data.length > 0 &&\r\n                    countryOptions.map((option) => {\r\n                      return (\r\n                        <Option value={option.value}>{option.name}</Option>\r\n                      );\r\n                    })}\r\n                </Select>\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <h3 className='inputFieldLabel'>City</h3>\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: '100%' }}\r\n                  placeholder='Select a city'\r\n                  optionFilterProp='children'\r\n                  defaultValue={customer && customer.city}\r\n                  onChange={onChangeCity}\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {cityListState.done &&\r\n                    cityListState.data.length > 0 &&\r\n                    cityOptions.map((option) => {\r\n                      return (\r\n                        <Option value={option.value}>{option.name}</Option>\r\n                      );\r\n                    })}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '12px',\r\n              }}\r\n            ></div>\r\n            <h3 className='inputFieldLabel'>Delivery Charges</h3>\r\n\r\n            {deliveryChargeList.map((deliveryChargeItem) => {\r\n              console.log('deliveryChargeItem-region', deliveryChargeItem);\r\n              return (\r\n                <DeliveryCharge\r\n                  deliveryChargeItem={deliveryChargeItem}\r\n                  deliveryChargeList={deliveryChargeList}\r\n                  setdeliveryChargeList={setdeliveryChargeList}\r\n                />\r\n              );\r\n            })}\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '5px',\r\n              }}\r\n            ></div>\r\n            <Button\r\n              size='middle'\r\n              onClick={handleAddDeliveryCharge}\r\n              type='dashed'\r\n              icon={<PlusOutlined />}\r\n            >\r\n              Add Charge\r\n            </Button>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewRegion from \"./AddNewRegion\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Region Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setRegionList: any; \r\n  roles: any;\r\n} \r\n\r\n\r\nconst MyTable = ({data,setRegionList, roles}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch({}, 'deleteRegion');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteRegionRes = await handleDeleteRegioFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteRegionRes && deleteRegionRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Region'); \r\n\t\t\t  const newRegionList =  data.filter(item => item.id !== id);\r\n\t\t\t  setRegionList(newRegionList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n\r\n        \r\n{isAccess('postDelivery',roles) && (\r\n\t\t\t\t     <Column\r\n        \r\n             className='classnameofthecolumn'\r\n               title=\"\"\r\n               key=\"action\"\r\n               align='right'\r\n               render={(text, record : any) => (\r\n                 <Space size=\"middle\">\r\n                 \r\n                 <a href='##'>\r\n                    <Tooltip placement=\"top\" title='Edit Region'>\r\n                   <span className='iconSize' onClick={() => {\r\n                     setvisible(true)\r\n                     setactiveCategoryForEdit(record); \r\n                   }}> \r\n                   <EditOutlined />\r\n                 \r\n                   </span>\r\n                    </Tooltip>\r\n                   </a>\r\n     \r\n     \r\n        \r\n                    <Popconfirm \r\n                    \r\n                    onConfirm={() => handleDeleteRegion(record.id)}\r\n                    title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                \r\n                <span \r\n                  className='iconSize iconSize-danger'\r\n                  > \r\n                  <DeleteOutlined/>\r\n                 </span>\r\n            \r\n                </Popconfirm>\r\n     \r\n     \r\n          \r\n                 </Space>\r\n               )}\r\n             />\r\n                 )}\r\n\r\n\r\n       \r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    regionList={data}\r\n    setRegionList={setRegionList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n  roles: any; \r\n}\r\n\r\nconst CustomerList = ({roles}: Props) => {\r\n\r\n    const [regionList,setRegionList] = useState([]); \r\n\r\n    const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setRegions = async () => {\r\n       const regions = await handleRegionListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n       }); \r\n       // @ts-ignore\r\n       setRegionList(regions); \r\n     }\r\n     setRegions(); \r\n    },[])\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('regionState',regionState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(regionState.data.length > 0 ){\r\n      const newTagList = regionState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setRegionList(newTagList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Regions \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search regions..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n\r\n          {isAccess('postDelivery',roles) && (\r\n\t\t\t\t       \r\n               <Button\r\n               // type=\"primary\"\r\n               className='btnPrimaryClassNameoutline'\r\n               icon={<PlusOutlined />}\r\n               onClick={() => setAddNewCategoryVisible(true)}\r\n             >\r\n                 Add New\r\n                 \r\n                 </Button>\r\n                 )}\r\n\r\n          \r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {regionState.done && regionList.length > 0 && <MyTable \r\n        roles={roles}\r\n        setRegionList={setRegionList}\r\n        data={regionList} />}\r\n        {regionState.isLoading && <DataTableSkeleton />}\r\n\r\n        {regionState.done && !(regionList.length > 0) && (\r\n\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{regionState.done && \r\n    <AddNewRegion \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          regionList={regionState.data}\r\n          setRegionList={setRegionList}\r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  roles: state.globalState,\r\n})\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(CustomerList);\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\n\r\n// import lib \r\nimport { Select, Button, notification } from 'antd';\r\n\r\nimport {\r\n    SendOutlined,\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SendCustomSMS = (props: Props) => {\r\n    const [text, setText] = useState('');\r\n    const [recipient, setrecipient] = useState([]);\r\n\r\n\r\n    function handleChange(value) {\r\n        const recipient = `${value}`.split(',');\r\n        setrecipient(recipient)\r\n    }\r\n\r\n\r\n    const handleMsgSend = () => {\r\n\r\n    }\r\n\r\n\r\n    const getMsgSendIsDisabled = () => {\r\n        return !text || !recipient[0]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                width: '450px'\r\n            }}>\r\n                <h3 className='inputFieldLabel'>\r\n                    Recipient\r\n                </h3>\r\n\r\n                <Select\r\n                    style={{\r\n                        height: '30px',\r\n                        borderRadius: '3px',\r\n                        borderColor: '#eee !important',\r\n                        width: '100%'\r\n                    }}\r\n                    mode=\"tags\" onChange={handleChange} tokenSeparators={[',']}>\r\n                </Select>\r\n\r\n                <div style={{\r\n                    marginTop: \"15px\"\r\n                }}></div>\r\n                <TextArea\r\n                    label='Text'\r\n                    value={text}\r\n                    name='text'\r\n                    onChange={(e: any) => {\r\n                        setText(e.target.value);\r\n                    }}\r\n                />\r\n\r\n                <Button\r\n\r\n                    style={{\r\n                        marginTop: '10px'\r\n                    }}\r\n                    onClick={handleMsgSend}\r\n                    disabled={getMsgSendIsDisabled()}\r\n\r\n                    className='btnAddToPrice'\r\n                >\r\n                    Send <span style={{\r\n                        marginLeft: '10px'\r\n                    }}> <SendOutlined /></span>\r\n                </Button>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendCustomSMS\r\n","import React from 'react';\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\nimport Input from \"../../components/Field/Input\";\r\n\r\n\r\n// import lib \r\nimport { Button, notification } from 'antd';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SMSConfiguaration = (props: Props) => {\r\n    const [configureSMSStata, handleconfigureSMSFetch] = useHandleFetch({}, 'configureSMS');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleconfigureSMSFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            // validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Input\r\n                            label='Title'\r\n                            value={values.name}\r\n                            name='name'\r\n                            isError={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n\r\n                            errorString={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('name');\r\n                            }}\r\n                        />\r\n                        <TextArea\r\n                            label='Description'\r\n                            value={values.description}\r\n                            name='description'\r\n                            isError={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n\r\n                            errorString={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('description');\r\n                            }}\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n    )\r\n}\r\n\r\nexport default SMSConfiguaration\r\n","import React from 'react';\r\n\r\n\r\n// import lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n// import components \r\nimport SendCustomSMS from \"./SendCustomSMS\";\r\nimport SMSConfiguaration from \"./SMSConfiguaration\";\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Sms = (props: Props) => {\r\n    return (\r\n        <>\r\n            <div className='siteInfoContainer'>\r\n\r\n                <Tabs defaultActiveKey=\"1\" >\r\n                    <TabPane tab=\"Send custom SMS\" key=\"1\">\r\n                        <SendCustomSMS />\r\n                    </TabPane>\r\n\r\n                    <TabPane tab=\"SMS configuaration\" key=\"2\">\r\n                        <SMSConfiguaration />\r\n                    </TabPane>\r\n\r\n                </Tabs>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sms\r\n","import Sms from \"./Sms\";\r\nexport default Sms; ","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"fromEmail\": \"\",\r\n    \"fromName\": \"\",\r\n    \"host\": \"\",\r\n    \"encryption\":\"\",\r\n    \"port\":'',\r\n    \"smtpUsername\":\"\",\r\n    \"smtpPassword\": \"\"\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ConfigureSTMP = ({  }: Props) => {\r\n\r\n    const [getEmailConfigurationState, handleGetEmailConfigurationFetch] = useHandleFetch({}, 'getEmailConfiguration');\r\n    const [emailConfigurationState, handleEmailConfigurationFetch] = useHandleFetch({}, 'configureEmailSTMP');\r\n \r\n    const [isAuthenticated,setIsAuthenticated] = useState(true);\r\n    const [configurationData,setConfigurationData] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n      const getEmailConfiguration = async () => {\r\n          const res = await handleGetEmailConfigurationFetch({});\r\n          // @ts-ignore\r\n          if(res){\r\n              // @ts-ignore\r\n            setConfigurationData(res); \r\n            setIsAuthenticated(res['authentication'])\r\n          }\r\n      }; \r\n      getEmailConfiguration(); \r\n    }, [])\r\n\r\n\r\n    console.log('getEmailConfigurationState',getEmailConfigurationState)\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleEmailConfigurationFetch({\r\n            body: {\r\n                \"fromEmail\": values.fromEmail.trim(),\r\n                \"fromName\": values.fromName.trim(),\r\n                \"host\": values.host.trim(),\r\n                \"encryption\":values.encryption.trim(),\r\n                \"port\":values.port,\r\n                \"authentication\": isAuthenticated,\r\n                \"smtpUsername\":values.smtpUsername.trim(),\r\n                \"smtpPassword\": values.smtpPassword.trim()\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n           \r\n        }\r\n        else {\r\n            // openErrorNotification(\"Something went wrong, Couldn't updated STMP configuration\");\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    \r\n\tuseEffect(() => {\r\n\t\tif (!emailConfigurationState['isLoading']) {\r\n\t\t\tconst error = emailConfigurationState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!emailConfigurationState['isLoading'] &&\r\n\t\t\tObject.keys(emailConfigurationState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (emailConfigurationState['data']['status'] === 'ok') {\r\n                openSuccessNotification('STMP Configuration Updated!');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [emailConfigurationState]);\r\n\r\n\r\n\r\n    const handleAuthenticatedChange = (e) => {\r\n        setIsAuthenticated(e.target.checked);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...configurationData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                                         \t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='From Email'\r\n                                                    value={values.fromEmail}\r\n                                                    name='fromEmail'\r\n                                                    isError={(touched.fromEmail && errors.fromEmail) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\r\n\r\n                                                    errorString={(touched.fromEmail && errors.fromEmail) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('fromEmail');\r\n                                                    }}\r\n                                                     />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='From Name'\r\n                                                    value={values.fromName}\r\n                                                    name='fromName'\r\n                                                    isError={(touched.fromName && errors.fromName) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\r\n\r\n                                                    errorString={(touched.fromName && errors.fromName) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('fromName');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                      <Input\r\n                                                    label='Host'\r\n                                                    value={values.host}\r\n                                                    name='host'\r\n                                                    isError={(touched.host && errors.host) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\r\n\r\n                                                    errorString={(touched.host && errors.host) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('host');\r\n                                                    }}\r\n                                                     />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='Encryption'\r\n                                                    value={values.encryption}\r\n                                                    name='encryption'\r\n                                                    isError={(touched.encryption && errors.encryption) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\r\n\r\n                                                    errorString={(touched.encryption && errors.encryption) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('encryption');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='STMP Username'\r\n                                                    value={values.smtpUsername}\r\n                                                    name='smtpUsername'\r\n                                                    isError={(touched.smtpUsername && errors.smtpUsername) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\r\n\r\n                                                    errorString={(touched.smtpUsername && errors.smtpUsername) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('smtpUsername');\r\n                                                    }}\r\n                                                    />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='STMP Password'\r\n                                                    value={values.smtpPassword}\r\n                                                    name='smtpPassword'\r\n                                                    isError={(touched.smtpPassword && errors.smtpPassword) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\r\n\r\n                                                    errorString={(touched.smtpPassword && errors.smtpPassword) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('smtpPassword');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                  <Input\r\n                                                     type='number'\r\n                                                    label='Port'\r\n                                                    value={values.port}\r\n                                                    name='port'\r\n                                                    isError={(touched.port && errors.port) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\r\n\r\n                                                    errorString={(touched.port && errors.port) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('port');\r\n                                                    }}\r\n                                                    />\r\n                                            </div>\r\n\r\n                                        \r\n                                            <Checkbox\r\n                                            value={isAuthenticated}\r\n                                             onChange={handleAuthenticatedChange}>\r\n                                                    <span className='checkBoxFieldLabel'>\r\n                                                        Authentication\r\n                                                    </span>\r\n                                                    \r\n                                                </Checkbox>    \r\n\r\n\r\n\r\n<div style={{\r\n    marginTop:'20px'\r\n}}></div>\r\n                                      <div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>\r\n                                                    \r\n                                      <Button\r\n\r\n                                        onClick={(e: any) => handleSubmit(e)}\r\n                                        loading={emailConfigurationState.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Email Configuration\r\n                                        </Button>      \r\n                                          </div>      \r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ConfigureSTMP;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"newCustomer\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'newCustomer'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"New Customer Event Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n        footer={false}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n\r\n<div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>   \r\n                                      <Button\r\n                                        onClick={handleSubmit}\r\n                                        loading={autoEmailTemplate.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Template\r\n                                        </Button>      \r\n                                    </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n\r\n    <div style={{\r\n        display:'flex'\r\n    }}>\r\n        <div style={{\r\n            width: '70%'\r\n        }}>\r\n\r\n<Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n        \r\n<div style={{\r\n            display:'block',\r\n            marginBottom:'20px',\r\n            marginTop:'20px',\r\n        }}>   \r\n        <Button\r\n        onClick={handleSubmit}\r\n        loading={autoEmailTemplate.isLoading}\r\n        className='btnPrimaryClassNameoutline'\r\n        >\r\n        Update Template\r\n        </Button>      \r\n    </div>    \r\n\r\n\r\n        </div>\r\n        <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n\r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"orderStatus\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'orderStatus'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'70vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"Order Status Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n        footer={false}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n\r\n        \r\n                                    <div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>   \r\n                                      <Button\r\n                                        onClick={handleSubmit}\r\n                                        loading={autoEmailTemplate.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Template\r\n                                        </Button>      \r\n                                    </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n\r\n                    <div style={{\r\n                        display: 'flex',\r\n                \r\n                    }}>\r\n\r\n                        <div style={{\r\n                            width: '70%'\r\n                        }}>\r\n   <Input\r\n                            label='Subject'\r\n                            value={admin.subject}\r\n                            name='subject'\r\n                            onChange={(e:any) => {\r\n                                setadmin({\r\n                                    ...admin,\r\n                                    subject: e.target.value\r\n                                })\r\n                            }}\r\n                        />\r\n\r\n                        <h3 className='inputFieldLabel'>\r\n                            Body\r\n                        </h3>\r\n\r\n\r\n                                <CKEditor\r\n                                editor={ClassicEditor}\r\n                                data={admin.body}\r\n                                onInit={editor => {\r\n                                    // You can store the \"editor\" and use when it is needed.\r\n                                    console.log('Editor is ready to use!', editor);\r\n                                }}\r\n                                onChange={(event, editor) => {\r\n                                    const data = editor.getData();\r\n                                    setadmin({\r\n                                        ...admin,\r\n                                        body: data\r\n                                    })\r\n                                }}\r\n                                onBlur={(event, editor) => {\r\n                                    console.log('Blur.', editor);\r\n                                }}\r\n                                onFocus={(event, editor) => {\r\n                                    console.log('Focus.', editor);\r\n                                }}\r\n                                />\r\n\r\n\r\n                                    <div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>   \r\n                                      <Button\r\n                                        onClick={handleSubmit}\r\n                                        loading={autoEmailTemplate.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Template\r\n                                        </Button>      \r\n                                    </div>\r\n                        </div>\r\n\r\n                        <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                 \r\n                                    </TabPane>\r\n                                    </Tabs>\r\n\r\n                                    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"order\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'order'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"Order Event Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n        footer={false}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n\r\n<div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>   \r\n                                      <Button\r\n                                        onClick={handleSubmit}\r\n                                        loading={autoEmailTemplate.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Template\r\n                                        </Button>      \r\n                                    </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n\r\n    <div style={{\r\n        display:'flex'\r\n    }}>\r\n        <div style={{\r\n            width: '70%'\r\n        }}>\r\n\r\n<Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n        \r\n<div style={{\r\n            display:'block',\r\n            marginBottom:'20px',\r\n            marginTop:'20px',\r\n        }}>   \r\n        <Button\r\n        onClick={handleSubmit}\r\n        loading={autoEmailTemplate.isLoading}\r\n        className='btnPrimaryClassNameoutline'\r\n        >\r\n        Update Template\r\n        </Button>      \r\n    </div>    \r\n\r\n\r\n        </div>\r\n        <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled,\r\n    EditOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport NewCustomerTemplate from \"./NewCustomerTemplate\";\r\nimport OrderStatusTemplateAutoEmail from \"./OrderStatusTemplateAutoEmail\";\r\nimport OrderTemplateAutoEmail from \"./OrderTemplateAutoEmail\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ConfigureAutoEmail = ({  }: Props) => {\r\n\r\n    const [getAutoEmailConfigurationState, handleGetAutoEmailConfigurationFetch] = useHandleFetch({}, 'getAutoEmailConfiguration');\r\n    const [configureAutoEmailConfigurationState, handleAutoEmailConfigurationFetch] = useHandleFetch({}, 'configureAutoEmail');\r\n \r\n    \r\n    const [isnewCustomerAdmin,setnewCustomerAdmin] = useState(false);\r\n    const [isnewCustomerCustomer,setnewCustomerCustomer] = useState(false);\r\n    const [isorderAdmin,setorderAdmin] = useState(false);\r\n    const [isorderStatusAdmin,setorderStatusAdmin] = useState(false);\r\n    const [isorderCustomer,setorderCustomer] = useState(false);\r\n    const [isorderStatusCustomer,setIsorderStatusCustomer] = useState(false);\r\n    \r\n\r\n    const [newcustomermodal, setnewcustomermodal] = useState(false);\r\n    const [ordermodal, setordermodal] = useState(false);\r\n    const [orderStatusmodal, setorderStatusmodal] = useState(false);\r\n    const [autoEmailData,setAutoEmailData] = useState({}); \r\n\r\n\r\n    console.log('isnewCustomerAdmin',isnewCustomerAdmin); \r\n    console.log('isnewCustomerCustomer',isnewCustomerCustomer);\r\n    \r\n    \r\n    useEffect(()=>{\r\n\r\n        const getAutoEmailConfiguration = async () => {\r\n            const res = await handleGetAutoEmailConfigurationFetch({})\r\n            //@ts-ignore\r\n            if(res){\r\n                setAutoEmailData(autoEmailData); \r\n                setnewCustomerAdmin(res['newCustomer']['admin']); \r\n                setnewCustomerCustomer(res['newCustomer']['user']); \r\n                setIsorderStatusCustomer(res['orderStatus']['user']); \r\n                setorderStatusAdmin(res['orderStatus']['admin']); \r\n                setorderAdmin(res['order']['admin']); \r\n                setorderCustomer(res['order']['user']); \r\n            }\r\n        }; \r\n        getAutoEmailConfiguration();\r\n    },[]); \r\n\r\n\r\n    console.log('getAutoEmailConfigurationState',getAutoEmailConfigurationState); \r\n\r\n    const handleUpdateAutoEmail = async () => {\r\n        const updateAutoEmailRes = await handleAutoEmailConfigurationFetch({\r\n            body: {\r\n                newCustomer: {\r\n                    admin: isnewCustomerAdmin,\r\n                    user: isnewCustomerCustomer\r\n                },\r\n                order: {\r\n                    admin: isorderAdmin,\r\n                    user: isorderCustomer\r\n                },\r\n                orderStatus : {\r\n                    \"admin\": isorderStatusAdmin,\r\n                    \"user\": isorderStatusCustomer\r\n                },\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateAutoEmailRes && updateAutoEmailRes.status === 'ok') {\r\n            openSuccessNotification('Auto email Configuration Updated!');\r\n        }\r\n        else {\r\n            openErrorNotification(\"Something went wrong, Couldn't updated Auto email configuration\");\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n                                <div style={{\r\n                                    display:'flex',\r\n                                    flexDirection:'column'\r\n                                }}>\r\n                                <div style={{\r\n                                }}>\r\n                                    \r\n                                    <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\"\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                                <h3 className='checkBoxFieldLabel'>\r\n                                                New Customer\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setnewcustomermodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n                                          <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}></div>\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                   checked={isnewCustomerAdmin}\r\n                                                   defaultChecked={isnewCustomerAdmin}\r\n                                                    onChange={(e) => setnewCustomerAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                  checked={isnewCustomerCustomer}\r\n                                                  defaultChecked={isnewCustomerCustomer}\r\n                                                onChange={(e) => setnewCustomerCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                        </div>\r\n\r\n                                    <div>\r\n\r\n\r\n                                    <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\",\r\n                                                    marginTop:'30px'\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                                <h3 className='checkBoxFieldLabel'>\r\n                                                 Order\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setordermodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n\r\n\r\n                                     <div style={{\r\n                                                marginTop:\"5px\"\r\n                                            }}></div>\r\n\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px',\r\n                                                \r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                      checked={isorderAdmin}\r\n                                                      defaultChecked={isorderAdmin}\r\n                                                    onChange={(e) => setorderAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                  checked={isorderCustomer}\r\n                                                  defaultChecked={isorderCustomer}\r\n                                                onChange={(e) => setorderCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                                \r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                                <div>\r\n                                                <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\",\r\n                                                    marginTop:\"30px\"\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                           <h3 className='checkBoxFieldLabel'>\r\n                                                 Order status\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setorderStatusmodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n                                            <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}></div>\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                    checked={isorderStatusAdmin}\r\n                                                    defaultChecked={isorderStatusAdmin}\r\n                                                    onChange={(e) => setorderStatusAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                 checked={isorderStatusCustomer}\r\n                                                 defaultChecked={isorderStatusCustomer}\r\n                                                onChange={(e) => setIsorderStatusCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                                <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                              \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n</div>\r\n                                        \r\n\r\n\r\n                                        \r\n\r\n    </div>\r\n\r\n    <div style={{\r\n                                                marginTop:\"25px\"\r\n                                            }}></div>\r\n\r\n    <Button\r\n\r\n                                            onClick={(e: any) => handleUpdateAutoEmail()}\r\n                                            loading={configureAutoEmailConfigurationState.isLoading}\r\n                                            className='btnPrimaryClassNameoutline'\r\n                                            >\r\n                                            Update Auto Email Configuration\r\n                                            </Button>\r\n\r\n                                            \r\n                                            <div style={{\r\n                                                marginTop:\"5px\"\r\n                                            }}></div>\r\n\r\n        \r\n\r\n        <NewCustomerTemplate \r\n        visible={newcustomermodal}\r\n        setVisible={setnewcustomermodal}\r\n        />\r\n\r\n<OrderStatusTemplateAutoEmail \r\n        visible={orderStatusmodal}\r\n        setVisible={setorderStatusmodal}\r\n        />\r\n\r\n\r\n        <OrderTemplateAutoEmail \r\n        visible={ordermodal}\r\n        setVisible={setordermodal}\r\n        />\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default ConfigureAutoEmail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"recipient\": \"\",\r\n    \"subject\": \"\",\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ComposeCustomEmail = ({  }: Props) => {\r\n\r\n    const [sendCustomerEmailState, handleSendCustomEmailFetch] = useHandleFetch({}, 'sendCustomEmail');\r\n \r\n    const [html,sethtml] = useState('');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleSendCustomEmailFetch({\r\n            body: {\r\n                \"recipient\": values.recipient.trim(),\r\n                \"subject\": values.subject.trim(),\r\n                html : html\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            sethtml('');\r\n            actions.resetForm();\r\n            openSuccessNotification('Email Sent!');\r\n        }\r\n        else {\r\n            // openErrorNotification(\"Something went wrong, Couldn't send email\");\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!sendCustomerEmailState['isLoading']) {\r\n\t\t\tconst error = sendCustomerEmailState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!sendCustomerEmailState['isLoading'] &&\r\n\t\t\tObject.keys(sendCustomerEmailState.data).length > 0\r\n\t\t) {\r\n\t\t\t// if (sendCustomerEmailState['data']['status'] === 'ok') {\r\n            //     openSuccessNotification('Email Sent!');\r\n\t\t\t// }\r\n\t\t}\r\n\t}, [sendCustomerEmailState]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                                         \t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='To'\r\n                                                    value={values.recipient}\r\n                                                    name='recipient'\r\n                                                    isError={(touched.recipient && errors.recipient) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['recipient'])}\r\n\r\n                                                    errorString={(touched.recipient && errors.recipient) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['recipient'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('recipient');\r\n                                                    }}\r\n                                                     />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='Subject'\r\n                                                    value={values.subject}\r\n                                                    name='subject'\r\n                                                    isError={(touched.subject && errors.subject) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['subject'])}\r\n\r\n                                                    errorString={(touched.subject && errors.subject) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['subject'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('subject');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={html}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            sethtml(data);\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n    \r\n\r\n                                       <div style={{\r\n                                           marginTop:'20px'\r\n                                       }}></div>         \r\n                                          <Button\r\n\r\n                                            onClick={(e: any) => handleSubmit(e)}\r\n                                            loading={sendCustomerEmailState.isLoading}\r\n                                            className='btnPrimaryClassNameoutline'\r\n                                            >\r\n                                            Send\r\n                                            </Button>     \r\n\r\n                                            \r\n                                       <div style={{\r\n                                           marginTop:'10px'\r\n                                       }}></div>       \r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ComposeCustomEmail;\r\n","import React, { useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { Spin } from 'antd';\r\nimport moment from 'moment';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nimport { LeftOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n  id?: any;\r\n  setSelectedEmailId?: any;\r\n}\r\n\r\nconst InboxEmailDetails = ({ id, setSelectedEmailId }: Props) => {\r\n  const [getEmailDetailState, handleGetEmailListFetch] = useHandleFetch(\r\n    {},\r\n    'getEmailDetails'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getEmailConfiguration = async () => {\r\n      const res = await handleGetEmailListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: id,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n    };\r\n    getEmailConfiguration();\r\n  }, []);\r\n\r\n  console.log('getEmailDetailState', getEmailDetailState);\r\n\r\n  return (\r\n    <>\r\n      {getEmailDetailState.isLoading && (\r\n        <>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              margin: '150px 0',\r\n            }}\r\n          >\r\n            <Spin size='large' />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {getEmailDetailState.done &&\r\n        getEmailDetailState.data &&\r\n        Object.keys(getEmailDetailState.data).length > 0 && (\r\n          <>\r\n            <div className='inboxEmailDetails'>\r\n              <div\r\n                onClick={() => setSelectedEmailId('')}\r\n                className='inboxEmailDetails__backBtn'\r\n              >\r\n                <LeftOutlined />\r\n              </div>\r\n              <div className='inboxEmailDetails__header'>\r\n                <span>{getEmailDetailState['data']['subject']}</span>\r\n                <h3>{getEmailDetailState['data']['recipient']}</h3>\r\n                <h4>\r\n                  {getEmailDetailState['data']['time'] &&\r\n                    moment(getEmailDetailState['data']['time']).format(\r\n                      'MMMM Do YYYY, h:mm:ss a'\r\n                    )}\r\n                </h4>\r\n              </div>\r\n              <div className='inboxEmailDetails__body'>\r\n                {getEmailDetailState['data']['html'] &&\r\n                  ReactHtmlParser(getEmailDetailState['data']['html'])}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InboxEmailDetails;\r\n","import React, {useEffect, useState} from 'react'\r\n\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\nimport InboxEmailDetails from \"./InboxEmailDetails\";\r\nimport  {Spin} from 'antd'\r\nimport moment from 'moment'; \r\n\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Inbox = (props: Props) => {\r\n    const [getEmailListState, handleGetEmailListFetch] = useHandleFetch({}, 'getSetEmailList');\r\n    const [selectedEmailId,setSelectedEmailId] = useState(''); \r\n\r\n\r\n    useEffect(() => {\r\n      const getEmailConfiguration = async () => {\r\n          const res = await handleGetEmailListFetch({\r\n              urlOptions: {\r\n                  params: {\r\n                    limitCount: 50000\r\n                  }\r\n              }\r\n          });\r\n          // @ts-ignore\r\n      \r\n      }; \r\n      getEmailConfiguration(); \r\n    }, [])\r\n\r\n\r\n    console.log('getEmailListState',getEmailListState)\r\n\r\n    return (\r\n        <>\r\n            {getEmailListState.isLoading && (\r\n                <>\r\n\r\n\r\n        <div style={{\r\n            width: '100%',\r\n            display:'flex',\r\n            justifyContent:'center',\r\n            alignItems:'center',\r\n            margin:'150px 0'\r\n        }}>\r\n             <Spin size='large' />\r\n        </div>\r\n\r\n               \r\n                </>\r\n            )}\r\n\r\n\r\n{getEmailListState.done && getEmailListState.data && getEmailListState.data.length > 0 && (\r\n    <>\r\n    \r\n    <div className='sentEmailListContainer'>\r\n        \r\n            {!selectedEmailId && (\r\n                <>\r\n                     {getEmailListState.done && getEmailListState.data && getEmailListState.data.length > 0 && (\r\n            <>\r\n            {getEmailListState.data.map(item => {\r\n                return (\r\n                    <div \r\n                    onClick={() => setSelectedEmailId(item.id)}\r\n                    className=\"sentEmailListContainer__item\">\r\n                    <div className='sentEmailListContainer__item-info'>\r\n                        <h3>\r\n                        To: {` ${item.recipient}`}\r\n                      </h3>\r\n                      <span>\r\n                      {`${item.subject}`}\r\n                      </span>\r\n                    </div>\r\n                    \r\n                    <h4>\r\n                    {ReactHtmlParser(item.html.substring(0, 125) + '.....')}\r\n                    </h4>\r\n                    <h3>\r\n                    {item.time && moment(item.time).format('MMMM Do, h a')}\r\n                    </h3>\r\n                </div>\r\n                )\r\n            })}\r\n            </>\r\n        )}\r\n                </>\r\n            )}\r\n\r\n\r\n            {selectedEmailId && (\r\n                <>\r\n                <InboxEmailDetails \r\n                setSelectedEmailId={setSelectedEmailId}\r\n                id={selectedEmailId} />\r\n                </>\r\n            )}\r\n\r\n    </div>\r\n    </>\r\n)}\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Inbox\r\n","import React from 'react';\r\n\r\n\r\n// import lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n// import components \r\nimport ConfigureSTMP from \"./ConfigureSTMP\";\r\nimport ConfigureAutoEmail from \"./ConfigureAutoEmail\";\r\nimport ComposeCustomEmail from \"./ComposeCustomEmail\";\r\nimport Inbox from \"./Inbox\";\r\n\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n    InfoCircleOutlined,\r\n    InboxOutlined,\r\n    SettingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Sms = (props: Props) => {\r\n    return (\r\n        <>\r\n            <div className='siteInfoContainer'>\r\n\r\n                <Tabs defaultActiveKey=\"1\" >\r\n                <TabPane \r\n                    tab={\r\n                        <span>\r\n                        <InboxOutlined />\r\n                        Inbox\r\n                        </span>\r\n                    }\r\n             key=\"1\">\r\n                        <Inbox />\r\n                    </TabPane>\r\n\r\n                    <TabPane \r\n                    \r\n                    tab={\r\n                        <span>\r\n                        <PlusCircleOutlined />\r\n                        Compose Email\r\n                        </span>\r\n                    } key=\"2\">\r\n                        <ComposeCustomEmail />\r\n                    </TabPane>\r\n\r\n                    <TabPane \r\n                     tab={\r\n                        <span>\r\n                        <SettingOutlined />\r\n                        Configure STMP\r\n                        </span>\r\n                    }\r\n                    \r\n                   key=\"3\">\r\n                        <ConfigureSTMP />\r\n                    </TabPane>\r\n\r\n                    <TabPane\r\n                    \r\n                    tab={\r\n                        <span>\r\n                        <SettingOutlined />\r\n                        Configure Auto Email     \r\n                        </span>\r\n                    }\r\n                     key=\"4\">\r\n                        <ConfigureAutoEmail />\r\n                    </TabPane>\r\n\r\n                </Tabs>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sms\r\n","import React, { useEffect } from 'react';\r\n\r\n// import components\r\nimport Empty from '../../components/Empty';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport { useHistory } from 'react-router';\r\nimport {\r\n  LogoutOutlined,\r\n  BellOutlined,\r\n  OrderedListOutlined,\r\n  TwitterSquareFilled,\r\n  ShoppingCartOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nimport { Layout, Badge, Dropdown, Menu, Spin } from 'antd';\r\n\r\nconst { Header } = Layout;\r\n\r\ninterface Props {}\r\n\r\nconst NotificationList = (props: Props) => {\r\n  const history = useHistory();\r\n\r\n  const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch(\r\n    {},\r\n    'getAllNotificationPage'\r\n  );\r\n\r\n  const handleMenuClick = (e) => {\r\n    if (e.key === '3') {\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getAllNotification = async () => {\r\n      await handleGetAllNOticationFetch({\r\n        urlOptions: {\r\n          params: {\r\n            limitNumber: 5000,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getAllNotification();\r\n  }, []);\r\n\r\n  console.log('getAllNotificationState', getAllNotificationState);\r\n\r\n  const typeIcon = {\r\n    customer: <UserOutlined />,\r\n    order: <ShoppingCartOutlined />,\r\n  };\r\n\r\n  const menu = () => {\r\n    if (getAllNotificationState.isLoading)\r\n      return (\r\n        <div\r\n          style={{\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            marginTop: '100px',\r\n          }}\r\n        >\r\n          <Spin />\r\n        </div>\r\n      );\r\n\r\n    if (\r\n      getAllNotificationState.done &&\r\n      getAllNotificationState.data &&\r\n      !getAllNotificationState.data[0]\r\n    ) {\r\n      return (\r\n        <div\r\n          style={{\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            marginTop: '100px',\r\n          }}\r\n        >\r\n          <Empty title='No Notification found' />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className='notificationListItemContainer'>\r\n        {getAllNotificationState.done &&\r\n          getAllNotificationState.data[0] &&\r\n          getAllNotificationState.data.map((item, index) => {\r\n            return (\r\n              <div\r\n                onClick={() => history.push(`/admin/${item.type}/${item._id}`)}\r\n                className='notificationListItemContainer__item'\r\n              >\r\n                <span className='notificationListItemContainer__item-icon'>\r\n                  {typeIcon[item['type']]}\r\n                </span>\r\n                <div className='notificationListItemContainer__item-info'>\r\n                  <h3>{item.heading}</h3>\r\n                  <h4>{item.text}</h4>\r\n                  <h2>\r\n                    {item.added &&\r\n                      moment(item.added).format('MMMM Do YYYY, h:mm a')}\r\n                  </h2>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='notificationList'>\r\n        <h3 className='notificationList__heading'>Notification</h3>\r\n        {menu()}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotificationList;\r\n","import React, { useState } from 'react'; \r\nimport { Checkbox, Row, Col } from 'antd';\r\n\r\n\r\n\r\n\r\n\r\nconst AccessCheckbox = ({checkedList,setCheckedList,plainOptions,defaultValue=[]}) => {\r\n\r\n    const [interminate,setInterminate] = useState(true);\r\n    const [checkAll,setCheckAll] = useState(false); \r\n\r\n    const onChange = checkedList => {\r\n        setCheckedList(checkedList); \r\n        setInterminate(!!checkedList.length && checkedList.length < plainOptions.length); \r\n        setCheckAll(checkedList.length === plainOptions.length); \r\n      };\r\n      \r\n      const onCheckAllChange = e => {\r\n        setCheckedList(e.target.checked ? plainOptions : []); \r\n        setInterminate(false); \r\n        setCheckAll(e.target.checked)\r\n      };\r\n\r\n\r\n      console.log('defaultValue',defaultValue);\r\n\r\n    return (\r\n        <>\r\n        <div\r\n        style={{\r\n            borderBottom:\"1px solid #eee\",\r\n            marginBottom:'10px'\r\n        }}\r\n         className=\"site-checkbox-all-wrapper\">\r\n                <Checkbox\r\n                    style={{\r\n                        marginBottom:\"10px\"\r\n                    }}\r\n                    indeterminate={interminate}\r\n                    onChange={onCheckAllChange}\r\n                    checked={checkAll}\r\n                >\r\n                    Super Admin\r\n                </Checkbox>\r\n        </div>\r\n        <Checkbox.Group \r\n        style={{ width: '100%' }}\r\n         value={checkedList}\r\n         defaultValue={defaultValue}\r\n         onChange={onChange}>\r\n      <Row>\r\n      {plainOptions.map(accessItem => {\r\n          return (\r\n            <Col \r\n            style={{\r\n                marginBottom:\"10px\"\r\n            }}\r\n            span={8}>\r\n            <Checkbox value={accessItem}>\r\n                {accessItem}\r\n            </Checkbox>\r\n          </Col>\r\n          )\r\n      })}\r\n    </Row>\r\n  </Checkbox.Group>\r\n  </>\r\n    )\r\n}\r\n\r\nexport default AccessCheckbox; ","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst globalState = createReducer({})({\r\n  [types.SAVE_CREDENTIALS]: (state, action) => {\r\n    const credentials = action.payload;\r\n    return credentials;\r\n  },\r\n});\r\n\r\nexport default globalState; ","export const SAVE_CREDENTIALS = \"credentials/SAVE_CREDENTIALS\";\r\n","import * as types from \"./types\";\r\n\r\nexport const saveCredentials = (roles) => ({\r\n    type: types.SAVE_CREDENTIALS,\r\n    payload: roles\r\n});\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as credentialsOperations from \"./operations\";\r\n\r\nexport {\r\n    credentialsOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport AccessCheckbox from \"./AccessCheckbox\";\r\n\r\n\r\n\r\n\r\n// import state\r\nimport { glboalOperations } from \"../../state/ducks/globalState\";\r\nimport { credentialsOperations } from \"../../state/ducks/credentials\";\r\nimport { connect } from \"react-redux\";\r\nimport { isAccess } from \"../../utils\";\r\nimport { credentials } from '../../state/ducks';\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n// \tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n//     phone: Yup.string()\r\n//     .required('Please tell us your mobile number.')\r\n//     .max(13, 'Please enter a valid mobile number.'),\r\n//    password: Yup.string()\r\n//     .label('Password')\r\n//     .required()\r\n//     .min(6, 'Password must have at least 6 characters'),\r\n//   passwordConfirmation: Yup.string()\r\n//     .label('Confirm password')\r\n//     .required()\r\n//     .min(6, 'Confirm password must have at least 6 characters')\r\n//     .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Admin Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst plainOptions = [\r\n\t'getCatalogue', 'postCatalogue', \r\n    'getDelivery', 'postDelivery', \r\n    'getOrder', 'postOrder',\r\n    'getBlog', 'postBlog', \r\n    'getPage', 'postPage',\r\n    'analytics',\r\n    'accounts',\r\n    'getDealer', 'postDealer', \r\n];\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\ttagList: any;\r\n\tsetTagList: any;\r\n\tsaveRoles?:any; \r\n\troles, \r\n\tcredentials,\r\n\tsaveCredentials\r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList, saveRoles, roles, saveCredentials }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateAdminRole');\r\n\tconst [accesscheckedList,setAccessCheckedList] = useState(category.role && category.role.length ? [...category.role]: [] );\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('adminValues',values);\r\n\r\n\r\n\t\tlet roles = [...accesscheckedList]; \r\n        if(accesscheckedList.length === 14){\r\n            roles.unshift('superAdmin')\r\n\t\t}\r\n\t\t\r\n\r\n\t\tconst updateTagRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: category._id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\taccess: roles,\r\n                phone: values.phone,\r\n                password: values.password,\r\n                password2: values.passwordConfirmation,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\t\t\tsetvisible(false)\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category._id);\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log('updateTagRes',updateTagRes); \r\n\r\n\r\n\t\t\t// if(updateTagRes['role']){\r\n\t\t\t// \tif(updateTagRes['_id'] === credentials['_id']){\r\n\t\t\t// \t\tsaveRoles(updateTagRes['role'])\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes});\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tconsole.log('updateTagList',updateTagList)\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\t\t\tactions.resetForm();\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!updateTagState['isLoading']) {\r\n\t\t\tconst error = updateTagState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!updateTagState['isLoading'] &&\r\n\t\t\tObject.keys(updateTagState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (updateTagState['data']['status'] === 'ok') {\r\n\t\t\t\t// openSuccessNotification('Order Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [updateTagState]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t{console.log('errors',errors)}\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Edit Admin\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n                                Select Admin Access \r\n                            </h3>\r\n\r\n\t\t\t\t\t\t\t<AccessCheckbox \r\n\t\t\t\t\t\t\tdefaultValue={category.role}\r\n                            plainOptions={plainOptions}\r\n                            checkedList={accesscheckedList}\r\n                            setCheckedList={setAccessCheckedList}\r\n                            />\r\n\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '20px',\r\n\t\t\t\t\t\t\tmarginBottom: '20px',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tborderBottom:'1px solid #eee',\r\n\t\t\t\t\t\t\t\tmarginBottom: '15px',\r\n\t\t\t\t\t\t\t\tmarginTop: '15px',\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n                                Phone and password is required to update admin *\r\n                            </h3>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Input\r\n                                label='Phone'\r\n                                value={values.phone}\r\n                                name='phone'\r\n                                isError={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['phone'])}\r\n\r\n                                errorString={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['phone'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('phone');\r\n                                }}\r\n                            />\r\n\r\n\r\n                      \r\n                           \r\n\r\n                           <Input\r\n                                label='Password'\r\n                                value={values.password}\r\n                                name='password'\r\n                                type='password'\r\n                                isError={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['password'])}\r\n\r\n                                errorString={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['password'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('password');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Confirm Password'\r\n                                value={values.passwordConfirmation}\r\n                                name='passwordConfirmation'\r\n                                type='password'\r\n                                isError={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['password2'])}\r\n\r\n                                errorString={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['password2'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('passwordConfirmation');\r\n                                }}\r\n                            />\r\n\t\t\t\t\t\t</div>\r\n                           \r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\n\r\nconst mapDispathToProps = {\r\n    saveRoles: glboalOperations.saveRoles,\r\n    saveCredentials: credentialsOperations.saveCredentials,\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    roles: state.globalState,\r\n    credentials: state.credentials,\r\n  }); \r\n\r\n\r\n  // @ts-ignore\r\n  export default connect(mapStateToProps, mapDispathToProps)(QuickEdit);\r\n  \r\n  \r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AccessCheckbox from \"./AccessCheckbox\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    phone: Yup.string()\r\n    .required('Please tell us your mobile number.')\r\n    .max(13, 'Please enter a valid mobile number.'),\r\n   password: Yup.string()\r\n    .label('Password')\r\n    .required(),\r\n  passwordConfirmation: Yup.string()\r\n    .label('Confirm password')\r\n    .required()\r\n    .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Admin Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirmation: '',\r\n    access: [],\r\n}\r\n\r\n\r\nconst plainOptions = [\r\n    'getCatalogue', 'postCatalogue', \r\n    'getDelivery', 'postDelivery', \r\n    'getOrder', 'postOrder',\r\n    'getBlog', 'postBlog', \r\n    'getPage', 'postPage',\r\n    'analytics',\r\n    'accounts',\r\n    'getDealer', 'postDealer', \r\n];\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewAdminRoles = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'adminRoleRegister');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [accesscheckedList,setAccessCheckedList] = useState([]);\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        let roles = [...accesscheckedList]; \r\n        if(accesscheckedList.length === 14){\r\n            roles.unshift('superAdmin')\r\n        }\r\n        const addTagRes = await handleAddTagFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                email: values.email.trim(),\r\n                phone: values.phone,\r\n                password: values.password,\r\n                password2: values.passwordConfirmation,\r\n                access: roles,            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            // openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                // @ts-ignore\r\n                ...addTagRes,\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\t\tif (!addTagState['isLoading']) {\r\n\t\t\tconst error = addTagState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addTagState['isLoading'] &&\r\n\t\t\tObject.keys(addTagState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addTagState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Admin Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n    }, [addTagState]);\r\n    \r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.phone || !values.password || !values.passwordConfirmation || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Register New Admin\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Name'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Phone'\r\n                                value={values.phone}\r\n                                name='phone'\r\n                                isError={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && addTagState.error['error']['phone'])}\r\n\r\n                                errorString={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && addTagState.error['error']['phone'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('phone');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Email'\r\n                                value={values.email}\r\n                                name='email'\r\n                                isError={(touched.email && errors.email) ||\r\n                                    (!isSubmitting && addTagState.error['error']['email'])}\r\n\r\n                                errorString={(touched.email && errors.email) ||\r\n                                    (!isSubmitting && addTagState.error['error']['email'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('email');\r\n                                }}\r\n                            />\r\n                           \r\n\r\n                           <Input\r\n                                label='Password'\r\n                                value={values.password}\r\n                                name='password'\r\n                                type='password'\r\n                                isError={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password'])}\r\n\r\n                                errorString={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('password');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Confirm Password'\r\n                                value={values.passwordConfirmation}\r\n                                name='passwordConfirmation'\r\n                                type='password'\r\n                                isError={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && addTagState.error['error']['passwordConfirmation'])}\r\n\r\n                                errorString={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password2'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('passwordConfirmation');\r\n                                }}\r\n                            />\r\n\r\n                                <h3 className='inputFieldLabel'>\r\n                                    Select Admin Access \r\n                                </h3>\r\n\r\n                            <AccessCheckbox \r\n                            plainOptions={plainOptions}\r\n                            checkedList={accesscheckedList}\r\n                            setCheckedList={setAccessCheckedList}\r\n                            />\r\n                           \r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default AddNewAdminRoles;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select,Tag, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewAdmin from \"./AddNewAdmin\"\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { isAccess } from \"../../utils\";\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Admin Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList, roles }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteAdmin');\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!deleteTagState['isLoading']) {\r\n\t\t  const error = deleteTagState['error'];\r\n\t\t  if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\tif (error['error']['registerError']) {\r\n\t\t\t  // setServerErrors(error['error']['registerError']);\r\n\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t  // setServerErrors(error['error']['checkoutError']);\r\n\t\t\t} else {\r\n\t\t\t  // setServerErrors(error['error']);\r\n\t\t\t}\r\n\t\r\n\t\t\tconst errors =\r\n\t\t\t  Object.values(error['error']).length > 0\r\n\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t: [];\r\n\t\t\terrors.forEach((err, i) => {\r\n\t\t\t  if (typeof err === 'string') {\r\n\t\t\t\topenErrorNotification(err);\r\n\t\t\t  } else if (typeof err === 'object') {\r\n\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t  const errs = Object.values(err);\r\n\t\t\t\t  errs.forEach((err) => {\r\n\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t  });\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t});\r\n\t\t  }\r\n\t\t}\r\n\t\r\n\t\tif (\r\n\t\t  !deleteTagState['isLoading'] &&\r\n\t\t  Object.keys(deleteTagState.data).length > 0\r\n\t\t) {\r\n\t\t  if (deleteTagState['data']['status'] === 'ok') {\r\n\t\t\topenSuccessNotification('Admin Deleted!');\r\n\t\t\t// history.push({\r\n\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t//   state: checkoutState['data']\r\n\t\t\t// })\r\n\t\r\n\t\t\t// clearCart();\r\n\t\t\t// setIsModalShown(true);\r\n\t\t  }\r\n\t\t}\r\n\t  }, [deleteTagState]);\r\n\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\t// openSuccessNotification('Deleted Admin');\r\n\t\t\tconst newtagList = data.filter(item => item._id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t// history.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Email\"\r\n\t\t\t\t\tdataIndex=\"email\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Phone\"\r\n\t\t\t\t\tdataIndex=\"phone\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\twidth={250}\r\n\t\t\t\t\ttitle=\"Roles\"\r\n\t\t\t\t\tdataIndex=\"role\"\r\n\t\t\t\t\tkey=\"role\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={tags => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t{tags && tags.length > 0 && tags.map((tag) => (\r\n\t\t\t\t\t\t\t<Tag \r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborderRadius:\"5px\",\r\n\t\t\t\t\t\t\t\tmarginBottom: '5px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tcolor=\"blue\" key={tag}>\r\n\t\t\t\t\t\t\t{tag}\r\n\t\t\t\t\t\t\t</Tag>\r\n\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t{/* {tags && tags.length === 3 && '.......'} */}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\r\n\r\n\r\n{isAccess('superAdmin',roles) && (\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Column\r\n\r\n\t\t\t\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\t\t\t\talign='right'\r\n\t\t\t\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Edit Admin'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record._id)}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t) }\r\n\t\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { \r\n\troles?:any; \r\n}\r\n\r\nconst TagList = ({ roles }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'adminList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconsole.log('adminListState',tagState);\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tAdmins\r\n            </h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search admins..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{isAccess('superAdmin',roles) && (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t>\r\n\t\t\t\t\tAdd New\r\n\t\t\t\t</Button>\r\n\t\t\t\t\t) }\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\troles={roles}\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '150px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Admin found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewAdmin\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n\r\n\r\n  \r\n  const mapStateToProps = state => ({\r\n    roles: state.globalState,\r\n  }); \r\n\r\n\r\n  // @ts-ignore\r\n  export default connect(mapStateToProps, null)(TagList);\r\n  \r\n  \r\n  \r\n\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Admin Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n                description: values.description,\r\n            })\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Admin Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AdminEdit from \"./AdminEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'adminDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Admin Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <AdminEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Admin found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'postTagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('selectedTags', selectedTags)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Tag found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='top, hot'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n\tcategoryOptions?: any;\r\n\tsetCategoryOptions?: any;\r\n}\r\n\r\n\r\nconst Categories = ({ setcategoryIds, categoryOptions, setCategoryOptions }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'postSelectCategoryList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\t// console.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tconst checkedIds = checkedKeys.checked || [];\r\n\t\tsetcategoryIds(checkedIds);\r\n\t\tsetCategoryOptions(checkedIds);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('categoryState', categoryState);\r\n\tconsole.log('optionsCat', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\r\n\t\t\t{categoryState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{categoryState.done && !(categoryState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No category found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{categoryState.done && categoryState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='middle'\r\n\t\t\t\t\t\t\tplaceholder='cloths, grocery'\r\n\t\t\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t// marginLeft: \"-20px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{options.length > 0 && (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tcheckable\r\n\t\t\t\t\t\t\t\tcheckedKeys={categoryOptions}\r\n\t\t\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t\t\t\t\tcheckStrictly={true}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\r\n\t\t\t)}\r\n\t\t\t{/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(productIds && productIds.length > 0){\r\n            console.log('shippingRunning')\r\n            const selecttedOptions = productIds.map(item => item.name); \r\n            setselectedOptions(selecttedOptions)\r\n        }\r\n    },[productIds]); \r\n\r\n    console.log('OrderProudctItemsProductIds',productIds); \r\n\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n                {tagState.done && tagState.data && !(tagState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Found' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import libraries\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport {\r\n  openSuccessNotification,\r\n  openErrorNotification,\r\n} from '../../components/Notification';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nimport Tags from './Tags';\r\nimport Brands from './Brands';\r\nimport Categories from './Categories';\r\nimport SelectProducts from './SelectProducts';\r\nimport SelectedProductItems from './SelectedProductItems';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  url: '',\r\n  preparationTime: '',\r\n  servingSize: '',\r\n  cookingTime: '',\r\n  body: '',\r\n  bnName: '',\r\n  bnBody: '',\r\n  bnPreparationTime: '',\r\n  bnServingSize: '',\r\n  bnCookingTime: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  productList?: any;\r\n  setProductList?: any;\r\n  productDetailData?: any;\r\n}\r\n\r\nconst AddNewProduct = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  productList: bundleList,\r\n  setProductList: setBundleList,\r\n  productDetailData,\r\n}: Props) => {\r\n\r\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\r\n    {},\r\n    'updatePost'\r\n  );\r\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\r\n    {},\r\n    'postDetail'\r\n  );\r\n  const [visible, setvisible] = useState(false);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [categoryids, setcategoryIds] = useState([]);\r\n  const [tagIds, setTagIds] = useState([]);\r\n  const [brandId, setBrandId] = useState('');\r\n  const [pricing, setPricing] = useState([]);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [body, setBody] = useState('');\r\n  const [bnBody, setBnBody] = useState('');\r\n  const [productIds, setProductIds] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n  const [metaTags, setMetaTags] = useState([]);\r\n  const [bnMetaTags, setBnMetaTags] = useState([]);\r\n\r\n\r\n\r\n  const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\r\n  console.log('myPostState',productDetailState)\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      await handleProductDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: productDetailData.id,\r\n          },\r\n          params: {\r\n            imageValue: 1\r\n          }\r\n        },\r\n      });\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [productDetailData]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (productDetailState.data && Object.keys(productDetailState.data).length > 0) {\r\n\r\n      const images = productDetailState.data.image;\r\n\t\t\tlet mahImages = []; \r\n\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tmahImages = images;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n\t\t\t\tconst ixists = images.find(item => item.id === productDetailState.data.cover['id']);\r\n\t\t\t\tif(!ixists){\r\n\t\t\t\t\tmahImages = [productDetailState.data.cover, ...mahImages]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCoverImageId(productDetailState.data.cover['id']);\r\n\t\t\t}\r\n\t\r\n\t\t\t\t// @ts-ignore\r\n        setmyImages(mahImages);\r\n      \r\n      \r\n    }\r\n}, [productDetailState.data]); \r\n\r\n\r\nuseEffect(() => {\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n        if (coverImageId !== myImages[0].id) {\r\n            setCoverImageId(myImages[0].id);\r\n            handleSetImageAsThumnail(myImages[0]);\r\n        }\r\n\r\n    }\r\n\r\n}, [myImages])\r\n\r\n\r\nconsole.log('myLoadImages',myImages)\r\n\r\n\r\n  const handleDetachSingleImage = async id => {\r\n      await handleDetachImageFromItemSingleFetch({\r\n          urlOptions: {\r\n              placeHolders: {\r\n                  imageId: id,\r\n                  collection: 'post',\r\n                  itemId: productDetailData.id\r\n              }\r\n          }\r\n      });\r\n  }\r\n\r\n\r\n\r\n  const handleSetImageAsThumnail = async image => {\r\n\r\n      const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n          urlOptions: {\r\n              placeHolders: {\r\n                  imageId: image.id,\r\n                  collection: 'post',\r\n                  itemId: productDetailData.id\r\n              }\r\n          }\r\n      });\r\n\r\n\r\n      // @ts-ignore\r\n      if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n          openSuccessNotification('Set as thumbnail!')\r\n      }\r\n      else {\r\n          openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n      }\r\n\r\n  }\r\n\r\n\r\n\r\n  \r\n  const handleImagesDelete = (id) => {\r\n      // @ts-ignore\r\n      const newImages = myImages && myImages.filter(image => {\r\n          return image.id !== id;\r\n      })\r\n\r\n      setmyImages(newImages);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    if (productDetailData && productDetailData.brand) {\r\n      setBrandId(productDetailData.brand['id']);\r\n    } else {\r\n      setBrandId('');\r\n    }\r\n    if (\r\n      productDetailData &&\r\n      productDetailData.tags &&\r\n      productDetailData.tags.length > 0\r\n    ) {\r\n      // const tagIds = productDetailData.tags.map(item => item.id);\r\n      setSelectedTags(productDetailData.tags);\r\n    } else {\r\n      setSelectedTags([]);\r\n    }\r\n    if (\r\n      productDetailData &&\r\n      productDetailData.category &&\r\n      productDetailData.category.length > 0\r\n    ) {\r\n      const categoryIds = productDetailData.category;\r\n      setCategoryOptions(categoryIds);\r\n    } else {\r\n      setCategoryOptions([]);\r\n    }\r\n  }, [productDetailData]);\r\n\r\n\r\n\r\n  \r\n  useEffect(()=>{\r\n    if(\r\n        productDetailState.done && productDetailState['data'] \r\n    && Object.keys(productDetailState['data']).length > 0\r\n     && ['requiredProducts'] && productDetailState['data']['requiredProducts'].length > 0){\r\n        const productIds = productDetailState['data']['requiredProducts'].map(item => item); \r\n        setProductIds(productIds); \r\n        const productList = productDetailState['data']['requiredProducts'].map(item => {\r\n            return {\r\n                ...item,\r\n                _id: item._id,\r\n                variation: item.variation,\r\n                quantity: item.quantity,\r\n            }\r\n        }); \r\n       setProductList(productList);\r\n\r\n    }; \r\n    \r\n},[productDetailState])\r\n\r\nconsole.log('couponDetialQuickEdit',productDetailState);\r\n\r\nuseEffect(() => {\r\n\r\n    if (productIds.length > 0) {\r\n        if (productIds.length > productList.length) {\r\n            const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n            console.log('variation', variation)\r\n\r\n            setProductList([...productList, {\r\n                ...productIds[productIds.length - 1],\r\n                _id: productIds[productIds.length - 1]['id'],\r\n                variation: variation,\r\n                quantity: 1\r\n            }]);\r\n        }\r\n\r\n\r\n        else if (productIds.length < productList.length) {\r\n            console.log('productIds', productIds);\r\n            console.log('productList', productList);\r\n\r\n            const newProductList = productList.filter(item => {\r\n                let isTrue = false;\r\n                productIds.forEach(product => {\r\n                    if (product.id === item._id) {\r\n                        isTrue = true;\r\n                    }\r\n                });\r\n                return isTrue;\r\n            })\r\n            setProductList(newProductList);\r\n\r\n        }\r\n\r\n    }\r\n    else {\r\n        setProductList([]);\r\n    }\r\n    // console.log('productIds', productIds)\r\n\r\n\r\n}, [productIds])\r\n\r\n\r\n\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds =\r\n      myImages && myImages[0]\r\n        ? // @ts-ignore\r\n          myImages.map((image) => {\r\n            return image.id;\r\n          })\r\n        : [];\r\n\r\n    const products =\r\n      productList.length > 0\r\n        ? productList.map((product) => {\r\n            return {\r\n              _id: product._id,\r\n              variation: product.variation,\r\n              quantity: product.quantity,\r\n            };\r\n          })\r\n        : [];\r\n\r\n\r\n        if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n          const aboutToUpdatedImageIds = []; \r\n\r\n    \r\n          if(imagesIds && imagesIds.length > 0){\r\n            imagesIds.forEach(imageId => {\r\n              if(productDetailData && productDetailData['image']){\r\n                if(!productDetailData['image'].includes(imageId)){\r\n                  aboutToUpdatedImageIds.push(imageId)\r\n                }\r\n              }\r\n            });\r\n          }\r\n    \r\n          \r\n                if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                    await handleAttachImageToItemMultipleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                collection: 'post',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        },\r\n                        body: {\r\n                            image: aboutToUpdatedImageIds\r\n                        }\r\n                    });\r\n                }\r\n                else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                    await handleAttachImageToItemSingleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                imageId: aboutToUpdatedImageIds[0].id,\r\n                                collection: 'post',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            \r\n\r\n\r\n    const addProductRes = await handleAddProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: productDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        category: categoryOptions,\r\n        tags: tagIds,\r\n        image: imagesIds,\r\n        body: body,\r\n        requiredProducts: products,\r\n        preparationTime: values.preparationTime,\r\n        servingSize: values.servingSize,\r\n        cookingTime: values.cookingTime,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\r\n\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags:\r\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\r\n          name: values.bnName.trim(),\r\n          preparationTime: values.bnPreparationTime,\r\n          body: bnBody,\r\n          servingSize: values.bnServingSize,\r\n          cookingTime: values.bnCookingTime,\r\n        },\r\n      },\r\n    });\r\n\r\n    console.log('addProductRes', addProductRes);\r\n\r\n    // @ts-ignore\r\n    if (addProductRes && addProductRes.status === 'ok') {\r\n      openSuccessNotification('Recipe Updated');\r\n\r\n      const positionInTag = () => {\r\n        return bundleList.map((item) => item.id).indexOf(productDetailData.id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, bundleList[index], {\r\n        ...addProductRes,\r\n        id: addProductRes['id'] || '',\r\n        key: addProductRes['id'] || '',\r\n        name: values.name.trim() || '',\r\n        cover: addProductRes['cover']['cover'] || '',\r\n      });\r\n      const updateTagList = [\r\n        ...bundleList.slice(0, index),\r\n        updatedItem,\r\n        ...bundleList.slice(index + 1),\r\n      ];\r\n      setBundleList(updateTagList);\r\n\r\n      setAddNewCategoryVisible(false);\r\n\r\n      // @ts-ignore\r\n      setmyImages([]);\r\n      setCoverImageId('');\r\n      setPricing([]);\r\n      setTagIds([]);\r\n      setSelectedTags([]);\r\n      setBrandId('');\r\n      setcategoryIds([]);\r\n      setCategoryOptions([]);\r\n      actions.resetForm();\r\n    } else {\r\n      // openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addProductState['isLoading']) {\r\n      const error = addProductState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addProductState]);\r\n\r\n  \r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n    setmyImages(false);\r\n    setCoverImageId('');\r\n    setPricing([]);\r\n    setTagIds([]);\r\n    setSelectedTags([]);\r\n    setBrandId('');\r\n    setcategoryIds([]);\r\n    setCategoryOptions([]);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n      const metaTags =\r\n        productDetailData.metaTags && productDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        productDetailData.bn &&\r\n        productDetailData.bn['metaTags'] &&\r\n        productDetailData.bn['metaTags'].split(',');\r\n      setMetaTags(metaTags || []);\r\n      setBnMetaTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  console.log('postDetailState', productDetailState);\r\n  console.log('postDetailData', productDetailData);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...{\r\n          ...productDetailData,\r\n          ...(productDetailState['data'] &&\r\n            Object.keys(productDetailState['data']).length > 0 &&\r\n            productDetailState['data']['bn'] && {\r\n              bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n              bnMetaDescription:\r\n                productDetailState['data']['bn'].metaDescription,\r\n              bnName: productDetailState['data']['bn'].name,\r\n              metaUnit: productDetailState['data']['bn'].unit,\r\n              bnDescription: productDetailState['data']['bn'].description,\r\n            }),\r\n        },\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: 0,\r\n              padding: 0,\r\n            }}\r\n            width={'70vw'}\r\n            title='Edit Recipe'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <section className='addProductGridContainer'>\r\n              <div className='addProductGridContainer__left'>\r\n                <div className='addProductGridContainer__name'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Recipe Information</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        values.name && values.name.length > 2\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Name'\r\n                      placeHolder='Rafti oxy'\r\n                      value={values.name}\r\n                      name='name'\r\n                      isError={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['name'])\r\n                      }\r\n                      errorString={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['name'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('name');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Name'\r\n                      value={values.bnName}\r\n                      placeHolder={'রাফতি অক্স'}\r\n                      name='bnName'\r\n                      isError={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnName'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnName'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnName');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Preparation Time'\r\n                      value={values.preparationTime}\r\n                      placeHolder='15 min'\r\n                      name='preparationTime'\r\n                      isError={\r\n                        (touched.preparationTime && errors.preparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['preparationTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.preparationTime && errors.preparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['preparationTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('preparationTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Preparation Time'\r\n                      value={values.bnPreparationTime}\r\n                      placeHolder={'১৫ মিনিট'}\r\n                      name='bnPreparationTime'\r\n                      isError={\r\n                        (touched.bnPreparationTime &&\r\n                          errors.bnPreparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnPreparationTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnPreparationTime &&\r\n                          errors.bnPreparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnPreparationTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnPreparationTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Cooking Time'\r\n                      placeHolder={'30 min'}\r\n                      value={values.cookingTime}\r\n                      name='cookingTime'\r\n                      isError={\r\n                        (touched.cookingTime && errors.cookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['cookingTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.cookingTime && errors.cookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['cookingTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('cookingTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Cooking Time'\r\n                      placeHolder={'৩০ মিনিট'}\r\n                      value={values.bnCookingTime}\r\n                      name='bnCookingTime'\r\n                      isError={\r\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnCookingTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnCookingTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnCookingTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Serving Size'\r\n                      value={values.servingSize}\r\n                      name='servingSize'\r\n                      isError={\r\n                        (touched.servingSize && errors.servingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['servingSize'])\r\n                      }\r\n                      errorString={\r\n                        (touched.servingSize && errors.servingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['servingSize'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('servingSize');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Serving Size'\r\n                      value={values.bnServingSize}\r\n                      name='bnServingSize'\r\n                      isError={\r\n                        (touched.bnServingSize && errors.bnServingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnServingSize'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnServingSize && errors.bnServingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnServingSize'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnServingSize');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='URL'\r\n                      value={values.url}\r\n                      name='url'\r\n                      isError={\r\n                        (touched.url && errors.url) ||\r\n                        (!isSubmitting && addProductState.error['error']['url'])\r\n                      }\r\n                      errorString={\r\n                        (touched.url && errors.url) ||\r\n                        (!isSubmitting && addProductState.error['error']['url'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('url');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={body}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBody(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>BN Body</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={bnBody}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBnBody(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '15px',\r\n                      }}\r\n                    ></div>\r\n                    {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__price'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Products</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        pricing && pricing.length > 0\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <h3 className='inputFieldLabel'>Products</h3>\r\n                    <SelectProducts\r\n                      setProductIds={setProductIds}\r\n                      productIds={productIds}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>Selcted Products</h3>\r\n\r\n                    <SelectedProductItems\r\n                      productList={productList}\r\n                      setProductList={setProductList}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n          \r\n\r\n                <div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n        Image\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n\r\n<div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {productDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {productDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                  </div>\r\n\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Meta Data</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Meta title'\r\n                      value={values.metaTitle}\r\n                      placeHolder={'category...'}\r\n                      name='metaTitle'\r\n                      isError={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Meta title'\r\n                      value={values.bnMetaTitle}\r\n                      placeHolder={'ক্যাটাগড়ি...'}\r\n                      name='bnMetaTitle'\r\n                      isError={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='Meta description'\r\n                      value={values.metaDescription}\r\n                      placeholder={'meta...'}\r\n                      name='metaDescription'\r\n                      isError={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='BN Meta Description'\r\n                      value={values.bnMetaDescription}\r\n                      placeholder={'এইয় মেট...'}\r\n                      name='bnMetaDescription'\r\n                      isError={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      Meta Tags (grocery,fashion)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setMetaTags}\r\n                      tags={metaTags}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setBnMetaTags}\r\n                      tags={bnMetaTags}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='addProductGridContainer__right'>\r\n                <div className='addProductGridContainer__category'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Recipe Categories</h3>\r\n\r\n                      <Tooltip\r\n                        color='red'\r\n                        visible={\r\n                          addProductState.error['error']['category'] &&\r\n                          !(categoryids.length > 0)\r\n                        }\r\n                        placement='left'\r\n                        title={'Select at least one category'}\r\n                      >\r\n                        <div\r\n                          className={\r\n                            !(categoryids.length > 0) &&\r\n                            !addProductState.error['error']['category']\r\n                              ? 'checkicon'\r\n                              : addProductState.error['error']['category']\r\n                              ? 'checkicon-error'\r\n                              : 'checkicon-active'\r\n                          }\r\n                        >\r\n                          <CheckCircleOutlined />\r\n                        </div>\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Categories\r\n                        setCategoryOptions={setCategoryOptions}\r\n                        categoryOptions={categoryOptions}\r\n                        setcategoryIds={setcategoryIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__tag'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Recipe Tags</h3>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Tags\r\n                        setSelectedTags={setSelectedTags}\r\n                        selectedTags={selectedTags}\r\n                        setTagIds={setTagIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisible}\r\n            visible={visible}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            setmyThumbnailImage={setmyThumbnailImage}\r\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n            isModalOpenForImages={isModalOpenForImages}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*/ //\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import libraries\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport {\r\n  openSuccessNotification,\r\n  openErrorNotification,\r\n} from '../../components/Notification';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nimport Tags from './Tags';\r\nimport Brands from './Brands';\r\nimport Categories from './Categories';\r\nimport SelectProducts from './SelectProducts';\r\nimport SelectedProductItems from './SelectedProductItems';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  url: '',\r\n  preparationTime: '',\r\n  servingSize: '',\r\n  cookingTime: '',\r\n  body: '',\r\n  bnName: '',\r\n  bnBody: '',\r\n  bnPreparationTime: '',\r\n  bnServingSize: '',\r\n  bnCookingTime: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  productList?: any;\r\n  setProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  productList: bundleList,\r\n  setProductList: setBundleList,\r\n}: Props) => {\r\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\r\n    {},\r\n    'addPost'\r\n  );\r\n  const [visible, setvisible] = useState(false);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [categoryids, setcategoryIds] = useState([]);\r\n  const [tagIds, setTagIds] = useState([]);\r\n  const [brandId, setBrandId] = useState('');\r\n  const [pricing, setPricing] = useState([]);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [date, setDateFeild] = useState('');\r\n  const [time, setTimeFeild] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [bnBody, setBnBody] = useState('');\r\n  const [productIds, setProductIds] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n  const [bnDescription, setBNDescription] = useState('এই পণ্য...');\r\n  const [metaTags, setMetaTags] = useState([]);\r\n  const [bnMetaTags, setBnMetaTags] = useState([]);\r\n\r\n  const [price, setPrice] = useState({\r\n    regular: null,\r\n    offer: null,\r\n  });\r\n\r\n  const makeEmptyCategoryOptions = (setEmpty) => {\r\n    setEmpty([]);\r\n  };\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds = myImages\r\n      ? myImages.map((image) => {\r\n          return image.id;\r\n        })\r\n      : [];\r\n\r\n    const products =\r\n      productList.length > 0\r\n        ? productList.map((product) => {\r\n            return {\r\n              _id: product._id,\r\n              variation: product.variation,\r\n              quantity: product.quantity,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    const addProductRes = await handleAddProductFetch({\r\n      body: {\r\n        name: values.name.trim(),\r\n        category: categoryids,\r\n        tags: tagIds,\r\n        brand: [brandId],\r\n        image: imagesIds,\r\n        body: body,\r\n        requiredProducts: products,\r\n        preparationTime: values.preparationTime,\r\n        servingSize: values.servingSize,\r\n        cookingTime: values.cookingTime,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnMetaTags.join(','),\r\n          name: values.bnName.trim(),\r\n          preparationTime: values.bnPreparationTime,\r\n          body: values.bnBody,\r\n          servingSize: values.bnServingSize,\r\n          cookingTime: values.bnCookingTime,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addProductRes && addProductRes.status === 'ok') {\r\n      openSuccessNotification('Recipe Created');\r\n      \r\n      setBundleList([\r\n        {\r\n          // @ts-ignore\r\n          ...addProductRes,\r\n          id: addProductRes['_id'] || '',\r\n          key: addProductRes['_id'] || '',\r\n          // name: addProductRes['name'] || '',\r\n          // cover: addProductRes['cover'] || '',\r\n        },\r\n        ...bundleList,\r\n      ]);\r\n\r\n\r\n      // @ts-ignore\r\n      setmyImages([]);\r\n      setCoverImageId('');\r\n      setPricing([]);\r\n      setTagIds([]);\r\n      setSelectedTags([]);\r\n      setBrandId('');\r\n      setcategoryIds([]);\r\n      setCategoryOptions([]);\r\n      actions.resetForm();\r\n\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      // openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addProductState['isLoading']) {\r\n      const error = addProductState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addProductState]);\r\n\r\n  useEffect(() => {\r\n    if (productIds.length > 0) {\r\n      if (productIds.length > productList.length) {\r\n        const variation =\r\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\r\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n        console.log('variation', variation);\r\n\r\n        setProductList([\r\n          ...productList,\r\n          {\r\n            ...productIds[productIds.length - 1],\r\n            _id: productIds[productIds.length - 1]['id'],\r\n            variation: variation,\r\n            quantity: 1,\r\n          },\r\n        ]);\r\n      } else if (productIds.length < productList.length) {\r\n        console.log('productIds', productIds);\r\n        console.log('productList', productList);\r\n\r\n        const newProductList = productList.filter((item) => {\r\n          let isTrue = false;\r\n          productIds.forEach((product) => {\r\n            if (product.id === item._id) {\r\n              isTrue = true;\r\n            }\r\n          });\r\n          return isTrue;\r\n        });\r\n        setProductList(newProductList);\r\n      }\r\n    } else {\r\n      setProductList([]);\r\n    }\r\n    // console.log('productIds', productIds)\r\n  }, [productIds]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !(pricing.length > 0) || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleDeleteFromSelectedImage = () => {};\r\n\r\n  const handleThumbnailImageDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myThumbnailImage &&\r\n      myThumbnailImage.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    if (newImages.length > 0) {\r\n      setmyThumbnailImage(newImages);\r\n    } else setmyThumbnailImage(false);\r\n  };\r\n\r\n  const handleAddPricing = (priceItem) => {\r\n    setPricing([\r\n      {\r\n        ...priceItem,\r\n        id: pricing.length,\r\n      },\r\n      ...pricing,\r\n    ]);\r\n    message.info('Product Pricing Added');\r\n  };\r\n\r\n  const handleDeletePricing = (id) => {\r\n    const newPricing = pricing.filter((item) => item.id !== id);\r\n    setPricing(newPricing);\r\n    message.info('Product Pricing Deleted');\r\n  };\r\n\r\n  const isCategoryInValid = () => {\r\n    if (\r\n      addProductState.error['error']['category'] &&\r\n      !categoryids &&\r\n      categoryids.length\r\n    ) {\r\n      return true;\r\n    } else if (categoryids && categoryids.length > 0) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (date, dateString) => {\r\n    setDateFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: 0,\r\n              padding: 0,\r\n            }}\r\n            width={'70vw'}\r\n            title='Add New Recipe'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <section className='addProductGridContainer'>\r\n              <div className='addProductGridContainer__left'>\r\n                <div className='addProductGridContainer__name'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Recipe Information</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        values.name && values.name.length > 2\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Name'\r\n                      placeHolder='Rafti oxy'\r\n                      value={values.name}\r\n                      name='name'\r\n                      isError={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['name'])\r\n                      }\r\n                      errorString={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['name'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('name');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Name'\r\n                      value={values.bnName}\r\n                      placeHolder={'রাফতি অক্স'}\r\n                      name='bnName'\r\n                      isError={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnName'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnName'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnName');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Preparation Time'\r\n                      value={values.preparationTime}\r\n                      placeHolder='15 min'\r\n                      name='preparationTime'\r\n                      isError={\r\n                        (touched.preparationTime && errors.preparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['preparationTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.preparationTime && errors.preparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['preparationTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('preparationTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Preparation Time'\r\n                      value={values.bnPreparationTime}\r\n                      placeHolder={'১৫ মিনিট'}\r\n                      name='bnPreparationTime'\r\n                      isError={\r\n                        (touched.bnPreparationTime &&\r\n                          errors.bnPreparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnPreparationTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnPreparationTime &&\r\n                          errors.bnPreparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnPreparationTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnPreparationTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Cooking Time'\r\n                      placeHolder={'30 min'}\r\n                      value={values.cookingTime}\r\n                      name='cookingTime'\r\n                      isError={\r\n                        (touched.cookingTime && errors.cookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['cookingTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.cookingTime && errors.cookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['cookingTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('cookingTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Cooking Time'\r\n                      placeHolder={'৩০ মিনিট'}\r\n                      value={values.bnCookingTime}\r\n                      name='bnCookingTime'\r\n                      isError={\r\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnCookingTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnCookingTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnCookingTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Serving Size'\r\n                      value={values.servingSize}\r\n                      name='servingSize'\r\n                      isError={\r\n                        (touched.servingSize && errors.servingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['servingSize'])\r\n                      }\r\n                      errorString={\r\n                        (touched.servingSize && errors.servingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['servingSize'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('servingSize');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Serving Size'\r\n                      value={values.bnServingSize}\r\n                      name='bnServingSize'\r\n                      isError={\r\n                        (touched.bnServingSize && errors.bnServingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnServingSize'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnServingSize && errors.bnServingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnServingSize'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnServingSize');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='URL'\r\n                      value={values.url}\r\n                      name='url'\r\n                      isError={\r\n                        (touched.url && errors.url) ||\r\n                        (!isSubmitting && addProductState.error['error']['url'])\r\n                      }\r\n                      errorString={\r\n                        (touched.url && errors.url) ||\r\n                        (!isSubmitting && addProductState.error['error']['url'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('url');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={body}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBody(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>BN Body</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={bnBody}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBnBody(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '15px',\r\n                      }}\r\n                    ></div>\r\n                    {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__price'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Products</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        pricing && pricing.length > 0\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <h3 className='inputFieldLabel'>Products</h3>\r\n                    <SelectProducts\r\n                      setProductIds={setProductIds}\r\n                      productIds={productIds}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>Selcted Products</h3>\r\n\r\n                    <SelectedProductItems\r\n                      productList={productList}\r\n                      setProductList={setProductList}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Image</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <div className='aboutToUploadImagesContainer'>\r\n                      {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 &&\r\n                        myImages.map((image, index) => {\r\n                          return (\r\n                            <div className='aboutToUploadImagesContainer__item'>\r\n                              <div\r\n                                className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                onClick={() => setCoverImageId(image.id)}\r\n                              >\r\n                                <img src={image.cover} alt={image.alt} />\r\n                              </div>\r\n\r\n                              <span\r\n                                onClick={() => handleImagesDelete(image.id)}\r\n                                className='aboutToUploadImagesContainer__item-remove'\r\n                              >\r\n                                <CloseOutlined />\r\n                              </span>\r\n\r\n                              {coverImageId === image.id ? (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                  <CheckOutlined />\r\n                                </span>\r\n                              ) : (\r\n                                !coverImageId &&\r\n                                index === 0 && (\r\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                  </span>\r\n                                )\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        })}\r\n\r\n                      <Tooltip title={'Attach images'}>\r\n                        <div\r\n                          onClick={() => {\r\n                            setvisible(true);\r\n                            setisModalOpenForImages(true);\r\n                            setisModalOpenForThumbnail(false);\r\n                          }}\r\n                          className='aboutToUploadImagesContainer__uploadItem'\r\n                        >\r\n                          {/* <FileAddOutlined />\r\n                                                        <FileImageTwoTone />\r\n                                                        <FileImageOutlined /> */}\r\n                          <FileImageFilled />\r\n                          {/* <h5>\r\n                                                                        Select From Library\r\n                                                                <     /h5> */}\r\n                          <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                            <PlusOutlined />\r\n                          </span>\r\n                        </div>\r\n                      </Tooltip>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Meta Data</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Meta title'\r\n                      value={values.metaTitle}\r\n                      placeHolder={'category...'}\r\n                      name='metaTitle'\r\n                      isError={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Meta title'\r\n                      value={values.bnMetaTitle}\r\n                      placeHolder={'ক্যাটাগড়ি...'}\r\n                      name='bnMetaTitle'\r\n                      isError={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='Meta description'\r\n                      value={values.metaDescription}\r\n                      placeholder={'meta...'}\r\n                      name='metaDescription'\r\n                      isError={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='BN Meta Description'\r\n                      value={values.bnMetaDescription}\r\n                      placeholder={'এইয় মেট...'}\r\n                      name='bnMetaDescription'\r\n                      isError={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      Meta Tags (grocery,fashion)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setMetaTags}\r\n                      tags={metaTags}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setBnMetaTags}\r\n                      tags={bnMetaTags}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='addProductGridContainer__right'>\r\n                <div className='addProductGridContainer__category'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Recipe Categories</h3>\r\n\r\n                      <Tooltip\r\n                        color='red'\r\n                        visible={\r\n                          addProductState.error['error']['category'] &&\r\n                          !(categoryids.length > 0)\r\n                        }\r\n                        placement='left'\r\n                        title={'Select at least one category'}\r\n                      >\r\n                        <div\r\n                          className={\r\n                            !(categoryids.length > 0) &&\r\n                            !addProductState.error['error']['category']\r\n                              ? 'checkicon'\r\n                              : addProductState.error['error']['category']\r\n                              ? 'checkicon-error'\r\n                              : 'checkicon-active'\r\n                          }\r\n                        >\r\n                          <CheckCircleOutlined />\r\n                        </div>\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Categories\r\n                        setCategoryOptions={setCategoryOptions}\r\n                        categoryOptions={categoryOptions}\r\n                        setcategoryIds={setcategoryIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__tag'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Recipe Tags</h3>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Tags\r\n                        setSelectedTags={setSelectedTags}\r\n                        selectedTags={selectedTags}\r\n                        setTagIds={setTagIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisible}\r\n            visible={visible}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            setmyThumbnailImage={setmyThumbnailImage}\r\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n            isModalOpenForImages={isModalOpenForImages}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*/ //\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment';\r\n\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleQuickEdit from \"./PostQuickEdit\"\r\nimport AddNewProductBundle from \"./AddNewPost\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Recipe Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deletePost');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Recipe');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/posts/${record.id}`)\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/posts/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n\r\n\r\n                <Column\r\n                    title=\"Preparation Time\"\r\n                    dataIndex=\"preparationTime\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Cooking Time\"\r\n                    dataIndex=\"cookingTime\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                \r\n                <Column\r\n                    title=\"People\"\r\n                    dataIndex=\"servingSize\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n\r\n            \r\n    \r\n                 <Column\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Edit recipe'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <ProductBundleQuickEdit\r\n\r\n                 productList={data}\r\n                 setProductList={setTagList}\r\n                setAddNewCategoryVisible={setvisible}\r\n                addNewCategoryVisible={visible}\r\n                productDetailData={activeCategoryForEdit}\r\n                 />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'postList');\r\n\r\n\r\n\r\n    console.log('postListData',tagState);\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({\r\n                urlOptions:{\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t  sortItem: 'added',\r\n\t\t\t\t\t  sortOrderValue: '-1'\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n            });\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                        Recipes\r\n                       </h2>\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search recipes..\"\r\n                            onSearch={value => handleSearch(value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Recipe found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewProductBundle\r\n                productList={tagList}\r\n                setProductList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TagList;\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import libraries\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport {\r\n  openSuccessNotification,\r\n  openErrorNotification,\r\n} from '../../components/Notification';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nimport Tags from './Tags';\r\nimport Brands from './Brands';\r\nimport Categories from './Categories';\r\nimport SelectProducts from './SelectProducts';\r\nimport SelectedProductItems from './SelectedProductItems';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  url: '',\r\n  preparationTime: '',\r\n  servingSize: '',\r\n  cookingTime: '',\r\n  body: '',\r\n  bnName: '',\r\n  bnBody: '',\r\n  bnPreparationTime: '',\r\n  bnServingSize: '',\r\n  bnCookingTime: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  productDetailData?: any;\r\n  setPostDetailData?:any;\r\n}\r\n\r\nconst AddNewProduct = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  productDetailData,\r\n  setPostDetailData\r\n}: Props) => {\r\n\r\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\r\n    {},\r\n    'updatePost'\r\n  );\r\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\r\n    {},\r\n    'postDetail'\r\n  );\r\n  const [visible, setvisible] = useState(false);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [categoryids, setcategoryIds] = useState([]);\r\n  const [tagIds, setTagIds] = useState([]);\r\n  const [brandId, setBrandId] = useState('');\r\n  const [pricing, setPricing] = useState([]);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [body, setBody] = useState('');\r\n  const [bnBody, setBnBody] = useState('');\r\n  const [productIds, setProductIds] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n  const [metaTags, setMetaTags] = useState([]);\r\n  const [bnMetaTags, setBnMetaTags] = useState([]);\r\n\r\n\r\n\r\n  const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\r\n  console.log('myPostState',productDetailState)\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      await handleProductDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: productDetailData.id,\r\n          },\r\n          params: {\r\n            imageValue: 1\r\n          }\r\n        },\r\n      });\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [productDetailData]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (productDetailState.data && Object.keys(productDetailState.data).length > 0) {\r\n\r\n\r\n      const images = productDetailState.data.image;\r\n\t\t\tlet mahImages = []; \r\n\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tmahImages = images;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n\t\t\t\tconst ixists = images.find(item => item.id === productDetailState.data.cover['id']);\r\n\t\t\t\tif(!ixists){\r\n\t\t\t\t\tmahImages = [productDetailState.data.cover, ...mahImages]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCoverImageId(productDetailState.data.cover['id']);\r\n\t\t\t}\r\n\t\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages(mahImages);\r\n        \r\n    \r\n    }\r\n}, [productDetailState.data]); \r\n\r\n\r\nuseEffect(() => {\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n        if (coverImageId !== myImages[0].id) {\r\n            setCoverImageId(myImages[0].id);\r\n            handleSetImageAsThumnail(myImages[0]);\r\n        }\r\n\r\n    }\r\n\r\n}, [myImages])\r\n\r\n\r\nconsole.log('myLoadImages',myImages)\r\n\r\n\r\n  const handleDetachSingleImage = async id => {\r\n      await handleDetachImageFromItemSingleFetch({\r\n          urlOptions: {\r\n              placeHolders: {\r\n                  imageId: id,\r\n                  collection: 'post',\r\n                  itemId: productDetailData.id\r\n              }\r\n          }\r\n      });\r\n  }\r\n\r\n\r\n\r\n  const handleSetImageAsThumnail = async image => {\r\n\r\n      const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n          urlOptions: {\r\n              placeHolders: {\r\n                  imageId: image.id,\r\n                  collection: 'post',\r\n                  itemId: productDetailData.id\r\n              }\r\n          }\r\n      });\r\n\r\n\r\n      // @ts-ignore\r\n      if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n          openSuccessNotification('Set as thumbnail!')\r\n      }\r\n      else {\r\n          openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n      }\r\n\r\n  }\r\n\r\n\r\n\r\n  \r\n  const handleImagesDelete = (id) => {\r\n      // @ts-ignore\r\n      const newImages = myImages && myImages.filter(image => {\r\n          return image.id !== id;\r\n      })\r\n\r\n      setmyImages(newImages);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    if (productDetailData && productDetailData.brand) {\r\n      setBrandId(productDetailData.brand['id']);\r\n    } else {\r\n      setBrandId('');\r\n    }\r\n    if (\r\n      productDetailData &&\r\n      productDetailData.tags &&\r\n      productDetailData.tags.length > 0\r\n    ) {\r\n      // const tagIds = productDetailData.tags.map(item => item.id);\r\n      setSelectedTags(productDetailData.tags);\r\n    } else {\r\n      setSelectedTags([]);\r\n    }\r\n    if (\r\n      productDetailData &&\r\n      productDetailData.category &&\r\n      productDetailData.category.length > 0\r\n    ) {\r\n        console.log('postEditCategory2',productDetailData.category)\r\n      const categoryIds = productDetailData.category;\r\n      setCategoryOptions(categoryIds);\r\n    } else {\r\n      setCategoryOptions([]);\r\n    }\r\n  }, [productDetailData]);\r\n\r\n\r\n\r\n  \r\n  useEffect(()=>{\r\n    if(\r\n        productDetailState.done && productDetailState['data'] \r\n    && Object.keys(productDetailState['data']).length > 0\r\n     && ['requiredProducts'] && productDetailState['data']['requiredProducts'].length > 0){\r\n        const productIds = productDetailState['data']['requiredProducts'].map(item => item); \r\n        setProductIds(productIds); \r\n        const productList = productDetailState['data']['requiredProducts'].map(item => {\r\n            return {\r\n                ...item,\r\n                _id: item._id,\r\n                variation: item.variation,\r\n                quantity: item.quantity,\r\n            }\r\n        }); \r\n       setProductList(productList);\r\n\r\n    }; \r\n    \r\n},[productDetailState])\r\n\r\nconsole.log('couponDetialQuickEdit',productDetailState);\r\n\r\nuseEffect(() => {\r\n\r\n    if (productIds.length > 0) {\r\n        if (productIds.length > productList.length) {\r\n            const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n            console.log('variation', variation)\r\n\r\n            setProductList([...productList, {\r\n                ...productIds[productIds.length - 1],\r\n                _id: productIds[productIds.length - 1]['id'],\r\n                variation: variation,\r\n                quantity: 1\r\n            }]);\r\n        }\r\n\r\n\r\n        else if (productIds.length < productList.length) {\r\n            console.log('productIds', productIds);\r\n            console.log('productList', productList);\r\n\r\n            const newProductList = productList.filter(item => {\r\n                let isTrue = false;\r\n                productIds.forEach(product => {\r\n                    if (product.id === item._id) {\r\n                        isTrue = true;\r\n                    }\r\n                });\r\n                return isTrue;\r\n            })\r\n            setProductList(newProductList);\r\n\r\n        }\r\n\r\n    }\r\n    else {\r\n        setProductList([]);\r\n    }\r\n    // console.log('productIds', productIds)\r\n\r\n\r\n}, [productIds])\r\n\r\n\r\n\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds =\r\n      myImages && myImages[0]\r\n        ? // @ts-ignore\r\n          myImages.map((image) => {\r\n            return image.id;\r\n          })\r\n        : [];\r\n\r\n    const products =\r\n      productList.length > 0\r\n        ? productList.map((product) => {\r\n            return {\r\n              _id: product._id,\r\n              variation: product.variation,\r\n              quantity: product.quantity,\r\n            };\r\n          })\r\n        : [];\r\n\r\n\r\n        if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n          const aboutToUpdatedImageIds = []; \r\n\r\n    \r\n          if(imagesIds && imagesIds.length > 0){\r\n            imagesIds.forEach(imageId => {\r\n              if(productDetailData && productDetailData['image']){\r\n                if(!productDetailData['image'].includes(imageId)){\r\n                  aboutToUpdatedImageIds.push(imageId)\r\n                }\r\n              }\r\n            });\r\n          }\r\n    \r\n          \r\n                if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                    await handleAttachImageToItemMultipleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                collection: 'post',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        },\r\n                        body: {\r\n                            image: aboutToUpdatedImageIds\r\n                        }\r\n                    });\r\n                }\r\n                else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                    await handleAttachImageToItemSingleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                imageId: aboutToUpdatedImageIds[0].id,\r\n                                collection: 'post',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            \r\n\r\n\r\n    const addProductRes = await handleAddProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: productDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        category: categoryOptions,\r\n        tags: tagIds,\r\n        image: imagesIds,\r\n        body: body,\r\n        requiredProducts: products,\r\n        preparationTime: values.preparationTime,\r\n        servingSize: values.servingSize,\r\n        cookingTime: values.cookingTime,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\r\n\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags:\r\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\r\n          name: values.bnName.trim(),\r\n          preparationTime: values.bnPreparationTime,\r\n          body: bnBody,\r\n          servingSize: values.bnServingSize,\r\n          cookingTime: values.bnCookingTime,\r\n        },\r\n      },\r\n    });\r\n\r\n    console.log('addProductRes', addProductRes);\r\n\r\n    // @ts-ignore\r\n    if (addProductRes && addProductRes.status === 'ok') {\r\n      openSuccessNotification('Recipe Updated');\r\n\r\n      setPostDetailData({\r\n        ...addProductRes,\r\n        id: addProductRes['id'] || '',\r\n        key: addProductRes['id'] || '',\r\n        name: values.name.trim() || '',\r\n        cover: addProductRes['cover']['cover'] || '',\r\n      })\r\n   \r\n      setAddNewCategoryVisible(false);\r\n\r\n      // @ts-ignore\r\n      setmyImages([]);\r\n      setCoverImageId('');\r\n      setPricing([]);\r\n      setTagIds([]);\r\n      setSelectedTags([]);\r\n      setBrandId('');\r\n      setcategoryIds([]);\r\n      setCategoryOptions([]);\r\n      actions.resetForm();\r\n    } else {\r\n      // openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addProductState['isLoading']) {\r\n      const error = addProductState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addProductState]);\r\n\r\n  \r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n    setmyImages(false);\r\n    setCoverImageId('');\r\n    setPricing([]);\r\n    setTagIds([]);\r\n    setSelectedTags([]);\r\n    setBrandId('');\r\n    setcategoryIds([]);\r\n    setCategoryOptions([]);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n      const metaTags =\r\n        productDetailData.metaTags && productDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        productDetailData.bn &&\r\n        productDetailData.bn['metaTags'] &&\r\n        productDetailData.bn['metaTags'].split(',');\r\n      setMetaTags(metaTags || []);\r\n      setBnMetaTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  console.log('postDetailState', productDetailState);\r\n  console.log('postDetailData', productDetailData);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...{\r\n          ...productDetailData,\r\n          ...(productDetailState['data'] &&\r\n            Object.keys(productDetailState['data']).length > 0 &&\r\n            productDetailState['data']['bn'] && {\r\n              bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n              bnMetaDescription:\r\n                productDetailState['data']['bn'].metaDescription,\r\n              bnName: productDetailState['data']['bn'].name,\r\n              metaUnit: productDetailState['data']['bn'].unit,\r\n              bnDescription: productDetailState['data']['bn'].description,\r\n            }),\r\n        },\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: 0,\r\n              padding: 0,\r\n            }}\r\n            width={'70vw'}\r\n            title='Edit Recipe'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <section className='addProductGridContainer'>\r\n              <div className='addProductGridContainer__left'>\r\n                <div className='addProductGridContainer__name'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Recipe Information</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        values.name && values.name.length > 2\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Name'\r\n                      placeHolder='Rafti oxy'\r\n                      value={values.name}\r\n                      name='name'\r\n                      isError={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['name'])\r\n                      }\r\n                      errorString={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['name'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('name');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Name'\r\n                      value={values.bnName}\r\n                      placeHolder={'রাফতি অক্স'}\r\n                      name='bnName'\r\n                      isError={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnName'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnName'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnName');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Preparation Time'\r\n                      value={values.preparationTime}\r\n                      placeHolder='15 min'\r\n                      name='preparationTime'\r\n                      isError={\r\n                        (touched.preparationTime && errors.preparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['preparationTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.preparationTime && errors.preparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['preparationTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('preparationTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Preparation Time'\r\n                      value={values.bnPreparationTime}\r\n                      placeHolder={'১৫ মিনিট'}\r\n                      name='bnPreparationTime'\r\n                      isError={\r\n                        (touched.bnPreparationTime &&\r\n                          errors.bnPreparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnPreparationTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnPreparationTime &&\r\n                          errors.bnPreparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnPreparationTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnPreparationTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Cooking Time'\r\n                      placeHolder={'30 min'}\r\n                      value={values.cookingTime}\r\n                      name='cookingTime'\r\n                      isError={\r\n                        (touched.cookingTime && errors.cookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['cookingTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.cookingTime && errors.cookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['cookingTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('cookingTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Cooking Time'\r\n                      placeHolder={'৩০ মিনিট'}\r\n                      value={values.bnCookingTime}\r\n                      name='bnCookingTime'\r\n                      isError={\r\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnCookingTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnCookingTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnCookingTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Serving Size'\r\n                      value={values.servingSize}\r\n                      name='servingSize'\r\n                      isError={\r\n                        (touched.servingSize && errors.servingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['servingSize'])\r\n                      }\r\n                      errorString={\r\n                        (touched.servingSize && errors.servingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['servingSize'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('servingSize');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Serving Size'\r\n                      value={values.bnServingSize}\r\n                      name='bnServingSize'\r\n                      isError={\r\n                        (touched.bnServingSize && errors.bnServingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnServingSize'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnServingSize && errors.bnServingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnServingSize'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnServingSize');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='URL'\r\n                      value={values.url}\r\n                      name='url'\r\n                      isError={\r\n                        (touched.url && errors.url) ||\r\n                        (!isSubmitting && addProductState.error['error']['url'])\r\n                      }\r\n                      errorString={\r\n                        (touched.url && errors.url) ||\r\n                        (!isSubmitting && addProductState.error['error']['url'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('url');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={body}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBody(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>BN Body</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={bnBody}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBnBody(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '15px',\r\n                      }}\r\n                    ></div>\r\n                    {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__price'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Products</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        pricing && pricing.length > 0\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <h3 className='inputFieldLabel'>Products</h3>\r\n                    <SelectProducts\r\n                      setProductIds={setProductIds}\r\n                      productIds={productIds}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>Selcted Products</h3>\r\n\r\n                    <SelectedProductItems\r\n                      productList={productList}\r\n                      setProductList={setProductList}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n          \r\n\r\n                <div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n        Image\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n\r\n<div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {productDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {productDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                  </div>\r\n\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Meta Data</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Meta title'\r\n                      value={values.metaTitle}\r\n                      placeHolder={'category...'}\r\n                      name='metaTitle'\r\n                      isError={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Meta title'\r\n                      value={values.bnMetaTitle}\r\n                      placeHolder={'ক্যাটাগড়ি...'}\r\n                      name='bnMetaTitle'\r\n                      isError={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='Meta description'\r\n                      value={values.metaDescription}\r\n                      placeholder={'meta...'}\r\n                      name='metaDescription'\r\n                      isError={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='BN Meta Description'\r\n                      value={values.bnMetaDescription}\r\n                      placeholder={'এইয় মেট...'}\r\n                      name='bnMetaDescription'\r\n                      isError={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      Meta Tags (grocery,fashion)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setMetaTags}\r\n                      tags={metaTags}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setBnMetaTags}\r\n                      tags={bnMetaTags}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='addProductGridContainer__right'>\r\n                <div className='addProductGridContainer__category'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Recipe Categories</h3>\r\n\r\n                      <Tooltip\r\n                        color='red'\r\n                        visible={\r\n                          addProductState.error['error']['category'] &&\r\n                          !(categoryids.length > 0)\r\n                        }\r\n                        placement='left'\r\n                        title={'Select at least one category'}\r\n                      >\r\n                        <div\r\n                          className={\r\n                            !(categoryids.length > 0) &&\r\n                            !addProductState.error['error']['category']\r\n                              ? 'checkicon'\r\n                              : addProductState.error['error']['category']\r\n                              ? 'checkicon-error'\r\n                              : 'checkicon-active'\r\n                          }\r\n                        >\r\n                          <CheckCircleOutlined />\r\n                        </div>\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Categories\r\n                        setCategoryOptions={setCategoryOptions}\r\n                        categoryOptions={categoryOptions}\r\n                        setcategoryIds={setcategoryIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__tag'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Recipe Tags</h3>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Tags\r\n                        setSelectedTags={setSelectedTags}\r\n                        selectedTags={selectedTags}\r\n                        setTagIds={setTagIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisible}\r\n            visible={visible}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            setmyThumbnailImage={setmyThumbnailImage}\r\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n            isModalOpenForImages={isModalOpenForImages}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*/ //\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n// import moment\r\nimport Moment from \"react-moment\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleEdit from \"./PostEdit\";\r\nimport CouponProducts from \"../coupon/CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'postDetail');\r\n    const [postDetailData,setPostDetailData] = useState({}); \r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const getProductDetail = async () => {\r\n            const res = await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        categoryOne: '1',\r\n                        tagsOne: '1',\r\n                        imageValue: '1'\r\n                    },\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(res) {\r\n                // @ts-ignore\r\n            setPostDetailData(res)\r\n            }\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n    \r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && postDetailData && postDetailData['image'] ? getImagesInCollumn(postDetailData['image']) : [];\r\n\r\n\r\n    console.log('postDetailState', productDetailState);\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipe Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && postDetailData && (Object.keys(postDetailData).length > 0) && (\r\n                    <>\r\n                         <ProductBundleEdit\r\n\r\n                            productDetailData={postDetailData}\r\n                            addNewCategoryVisible={productEditVisible}\r\n                            setAddNewCategoryVisible={setProductEditVisible}\r\n                            setPostDetailData={setPostDetailData}\r\n                        /> \r\n                         <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button> \r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && postDetailData && !(Object.keys(postDetailData).length > 0) && (\r\n                    <Empty description='No Recipe found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && postDetailData && (Object.keys(postDetailData).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={postDetailData['cover'] && postDetailData['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {postDetailData['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {postDetailData['price']}\r\n                                </h4>\r\n                                <h3>\r\n                                    {postDetailData['description']}\r\n                                </h3>\r\n\r\n                                {postDetailData['startDate'] && (\r\n                                    <h3>\r\n                                        START DATE:\r\n                                        <span>\r\n                                            {postDetailData['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                                {postDetailData['endDate'] && (\r\n                                    <h3>\r\n                                        END DATE:\r\n                                        <span>\r\n                                            {postDetailData['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n\r\n\r\n                                {postDetailData['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {postDetailData['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {postDetailData['tags'] && postDetailData['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {postDetailData['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {postDetailData['category2'] && postDetailData['category2'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {postDetailData['category2'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/posts/category/${cat.id}`)}\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n                                    </>)\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailState.done\r\n                         && postDetailData && Object.keys(postDetailData).length > 0 \r\n                        && postDetailData['products']\r\n                         && postDetailData['products'].length > 0 && (\r\n                            <div className='brandDetailContainer__heading'>\r\n                                <h3>\r\n                                    Products\r\n                               </h3>\r\n                            </div>\r\n                        )\r\n                        }\r\n\r\n\r\n                        <div className='brandDetailContainer__body'>\r\n                            {productDetailState.done && postDetailData && postDetailData['products'] && !(postDetailData['products'].length > 0) && (\r\n                                <div style={{\r\n                                    marginTop: '100px'\r\n                                }}>\r\n                                    <Empty description='No Products exists for this Recipe' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                </div>\r\n                            )}\r\n\r\n                            {productDetailState.done && postDetailData && Object.keys(postDetailData).length > 0 && (\r\n                                <>\r\n                                    {postDetailData['products'] && postDetailData['products'].length > 0 &&\r\n                                        postDetailData['products'].map(product => {\r\n                                            return (\r\n                                                <CouponProducts\r\n                                                    quantity={product.quantity}\r\n                                                    productId={product['_id']} />\r\n                                            )\r\n                                        })}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        {postDetailData['image'] && postDetailData['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                    </>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Recipe Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagDetailData?: any;\r\n\ttagList?:any; \r\n\tsetTagList?: any; \r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, \r\n    setAddNewCategoryVisible, tagDetailData, setTagList,tagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postUpdateTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n          \r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...tagDetailData,...addTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n\r\n\t\t\t\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Edit Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Recipe Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postAddTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setAddNewCategoryVisible(false);\r\n\r\n            setTagList([...tagList, {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addTagRes,\r\n                id: addTagRes['_id'] || '',\r\n                key: addTagRes['_id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\t\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Post Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewTag from \"./AddNewPostTag\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Recipe Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'postDeleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Recipe Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/posts/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Edit Recipe tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetAddNewCategoryVisible={setvisible}\r\n\t\t\t\taddNewCategoryVisible={visible}\r\n\t\t\t\ttagDetailData={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'postTagList');\r\n\r\n\tconsole.log('recipetaglist',tagState); \r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tRecipe Tags\r\n         \t\t\t\t</h2>\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search recipe tags..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '200px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Recipe tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewTag\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Recipe Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, \r\n    setAddNewCategoryVisible, setTagDetailData, tagDetailData }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postUpdateTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setAddNewCategoryVisible(false);\r\n            setTagDetailData({\r\n\t\t\t\t...tagDetailData,\r\n                \t// @ts-ignore\r\n\t\t\t\t...addTagRes,\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            })\r\n        \r\n\t\t\t\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Edit Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport TagEdit from \"./TagEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'postTagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagPostList');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n    \r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipe Tag Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            addNewCategoryVisible={tagEditVisible}\r\n                            setAddNewCategoryVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Recipe Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipes \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                \r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Recipes found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/posts/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/posts/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","// @ts-nocheck\r\nimport React,{useEffect, useState} from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass MetaTags extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n\r\n\r\n  handleClose = removedTag => {\r\n    const {setTags,tags} = this.props;\r\n    const localTags = tags.filter(tag => tag !== removedTag);\r\n    setTags(localTags);\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n      console.log('handleInputConfirm',this.props);\r\n    const { inputValue } = this.state;\r\n    let { tags, setTags } = this.props;\r\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    setTags(tags);\r\n    this.setState({\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n    console.log('tagValue',e.target.value);\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ editInputIndex, editInputValue }) => {\r\n      return {\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n\r\n    const newTags = [...this.props.tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    this.props.setTags(newTags);\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    const { placeholder,tags } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {tags && tags.length > 0 && tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                placeholder={placeholder}\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus edit-tag\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaTags","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Select, notification, Modal, Tooltip, Upload, message, Spin } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: '',\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n    categoryDetailData?:any; \r\n\tsetcategoryList?:any; \r\n\tcategoryList?:any; \r\n}\r\n\r\nconst AddNewCategory = ({ \r\n    addNewCategoryVisible, \r\n    setAddNewCategoryVisible, \r\n    categoryDetailData, setcategoryList, categoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postCategoryUpdate');\r\n\tconst [updateCategoryIconState, handleUpdateCategoryIconFetch] = useHandleFetch({}, 'categoryUpdateIcon');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\t\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryDetailData.id\r\n                    }\r\n                }\r\n            }); \r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryDetailData]);\r\n\r\n\r\n\tconsole.log('MahPostCategory',categoryDetailState)\r\n\tconsole.log('MahPostCategorymyImages',myImages)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailState.done && categoryDetailState.data && Object.keys(categoryDetailState.data).length > 0) {\r\n\t\r\n\t\t\tconst images = categoryDetailState.data.image;\r\n\t\t\tlet mahImages = []; \r\n\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tmahImages = images;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (categoryDetailState.data.cover && categoryDetailState.data.cover['id']) {\r\n\t\t\t\tconst ixists = images.find(item => item.id === categoryDetailState.data.cover['id']);\r\n\t\t\t\tif(!ixists){\r\n\t\t\t\t\tmahImages = [categoryDetailState.data.cover, ...mahImages]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCoverImageId(categoryDetailState.data.cover['id']);\r\n\t\t\t}\r\n\t\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages(mahImages);\r\n\t\t\t\t\r\n\t\t}\r\n\t}, [categoryDetailState.data]); \r\n\t\r\n\t\r\n\tuseEffect(() => {\r\n\t\t// @ts-ignore\r\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\r\n\t\r\n\t\t\tif (coverImageId !== myImages[0].id) {\r\n\t\t\t\tsetCoverImageId(myImages[0].id);\r\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t}, [myImages])\r\n\t\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('displayOrder', values.displayOrder)\r\n\r\n\r\n\t\tconsole.log('categoryDetailData',categoryDetailData); \r\n\t\tconsole.log('imagesIds',imagesIds); \r\n\t\t\r\n\t\t\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\tconst aboutToUpdatedImageIds = []; \r\n\r\n\t\t\tif(imagesIds && imagesIds.length > 0){\r\n\t\t\t\timagesIds.forEach(imageId => {\r\n\t\t\t\t\tif(categoryDetailData && categoryDetailData['postCategory']){\r\n\t\t\t\t\t\tif(!categoryDetailData['image'].includes(imageId)){\r\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n      \r\n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'postCategory',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: aboutToUpdatedImageIds\r\n                    }\r\n                });\r\n            }\r\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: aboutToUpdatedImageIds[0].id,\r\n                            collection: 'postCategory',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\t\t}\r\n\t\t\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: categoryDetailData.id\r\n                },\r\n            },\r\n            body: {\r\n                name: values.name && values.name.trim(),\r\n                description: values.description,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                parent: selectedParentId,\r\n                icon: imageFile,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tdisplayOrder: values.displayOrder,\r\n                metaTags:  tags && tags.length > 0 ?  tags.join(',') : '',\r\n                bn: {\r\n                    metaTitle: values.bnMetaTitle,\r\n                    metaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags:  bnTags && bnTags.length > 0 ?  bnTags.join(',') : '',\r\n                    name: values.bnName && values.bnName.trim(),\r\n                    description: values.bnDescription,\r\n                }\r\n            },\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Updated!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\t// setcategoryList([{\r\n\t\t\t// \tid: addCategoryRes['_id'] || '',\r\n\t\t\t// \tkey: addCategoryRes['_id'] || '',\r\n\t\t\t// \tname: addCategoryRes['name'] || '',\r\n\t\t\t// \tdescription: addCategoryRes['description'] || '',\r\n\t\t\t// \tcover: addCategoryRes['cover'] || '',\r\n\t\t\t// \t// @ts-ignore\r\n\t\t\t// \t...addCategoryRes\r\n\t\t\t// },...categoryList]); \r\n\r\n\t\t\t\r\n\r\n            // setcategoryDetailData({\r\n\t\t\t// \t...categoryDetailData,\r\n\t\t\t// \t...addCategoryRes\r\n            // }); \r\n\r\n        \r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'postCategory',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'postCategory',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('icon',file); \r\n\t\t\t\t// const addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\t\t// \tbody: formData,\r\n\t\t\t\t// });\r\n\t\t\t\tconst res = await handleUpdateCategoryIconFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Category Icon updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update category icon, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const iconUrl = categoryDetailData.icon && categoryDetailData.icon; \r\n\r\n\t\t\tsetImageUrl(iconUrl); \r\n        }\r\n\r\n    },[])\r\n    \r\n    useEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const metaTags = categoryDetailData.metaTags && categoryDetailData.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = categoryDetailData.bn && categoryDetailData.bn['metaTags'] && categoryDetailData.bn['metaTags'].split(','); \r\n            setTags(metaTags || [])\r\n            setBnTags(bnMetaTags || [])\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n\tconsole.log('addnewCategoryTags',tags);\r\n\tconsole.log('categoryDetailData',categoryDetailData);\r\n\tconsole.log('myImages',myImages);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n                \r\n                { ...initialValues,\r\n                    ...categoryDetailData,\r\n                    ...( categoryDetailData && Object.keys(categoryDetailData).length > 0 && {\r\n                        bnMetaTitle: categoryDetailData['bn']\r\n                        && categoryDetailData['bn'].metaTitle\r\n                        && categoryDetailData['bn'].metaTitle,\r\n                        bnMetaDescription: categoryDetailData['bn'] &&  categoryDetailData['bn'].metaDescription && categoryDetailData['bn'].metaDescription,\r\n                        bnName: categoryDetailData['bn'] && categoryDetailData['bn'].name && categoryDetailData['bn'].name,\r\n                        bnDescription: categoryDetailData['bn'] && categoryDetailData['bn'].description && categoryDetailData['bn'].description,\r\n                    })\r\n                 }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {categoryDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {categoryDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\nimport config from '../../../config.json';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message, } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Recipe Category Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: null,\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postAddCategory','form');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tconst bn = {\r\n\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\tname: values.bnName.trim(),\r\n\t\t\tdescription: values.bnDescription,\r\n\t\t}; \r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\t// formData.append('icon', imageFile)\r\n\t\tformData.append('metaTitle', values.metaTitle)\r\n\t\tformData.append('displayOrder', values.displayOrder)\r\n\t\tformData.append('metaDescription', values.metaDescription)\r\n\t\tformData.append('metaTags', values.metaTags)\r\n\r\n\r\n\r\n\t\tconst bnData = JSON.stringify(bn);\r\n\t\tconst bnFormData = new FormData();\r\n\t\tbnFormData.append(\"bn\",bnData);\r\n\r\n\r\n\r\n\t\tformData.append('bn', bnFormData.get('bn'))\r\n\r\n\r\n\r\n\r\n\t\tconsole.log('addcategoryREsBody',{\r\n\t\t\t...formData,\r\n\t\t\t// ...bnFormData\r\n\t\t}); \r\n\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\tbody: formData,\r\n\t\t});\r\n\r\n\r\n\t\tconsole.log('adddPostCategoryREs',addCategoryRes)\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes[0] && addCategoryRes[0].name) {\r\n\t\t\topenSuccessNotification('Recipe Category Created!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([{\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes[0],\r\n\t\t\t\tid: addCategoryRes[0]['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes[0]['_id'] || '',\r\n\t\t\t\tname: addCategoryRes[0]['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes[0]['description'] || '',\r\n\t\t\t\tcover: addCategoryRes[0].cover\r\n\t\t\t\t? `${config['baseURL']}${\r\n\t\t\t\t\taddCategoryRes[0].cover ? addCategoryRes[0].cover.thumbnail : ''\r\n\t\t\t\t  }`\r\n\t\t\t\t: '',\r\n\t\t\t},...categoryList])\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconsole.log('addCategoryState',addCategoryState)\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!addCategoryState['isLoading']) {\r\n\t\t\tconst error = addCategoryState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addCategoryState])\r\n\r\n\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n{/* \r\n<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Display Order'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.displayOrder}\r\n\t\t\t\t\t\t\t\t\t\tplaceHolder={'1,3,7'}\r\n\t\t\t\t\t\t\t\t\t\tname='displayOrder'\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('displayOrder');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t */}\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t{/* <div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload> */}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport QuickEdit from \"./QuickEdit\"; \r\nimport AddNewPostCategory from \"./AddNewPostCategory\";\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport Empty from \"../../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Post Recipe Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'postCategoryDelete');\r\n      // console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Recipe Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                   onClick={() => {\r\n                    history.push(`/admin/posts/category/${record.id}`)\r\n                    // setcategoryDetailVisible(true);\r\n                    setactiveCategoryForEdit(record)\r\n                  }}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px',\r\n                    cursor: 'pointer'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/posts/category/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          {/* <Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            /> */}\r\n\r\n\r\n         {/* <Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            /> */}\r\n\r\n        <Column\r\n           title=\"Recipes\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t        <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setAddNewCategoryVisible={setvisible}\r\n    addNewCategoryVisible={visible}\r\n    categoryDetailData={activeCategoryForEdit}/>}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'postCategoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n          productCountValue: true \r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState); \r\n\r\n  \r\n\r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n  console.log('postCategoryList', categoryState);\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n              Recipe Categories\r\n          </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search recipe categories..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n            Add New\r\n        </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n                placeholder=\"search categories..\"\r\n                size=\"large\"\r\n                onSearch={value => console.log(value)}\r\n                style={{ width: 300 }}\r\n           /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Recipe Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n        {categoryState.done && \r\n          <AddNewPostCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Select, notification, Modal, Tooltip, Upload, message, Spin } from 'antd';\r\n\r\nimport {\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: '',\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tsetcategoryDetailData?:any; \r\n    categoryDetailData?:any; \r\n}\r\n\r\nconst AddNewCategory = ({ \r\n    addNewCategoryVisible, \r\n    setAddNewCategoryVisible, \r\n    categoryDetailData, setcategoryDetailData}: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postCategoryUpdate');\r\n\tconst [updateCategoryIconState, handleUpdateCategoryIconFetch] = useHandleFetch({}, 'categoryUpdateIcon');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\t\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryDetailData.id\r\n                    }\r\n                }\r\n            }); \r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryDetailData]);\r\n\r\n\r\n\tconsole.log('MahPostCategory',categoryDetailState)\r\n\tconsole.log('MahPostCategorymyImages',myImages)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailState.done && categoryDetailState.data && Object.keys(categoryDetailState.data).length > 0) {\r\n\t\r\n\t\t\tconst images = categoryDetailState.data.image;\r\n\t\t\tlet mahImages = []; \r\n\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tmahImages = images;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (categoryDetailState.data.cover && categoryDetailState.data.cover['id']) {\r\n\t\t\t\tconst ixists = images.find(item => item.id === categoryDetailState.data.cover['id']);\r\n\t\t\t\tif(!ixists){\r\n\t\t\t\t\tmahImages = [categoryDetailState.data.cover, ...mahImages]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCoverImageId(categoryDetailState.data.cover['id']);\r\n\t\t\t}\r\n\t\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages(mahImages);\r\n\t\t\t\t\r\n\t\t}\r\n\t}, [categoryDetailState.data]); \r\n\t\r\n\t\r\n\tuseEffect(() => {\r\n\t\t// @ts-ignore\r\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\r\n\t\r\n\t\t\tif (coverImageId !== myImages[0].id) {\r\n\t\t\t\tsetCoverImageId(myImages[0].id);\r\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t}, [myImages])\r\n\t\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('displayOrder', values.displayOrder)\r\n\r\n\r\n\t\tconsole.log('categoryDetailData',categoryDetailData); \r\n\t\tconsole.log('imagesIds',imagesIds); \r\n\t\t\r\n\t\t\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\tconst aboutToUpdatedImageIds = []; \r\n\r\n\t\t\tif(imagesIds && imagesIds.length > 0){\r\n\t\t\t\timagesIds.forEach(imageId => {\r\n\t\t\t\t\tif(categoryDetailData && categoryDetailData['postCategory']){\r\n\t\t\t\t\t\tif(!categoryDetailData['image'].includes(imageId)){\r\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n      \r\n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'postCategory',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: aboutToUpdatedImageIds\r\n                    }\r\n                });\r\n            }\r\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: aboutToUpdatedImageIds[0].id,\r\n                            collection: 'postCategory',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\t\t}\r\n\t\t\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: categoryDetailData.id\r\n                },\r\n            },\r\n            body: {\r\n                name: values.name && values.name.trim(),\r\n                description: values.description,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                parent: selectedParentId,\r\n                icon: imageFile,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tdisplayOrder: values.displayOrder,\r\n                metaTags:  tags && tags.length > 0 ?  tags.join(',') : '',\r\n                bn: {\r\n                    metaTitle: values.bnMetaTitle,\r\n                    metaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags:  bnTags && bnTags.length > 0 ?  bnTags.join(',') : '',\r\n                    name: values.bnName && values.bnName.trim(),\r\n                    description: values.bnDescription,\r\n                }\r\n            },\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Updated!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryDetailData({\r\n\t\t\t\t...categoryDetailData,\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes,\r\n\t\t\t});\r\n\t  \r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'postCategory',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'postCategory',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('icon',file); \r\n\t\t\t\t// const addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\t\t// \tbody: formData,\r\n\t\t\t\t// });\r\n\t\t\t\tconst res = await handleUpdateCategoryIconFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Category Icon updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update category icon, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const iconUrl = categoryDetailData.icon && categoryDetailData.icon; \r\n\r\n\t\t\tsetImageUrl(iconUrl); \r\n        }\r\n\r\n    },[])\r\n    \r\n    useEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const metaTags = categoryDetailData.metaTags && categoryDetailData.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = categoryDetailData.bn && categoryDetailData.bn['metaTags'] && categoryDetailData.bn['metaTags'].split(','); \r\n            setTags(metaTags || [])\r\n            setBnTags(bnMetaTags || [])\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n\tconsole.log('addnewCategoryTags',tags);\r\n\tconsole.log('categoryDetailData',categoryDetailData);\r\n\tconsole.log('myImages',myImages);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n                \r\n                { ...initialValues,\r\n                    ...categoryDetailData,\r\n                    ...( categoryDetailData && Object.keys(categoryDetailData).length > 0 && {\r\n                        bnMetaTitle: categoryDetailData['bn']\r\n                        && categoryDetailData['bn'].metaTitle\r\n                        && categoryDetailData['bn'].metaTitle,\r\n                        bnMetaDescription: categoryDetailData['bn'] &&  categoryDetailData['bn'].metaDescription && categoryDetailData['bn'].metaDescription,\r\n                        bnName: categoryDetailData['bn'] && categoryDetailData['bn'].name && categoryDetailData['bn'].name,\r\n                        bnDescription: categoryDetailData['bn'] && categoryDetailData['bn'].description && categoryDetailData['bn'].description,\r\n                    })\r\n                 }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {categoryDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {categoryDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport CategoryEdit from \"./PostCategoryEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\r\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryPostList');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const categoryId = params['id'];\r\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\r\n    const [categoryDetail,setcategoryDetail] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(categoryDetailDataRes){\r\n                  // @ts-ignore\r\n                setcategoryDetail(categoryDetailDataRes)\r\n\r\n            }\r\n\r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryProducts = async () => {\r\n            await handleCategoryProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryProducts();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n    console.log('postcategoryDetail', categoryDetail);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = categoryDetailState.done && categoryDetail && categoryDetail['image'] ? getImagesInCollumn(categoryDetail['image']) : [];\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                   Recipe Category Detail\r\n                </h3>\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <CategoryEdit\r\n                            addNewCategoryVisible={categoryEditVisible}\r\n                            setAddNewCategoryVisible={setCategoryEditVisible}\r\n                            categoryDetailData={categoryDetail}\r\n                            setcategoryDetailData={setcategoryDetail}\r\n\r\n                        />\r\n\r\n                        <Button\r\n                            onClick={() => setCategoryEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={categoryDetailState.isLoading}>\r\n                {categoryDetailState.done && categoryDetail && !(Object.keys(categoryDetail).length > 0) && (\r\n                    <Empty description='No Recipe category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\r\n                                <img src={categoryDetail['cover'] && categoryDetail['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {categoryDetail['name']}\r\n                                </h2>\r\n                                <h3>\r\n                                    {categoryDetail['description']}\r\n                                </h3>\r\n                          \r\n                                {categoryDetail['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {categoryDetail['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {categoryDetail['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                                    </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetail['icon'] && categoryDetail['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img \r\n                                                            alt='..'\r\n                                                            src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipes\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\r\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No recipes exists in this category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n\r\n                            size='small'\r\n                            dataSource={categoryProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            \r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/posts/${record.id}`)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/posts/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n\r\n\r\n                <Column\r\n                    title=\"Preparation Time\"\r\n                    dataIndex=\"preparationTime\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Cooking Time\"\r\n                    dataIndex=\"cookingTime\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                \r\n                <Column\r\n                    title=\"People\"\r\n                    dataIndex=\"servingSize\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n\r\n            \r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React from 'react'\r\nimport { DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\ninterface Props {\r\n    onChange: any;\r\n    label?: string;\r\n    withTime?: boolean;\r\n    placeholder?: string;\r\n    date?: string;\r\n    time?: string;\r\n}\r\n\r\n\r\nconst DatePickerComponent = ({ onChange, label, withTime, placeholder, date, time }: Props) => {\r\n    function disabledDate(current) {\r\n        // Can not select days before today and today\r\n        return current && current < moment(date) && current > moment(date);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='inputFieldLabel'>{label}</h3>\r\n\r\n            {withTime ? <DatePicker\r\n                format=\"YYYY-MM-DD HH:mm:ss\"\r\n                className='inputclassName'\r\n                placeholder={placeholder}\r\n                style={{\r\n                    width: \"100%\",\r\n                    borderColor: \"#eee\"\r\n                }}\r\n\r\n\r\n                onChange={onChange}\r\n                {...(time && {\r\n                    defaultValue: moment(time),\r\n                })}\r\n            />\r\n                : (\r\n                    <DatePicker\r\n\r\n                        placeholder={placeholder}\r\n                        className='inputclassName'\r\n                        style={{\r\n                            width: \"100%\",\r\n                            borderColor: \"#eee\"\r\n                        }}\r\n                        onChange={onChange}\r\n                        {...(date && {\r\n                            defaultValue: moment(date),\r\n                        })}\r\n                    />\r\n                )}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DatePickerComponent\r\n\r\n\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction range(start, end) {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n        result.push(i);\r\n    }\r\n    return result;\r\n}\r\n\r\n// function disabledDate(current) {\r\n//   // Can not select days before today and today\r\n//   return current && current < moment().endOf('day');\r\n// }\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n  Form,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\n\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  //   firstName: Yup.string()\r\n  //     .label('First name')\r\n  //     .required()\r\n  //     .min(2, 'First name must have at least 2 characters '),\r\n  //   lastName: Yup.string()\r\n  //     .label('Lastname')\r\n  //     .required()\r\n  //     .min(2, 'Last name must have at least 2 characters '),\r\n  //   phone: Yup.string()\r\n  //     .required('Please tell us your mobile number.')\r\n  //     .max(13, 'Please enter a valid mobile number.'),\r\n  //   password: Yup.string()\r\n  //     .label('Password')\r\n  //     .required()\r\n  //     .min(6, 'Password must have at least 6 characters'),\r\n  //   address1: Yup.string()\r\n  //     .label('Address line 1')\r\n  //     .required()\r\n  //     .min(3, 'Address line 1 must have at least 3 characters '),\r\n  //   email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\nconst initialValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  address: '',\r\n  salary: null,\r\n  designation: '',\r\n  fatherName: '',\r\n  motherName: '',\r\n  NID: '',\r\n  phone: '',\r\n  email: '',\r\n  additionalInfo: '',\r\n  joiningDate: '',\r\n};\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Staff Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  customerList?: any;\r\n  setCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  customerList,\r\n  setCustomerList,\r\n}: Props) => {\r\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'addStaff'\r\n  );\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n  const [time, setTimeFeild] = useState('');\r\n\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addCustomerRes = await handleAddCustomerFetch({\r\n      body: {\r\n        phone: values.phone,\r\n        email: values.email,\r\n        password: values.password,\r\n        address: values.address,\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        additionalInfo: values.additionalInfo,\r\n        NID: values.NID,\r\n        fatherName: values.fatherName,\r\n        motherName: values.motherName,\r\n        salary: values.salary,\r\n        designation: values.designation,\r\n        joiningDate: time,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setCustomerList([\r\n        {\r\n          id: addCustomerRes['_id'] || '',\r\n          key: addCustomerRes['_id'] || '',\r\n          // @ts-ignore\r\n          ...addCustomerRes,\r\n        },\r\n        ...customerList,\r\n      ]);\r\n\r\n      setAddNewCategoryVisible(false);\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addCustomerState['isLoading']) {\r\n      const error = addCustomerState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addCustomerState['isLoading'] &&\r\n      Object.keys(addCustomerState.data).length > 0\r\n    ) {\r\n      if (addCustomerState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addCustomerState]);\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !isValid ||\r\n      !values.firstName ||\r\n      !values.lastName ||\r\n      !values.password ||\r\n      !values.phone ||\r\n      !values.address1\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  console.log('cityListState', cityListState);\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n            title='Add New Staff'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='First Name'\r\n                  value={values.firstName}\r\n                  name='firstName'\r\n                  isError={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('firstName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Last Name'\r\n                  value={values.lastName}\r\n                  name='lastName'\r\n                  isError={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('lastName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Designation'\r\n                  value={values.designation}\r\n                  name='designation'\r\n                  isError={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  errorString={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('designation');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  min={0}\r\n                  type={'number'}\r\n                  label='Salary'\r\n                  value={values.salary}\r\n                  name='salary'\r\n                  isError={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  errorString={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('salary');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Phone'\r\n                  value={values.phone}\r\n                  name='phone'\r\n                  isError={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  errorString={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('phone');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='NID'\r\n                  value={values.NID}\r\n                  name='NID'\r\n                  isError={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  errorString={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('NID');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Father Name'\r\n                  value={values.fatherName}\r\n                  name='fatherName'\r\n                  isError={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('fatherName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Mother Name'\r\n                  value={values.motherName}\r\n                  name='motherName'\r\n                  isError={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('motherName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Email'\r\n                  value={values.email}\r\n                  name='email'\r\n                  isError={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  errorString={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('email');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <DatePicker\r\n                  date={time}\r\n                  placeholder='10/20/2020'\r\n                  label='joining Date'\r\n                  onChange={handleTimeChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Address'\r\n                  value={values.address}\r\n                  name='address'\r\n                  isError={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  errorString={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('address');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Additional Info'\r\n                  value={values.additionalInfo}\r\n                  name='additionalInfo'\r\n                  isError={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  errorString={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('additionalInfo');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewCategory;\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n  Form,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\n\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  //   firstName: Yup.string()\r\n  //     .label('First name')\r\n  //     .required()\r\n  //     .min(2, 'First name must have at least 2 characters '),\r\n  //   lastName: Yup.string()\r\n  //     .label('Lastname')\r\n  //     .required()\r\n  //     .min(2, 'Last name must have at least 2 characters '),\r\n  //   phone: Yup.string()\r\n  //     .required('Please tell us your mobile number.')\r\n  //     .max(13, 'Please enter a valid mobile number.'),\r\n  //   password: Yup.string()\r\n  //     .label('Password')\r\n  //     .required()\r\n  //     .min(6, 'Password must have at least 6 characters'),\r\n  //   address1: Yup.string()\r\n  //     .label('Address line 1')\r\n  //     .required()\r\n  //     .min(3, 'Address line 1 must have at least 3 characters '),\r\n  //   email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\nconst initialValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  address: '',\r\n  salary: null,\r\n  designation: '',\r\n  fatherName: '',\r\n  motherName: '',\r\n  NID: '',\r\n  phone: '',\r\n  email: '',\r\n  additionalInfo: '',\r\n  joiningDate: '',\r\n};\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Staff Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  customerList?: any;\r\n  setCustomerList?: any;\r\n  customer?: any;\r\n}\r\n\r\nconst StaffQuickEdit = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  customerList,\r\n  setCustomerList,\r\n  customer,\r\n}: Props) => {\r\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'updateStaff'\r\n  );\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n  const [time, setTimeFeild] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (customer && Object.keys(customer).length > 0) {\r\n      setTimeFeild(customer['joiningDate']);\r\n    }\r\n  }, [customer]);\r\n\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addCustomerRes = await handleAddCustomerFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: customer.id,\r\n        },\r\n      },\r\n      body: {\r\n        phone: values.phone,\r\n        email: values.email,\r\n        address: values.address,\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        additionalInfo: values.additionalInfo,\r\n        NID: values.NID,\r\n        fatherName: values.fatherName,\r\n        motherName: values.motherName,\r\n        salary: values.salary,\r\n        designation: values.designation,\r\n        joiningDate: time,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      console.log('addCustomerREes', addCustomerRes);\r\n      const positionInTag = () => {\r\n        return customerList.map((item) => item.id).indexOf(customer.id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, customerList[index], {\r\n        ...addCustomerRes,\r\n        name: addCustomerRes.firstName + ' ' + addCustomerRes.lastName,\r\n      });\r\n\r\n      console.log('updatedItemaddCustomerREes', addCustomerRes);\r\n\r\n      const updateTagList = [\r\n        ...customerList.slice(0, index),\r\n        updatedItem,\r\n        ...customerList.slice(index + 1),\r\n      ];\r\n\r\n      console.log('updatedItemadUpdatedList', updateTagList);\r\n\r\n      setCustomerList(updateTagList);\r\n\r\n      setAddNewCategoryVisible(false);\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addCustomerState['isLoading']) {\r\n      const error = addCustomerState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addCustomerState['isLoading'] &&\r\n      Object.keys(addCustomerState.data).length > 0\r\n    ) {\r\n      if (addCustomerState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addCustomerState]);\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !isValid ||\r\n      !values.firstName ||\r\n      !values.lastName ||\r\n      !values.password ||\r\n      !values.phone ||\r\n      !values.address1\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  console.log('cityListState', cityListState);\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...customer }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n            title='Add New Staff'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='First Name'\r\n                  value={values.firstName}\r\n                  name='firstName'\r\n                  isError={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('firstName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Last Name'\r\n                  value={values.lastName}\r\n                  name='lastName'\r\n                  isError={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('lastName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Designation'\r\n                  value={values.designation}\r\n                  name='designation'\r\n                  isError={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  errorString={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('designation');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  min={0}\r\n                  type={'number'}\r\n                  label='Salary'\r\n                  value={values.salary}\r\n                  name='salary'\r\n                  isError={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  errorString={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('salary');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Phone'\r\n                  value={values.phone}\r\n                  name='phone'\r\n                  isError={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  errorString={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('phone');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='NID'\r\n                  value={values.NID}\r\n                  name='NID'\r\n                  isError={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  errorString={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('NID');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Father Name'\r\n                  value={values.fatherName}\r\n                  name='fatherName'\r\n                  isError={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('fatherName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Mother Name'\r\n                  value={values.motherName}\r\n                  name='motherName'\r\n                  isError={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('motherName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Email'\r\n                  value={values.email}\r\n                  name='email'\r\n                  isError={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  errorString={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('email');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <DatePicker\r\n                  date={time}\r\n                  placeholder='10/20/2020'\r\n                  label='joining Date'\r\n                  onChange={handleTimeChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Address'\r\n                  value={values.address}\r\n                  name='address'\r\n                  isError={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  errorString={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('address');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Additional Info'\r\n                  value={values.additionalInfo}\r\n                  name='additionalInfo'\r\n                  isError={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  errorString={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('additionalInfo');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default StaffQuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { CSVLink } from \"react-csv\";\r\n \r\n\r\n\r\nimport {\r\n  Table,\r\n  Badge,\r\n  Menu,\r\n  Dropdown,\r\n  notification,\r\n  Space,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  Modal,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  EditFilled,\r\n  CheckCircleOutlined,\r\n  DownloadOutlined\r\n} from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\nimport moment from 'moment';\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewStaff from './AddNewStaff';\r\nimport QuickEdit from './QuickEdit';\r\nimport Empty from '../../components/Empty';\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Staffs Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setCustomerList?: any;\r\n}\r\n\r\nconst MyTable = ({ data, setCustomerList }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'deleteStaff'\r\n  );\r\n  const handleDeleteCustomer = async (id) => {\r\n    const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteCustomerRes && deleteCustomerRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Staffs');\r\n      const newCustomerList = data.filter((item) => item.id !== id);\r\n      setCustomerList(newCustomerList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/staff/${record.id}`);\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Phone'\r\n          dataIndex='phone'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Designation'\r\n          dataIndex='designation'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Salary'\r\n          dataIndex='salary'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Joined'\r\n          dataIndex='joiningDate'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm a')}</h5>\r\n            </Space>\r\n          )}\r\n        />\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <a href='##'>\r\n                <Tooltip placement='top' title='Edit Staff'>\r\n                  <span\r\n                    className='iconSize'\r\n                    onClick={() => {\r\n                      setvisible(true);\r\n                      setactiveCategoryForEdit(record);\r\n                    }}\r\n                  >\r\n                    <EditOutlined />\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteCustomer(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <QuickEdit\r\n          customerList={data}\r\n          setCustomerList={setCustomerList}\r\n          setAddNewCategoryVisible={setvisible}\r\n          addNewCategoryVisible={visible}\r\n          customer={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst CustomerList = ({ history }: Props) => {\r\n  const [customerList, setCustomerList] = useState([]);\r\n\r\n  const [customerState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'staffList'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const customers = await handleCustomerListFetch({});\r\n      // @ts-ignore\r\n      setCustomerList(customers);\r\n    };\r\n    setCustomers();\r\n  }, []);\r\n\r\n  const handleSearch = (value) => {\r\n    if (customerState.data.length > 0) {\r\n      const newCustomerList = customerState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setCustomerList(newCustomerList);\r\n    }\r\n  };\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  // console.log('customerState',customerState)\r\n\r\n  const headers = [\r\n    { label: \"Name\", key: \"name\" },\r\n    { label: \"Phone\", key: \"phone\" },\r\n    { label: \"Designation\", key: \"designation\" },\r\n    { label: \"Salary\", key: \"salary\" },\r\n    { label: \"joined\", key: \"joiningDate\" },\r\n  ];\r\n   \r\n\r\n  const getData = () => {\r\n    if(customerList && customerList.length > 0){\r\n      const csvData = customerList.map(item => {\r\n        return {\r\n          name: item.name,\r\n          phone: item.phone,\r\n          designation: item.designation,\r\n          salary: item.salary,\r\n          joiningDate : item.joiningDate ? moment(item.joiningDate).format('MMMM Do YYYY, h:mm a') : ''\r\n        }\r\n      })\r\n\r\n      return csvData; \r\n    }\r\n    else return []; \r\n  }; \r\n\r\n\r\n  const data = getData();\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Staffs</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search staffs..'\r\n              onSearch={(value) => handleSearch(value)}\r\n              // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n        <div style={{\r\n          display:'flex',\r\n          alignItems:'center'\r\n        }}>\r\n        \r\n        {customerList && customerList.length > 0 && (\r\n          <>\r\n          <div style={{\r\n          display:'flex',\r\n          alignItems:'center',\r\n          marginRight: '25px'\r\n        }}>\r\n        <CSVLink\r\n         filename={\"staff-list.csv\"}\r\n         data={data} headers={headers}>\r\n          Export as csv \r\n        </CSVLink>\r\n        <span style={{\r\n          color:'#1890ff',\r\n          marginLeft: '10px'\r\n        }}>\r\n        <DownloadOutlined />\r\n        </span>\r\n        </div>\r\n          </>\r\n        )}\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n          </Button>\r\n        </div>\r\n\r\n        \r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {customerState.done && customerList.length > 0 && (\r\n            <MyTable setCustomerList={setCustomerList} data={customerList} />\r\n          )}\r\n          {customerState.isLoading && <DataTableSkeleton />}\r\n          {customerState.done && !(customerList.length > 0) && (\r\n            <Empty title='No Staff found' />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {customerState.done && (\r\n        <AddNewStaff\r\n          setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n  Form,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\n\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst initialValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  address: '',\r\n  salary: null,\r\n  designation: '',\r\n  fatherName: '',\r\n  motherName: '',\r\n  NID: '',\r\n  phone: '',\r\n  email: '',\r\n  additionalInfo: '',\r\n  joiningDate: '',\r\n};\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Staff Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  setCustomer?: any;\r\n  customer?: any;\r\n}\r\n\r\nconst StaffQuickEdit = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  customer,\r\n  setCustomer,\r\n}: Props) => {\r\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'updateStaff'\r\n  );\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n  const [time, setTimeFeild] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (customer && Object.keys(customer).length > 0) {\r\n      setTimeFeild(customer['joiningDate']);\r\n    }\r\n  }, [customer]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addCustomerRes = await handleAddCustomerFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: customer.id,\r\n        },\r\n      },\r\n      body: {\r\n        phone: values.phone,\r\n        email: values.email,\r\n        password: values.password,\r\n        address: values.address,\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        additionalInfo: values.additionalInfo,\r\n        NID: values.NID,\r\n        fatherName: values.fatherName,\r\n        motherName: values.motherName,\r\n        salary: values.salary,\r\n        designation: values.designation,\r\n        joiningDate: time,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setCustomer({\r\n        ...addCustomerRes,\r\n        name: addCustomerRes.firstName + ' ' + addCustomerRes.lastName,\r\n      });\r\n\r\n      setAddNewCategoryVisible(false);\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addCustomerState['isLoading']) {\r\n      const error = addCustomerState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addCustomerState['isLoading'] &&\r\n      Object.keys(addCustomerState.data).length > 0\r\n    ) {\r\n      if (addCustomerState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addCustomerState]);\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !isValid ||\r\n      !values.firstName ||\r\n      !values.lastName ||\r\n      !values.password ||\r\n      !values.phone ||\r\n      !values.address1\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  console.log('cityListState', cityListState);\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...customer }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n            title='Add New Staff'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='First Name'\r\n                  value={values.firstName}\r\n                  name='firstName'\r\n                  isError={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('firstName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Last Name'\r\n                  value={values.lastName}\r\n                  name='lastName'\r\n                  isError={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('lastName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Designation'\r\n                  value={values.designation}\r\n                  name='designation'\r\n                  isError={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  errorString={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('designation');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  min={0}\r\n                  type={'number'}\r\n                  label='Salary'\r\n                  value={values.salary}\r\n                  name='salary'\r\n                  isError={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  errorString={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('salary');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Phone'\r\n                  value={values.phone}\r\n                  name='phone'\r\n                  isError={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  errorString={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('phone');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='NID'\r\n                  value={values.NID}\r\n                  name='NID'\r\n                  isError={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  errorString={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('NID');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Father Name'\r\n                  value={values.fatherName}\r\n                  name='fatherName'\r\n                  isError={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('fatherName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Mother Name'\r\n                  value={values.motherName}\r\n                  name='motherName'\r\n                  isError={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('motherName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Email'\r\n                  value={values.email}\r\n                  name='email'\r\n                  isError={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  errorString={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('email');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <DatePicker\r\n                  date={time}\r\n                  placeholder='10/20/2020'\r\n                  label='joining Date'\r\n                  onChange={handleTimeChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Address'\r\n                  value={values.address}\r\n                  name='address'\r\n                  isError={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  errorString={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('address');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Additional Info'\r\n                  value={values.additionalInfo}\r\n                  name='additionalInfo'\r\n                  isError={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  errorString={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('additionalInfo');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default StaffQuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport StaffEdit from './StaffEdit';\r\nimport moment from 'moment';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'staffDetail'\r\n  );\r\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\r\n    {},\r\n    'tagProducts'\r\n  );\r\n  const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n  const params = useParams();\r\n  const tagId = params['id'];\r\n  const [customerDetail, setCustomerDetail] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const res = await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (res) {\r\n        // @ts-ignore\r\n        setCustomerDetail(res);\r\n      }\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  useEffect(() => {\r\n    const getTagProducts = async () => {\r\n      await handleTagProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getTagProducts();\r\n  }, [tagId]);\r\n\r\n  console.log('tagProductsState', tagProductsState);\r\n\r\n  console.log('brandParams', params);\r\n  console.log('staffDetail', tagDetailState);\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Staff Detail</h3>\r\n\r\n        {tagDetailState.done &&\r\n          customerDetail &&\r\n          Object.keys(customerDetail).length > 0 && (\r\n            <>\r\n              <StaffEdit\r\n                addNewCategoryVisible={tagEditVisible}\r\n                setAddNewCategoryVisible={setTagEditVisible}\r\n                customer={customerDetail}\r\n                setCustomer={setCustomerDetail}\r\n              />\r\n              <Button\r\n                onClick={() => setTagEditVisible(true)}\r\n                type='link'\r\n                icon={<EditOutlined />}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\r\n        {tagDetailState.done &&\r\n          customerDetail &&\r\n          !(Object.keys(customerDetail).length > 0) && (\r\n            <Empty\r\n              description='No Staffs found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          customerDetail &&\r\n          Object.keys(customerDetail).length > 0 && (\r\n            <div className='brandDetailContainer__header'>\r\n              <div className='brandDetailContainer__header-info'>\r\n                <h2>{customerDetail['name']}</h2>\r\n                <h3>{customerDetail['description']}</h3>\r\n                {customerDetail['designation'] && (\r\n                  <h3>\r\n                    DESIGNATION:\r\n                    <span>{customerDetail['designation']}</span>\r\n                  </h3>\r\n                )}\r\n                {customerDetail['salary'] && (\r\n                  <h3>\r\n                    SALARY:\r\n                    <span>{customerDetail['salary']}</span>\r\n                  </h3>\r\n                )}\r\n\r\n                {customerDetail['NID'] && (\r\n                  <h3>\r\n                    NID:\r\n                    <span>{customerDetail['NID']}</span>\r\n                  </h3>\r\n                )}\r\n\r\n                {customerDetail['joiningDate'] && (\r\n                  <h3>\r\n                    JOINED:\r\n                    <span>\r\n                      {customerDetail['joiningDate'] &&\r\n                        moment(customerDetail['joiningDate']).format(\r\n                          'MMMM Do YYYY, h:mm a'\r\n                        )}\r\n                    </span>\r\n                  </h3>\r\n                )}\r\n\r\n                {customerDetail['fatherName'] && (\r\n                  <h3>\r\n                    FATHER'S NAME:\r\n                    <span>{customerDetail['fatherName']}</span>\r\n                  </h3>\r\n                )}\r\n                {customerDetail['motherName'] && (\r\n                  <h3>\r\n                    MOTHER'S NAME:\r\n                    <span>{customerDetail['motherName']}</span>\r\n                  </h3>\r\n                )}\r\n\r\n                {customerDetail['phone'] && (\r\n                  <h3>\r\n                    PHONE:\r\n                    <span>{customerDetail['phone']}</span>\r\n                  </h3>\r\n                )}\r\n                {customerDetail['email'] && (\r\n                  <h3>\r\n                    EMAIL:\r\n                    <span>{customerDetail['email']}</span>\r\n                  </h3>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n      </Skeleton>\r\n\r\n      {/* <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orderss exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewBrandDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\nimport StaffIds from './StaffIds';\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Expense Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  topic: '',\r\n  amount: null,\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  tagList?: any;\r\n  setTagList?: any;\r\n  category?:any; \r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  tagList,\r\n  setTagList,\r\n  category\r\n}: Props) => {\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'updateExpense');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [time, setTimeFeild] = useState('');\r\n  const [customerId, setCustomerId] = useState([]);\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    if(category && category.date){\r\n        setTimeFeild(category.date)\r\n    }\r\n  },[category]); \r\n\r\n  \r\n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'staffList'\r\n  );\r\n\r\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const customerListRes = await handleCustomerListFetch({});\r\n    };\r\n    setCustomers();\r\n  }, []);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t\tid: category.id || category._id\r\n\t\t\t}\r\n\t\t},\r\n      body: {\r\n        topic: values.topic.trim(),\r\n        amount: values.amount,\r\n        date: time,\r\n        staff: customerId,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n\r\n\t  const positionInTag = () => {\r\n\t\treturn tagList.map(item => item.id).indexOf(category.id || category._id);\r\n\t}\r\n\r\n\tconst index = positionInTag();\r\n\r\n\t// @ts-ignore\r\n\tconst updatedItem = Object.assign({}, tagList[index], { ...addTagRes });\r\n\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\tsetTagList(updateTagList);\r\n\r\n      actions.resetForm();\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addTagState['isLoading']) {\r\n      const error = addTagState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\r\n      if (addTagState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addTagState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...category }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Expense'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <Input\r\n              label='Topic'\r\n              value={values.topic}\r\n              name='topic'\r\n              isError={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              errorString={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('topic');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Amount'\r\n              value={values.amount}\r\n              name='amount'\r\n              type={'number'}\r\n              min={0}\r\n              isError={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              errorString={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('amount');\r\n              }}\r\n            />\r\n\r\n            <DatePicker\r\n              date={time}\r\n              placeholder='10/20/2020'\r\n              label='Date'\r\n              onChange={handleTimeChange}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            {/* <h4 className='inputFieldLabel'>Associative staff</h4>\r\n            <StaffIds\r\n              customerListState={customerListState}\r\n              setSelectedCustomerData={setSelectedCustomerData}\r\n              setCustomerId={setCustomerId}\r\n            /> */}\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\nimport StaffIds from './StaffIds';\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Expense Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  topic: '',\r\n  amount: null,\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  tagList?: any;\r\n  setTagList?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  tagList,\r\n  setTagList,\r\n}: Props) => {\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addExpense');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [time, setTimeFeild] = useState('');\r\n  const [customerId, setCustomerId] = useState([]);\r\n\r\n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'staffList'\r\n  );\r\n\r\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const customerListRes = await handleCustomerListFetch({});\r\n    };\r\n    setCustomers();\r\n  }, []);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n      body: {\r\n        topic: values.topic.trim(),\r\n        amount: values.amount,\r\n        date: time,\r\n        staff: customerId,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setTagList([\r\n        {\r\n          // @ts-ignore\r\n          ...addTagRes,\r\n          id: addTagRes['_id'] || '',\r\n          key: addTagRes['_id'] || '',\r\n        },\r\n        ...tagList,\r\n      ]);\r\n      actions.resetForm();\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addTagState['isLoading']) {\r\n      const error = addTagState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\r\n      if (addTagState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addTagState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Expense'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <Input\r\n              label='Topic'\r\n              value={values.topic}\r\n              name='topic'\r\n              isError={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              errorString={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('topic');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Amount'\r\n              value={values.amount}\r\n              name='amount'\r\n              type={'number'}\r\n              min={0}\r\n              isError={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              errorString={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('amount');\r\n              }}\r\n            />\r\n\r\n            <DatePicker\r\n              date={time}\r\n              placeholder='10/20/2020'\r\n              label='Date'\r\n              onChange={handleTimeChange}\r\n            />\r\n\r\n            {/* <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h4 className='inputFieldLabel'>Associative staff</h4>\r\n            <StaffIds\r\n              customerListState={customerListState}\r\n              setSelectedCustomerData={setSelectedCustomerData}\r\n              setCustomerId={setCustomerId}\r\n            /> */}\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport moment from 'moment';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n  DownloadOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport QuickEdit from './QuickEdit';\r\nimport AddNewExpense from './AddNewExpense';\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Expense Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\r\n    {},\r\n    'deleteExpense'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteTag = async (id) => {\r\n    const deleteTagRes = await handleDeleteTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Expense');\r\n      const newtagList = data.filter((item) => item.id !== id);\r\n      setTagList(newtagList);\r\n    }\r\n  };\r\n\r\n  const handleOk = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Topic'\r\n          dataIndex='topic'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/expense/${record.id}`);\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Amount'\r\n          dataIndex='amount'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Date'\r\n          dataIndex='date'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm a')}</h5>\r\n            </Space>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <a href='##'>\r\n                <Tooltip placement='top' title='Edit Expense'>\r\n                  <span\r\n                    className='iconSize'\r\n                    onClick={() => {\r\n                      setvisible(true);\r\n                      setactiveCategoryForEdit(record);\r\n                    }}\r\n                  >\r\n                    <EditOutlined />\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteTag(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <QuickEdit\r\n          tagList={data}\r\n          setTagList={setTagList}\r\n          setAddNewCategoryVisible={setvisible}\r\n          addNewCategoryVisible={visible}\r\n          category={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst TagList = ({}: Props) => {\r\n  const [tagList, setTagList] = useState([]);\r\n\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'expenseList');\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tags = await handleTagListFetch({});\r\n      // @ts-ignore\r\n      setTagList(tags);\r\n    };\r\n    setTags();\r\n  }, []);\r\n\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: values.description,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setTagList([\r\n        ...tagList,\r\n        {\r\n          id: addTagRes['id'] || '',\r\n          key: addTagRes['id'] || '',\r\n          name: addTagRes['name'] || '',\r\n          description: addTagRes['description'] || '',\r\n        },\r\n      ]);\r\n      actions.resetForm();\r\n    }\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    if (tagState.data.length > 0) {\r\n      const newTagList = tagState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setTagList(newTagList);\r\n    }\r\n  };\r\n\r\n\r\n  \r\n  const headers = [\r\n    { label: \"Topic\", key: \"topic\" },\r\n    { label: \"Amount\", key: \"amount\" },\r\n    { label: \"Date\", key: \"date\" },\r\n  ];\r\n   \r\n\r\n  const getData = () => {\r\n    if(tagList && tagList.length > 0){\r\n      const csvData = tagList.map(item => {\r\n        return {\r\n          topic: item.topic,\r\n          amount: item.amount,\r\n          date : item.date ? moment(item.date).format('MMMM Do YYYY, h:mm a') : ''\r\n        }\r\n      })\r\n\r\n      return csvData; \r\n    }\r\n    else return []; \r\n  }; \r\n\r\n\r\n  const data = getData();\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n            <h2 className='categoryListContainer__header-title'>Expenses</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search expense..'\r\n              onSearch={(value) => handleSearch(value)}\r\n            />\r\n          </div>\r\n\r\n          \r\n        <div style={{\r\n          display:'flex',\r\n          alignItems:'center'\r\n        }}>\r\n        \r\n        {tagList && tagList.length > 0 && (\r\n          <>\r\n          <div style={{\r\n          display:'flex',\r\n          alignItems:'center',\r\n          marginRight: '25px'\r\n        }}>\r\n        <CSVLink\r\n         filename={\"Expenses.csv\"}\r\n         data={data} headers={headers}>\r\n          Export as csv \r\n        </CSVLink>\r\n        <span style={{\r\n          color:'#1890ff',\r\n          marginLeft: '10px'\r\n        }}>\r\n        <DownloadOutlined />\r\n        </span>\r\n        </div>\r\n          </>\r\n        )}\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n          </Button>\r\n        </div>\r\n\r\n\r\n        \r\n        </div>\r\n        <div className='categoryListContainer__categoryList'>\r\n          {tagState.done && tagList.length > 0 && (\r\n            <MyTable setTagList={setTagList} data={tagList} />\r\n          )}\r\n          {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n          {tagState.done && !(tagList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '150px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Expense found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AddNewExpense\r\n        tagList={tagList}\r\n        setTagList={setTagList}\r\n        addNewCategoryVisible={addNewCategoryVisible}\r\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\nimport StaffIds from './StaffIds';\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Expense Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  topic: '',\r\n  amount: null,\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  tagList?: any;\r\n  setTagList?: any;\r\n  category?:any; \r\n  setTagDetailData?:any; \r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  category,\r\n  setTagDetailData\r\n}: Props) => {\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'updateExpense');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [time, setTimeFeild] = useState('');\r\n  const [customerId, setCustomerId] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if(category && category.date){\r\n        setTimeFeild(category.date)\r\n    }\r\n  },[category]); \r\n\r\n  \r\n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'staffList'\r\n  );\r\n\r\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const customerListRes = await handleCustomerListFetch({});\r\n    };\r\n    setCustomers();\r\n  }, []);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t\tid: category.id || category._id\r\n\t\t\t}\r\n\t\t},\r\n      body: {\r\n        topic: values.topic.trim(),\r\n        amount: values.amount,\r\n        date: time,\r\n        staff: customerId,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setTagDetailData({\r\n          ...category,\r\n          // @ts-ignore\r\n        ...addTagRes,\r\n      });\r\n\r\n      actions.resetForm();\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addTagState['isLoading']) {\r\n      const error = addTagState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\r\n      if (addTagState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addTagState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...category }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Expense'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <Input\r\n              label='Topic'\r\n              value={values.topic}\r\n              name='topic'\r\n              isError={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              errorString={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('topic');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Amount'\r\n              value={values.amount}\r\n              name='amount'\r\n              type={'number'}\r\n              min={0}\r\n              isError={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              errorString={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('amount');\r\n              }}\r\n            />\r\n\r\n            <DatePicker\r\n              date={time}\r\n              placeholder='10/20/2020'\r\n              label='Date'\r\n              onChange={handleTimeChange}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            {/* <h4 className='inputFieldLabel'>Associative staff</h4>\r\n            <StaffIds\r\n              customerListState={customerListState}\r\n              setSelectedCustomerData={setSelectedCustomerData}\r\n              setCustomerId={setCustomerId}\r\n            /> */}\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\nimport moment from 'moment';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport ExpenseEdit from './ExpenseEdit';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'expenseDetail'\r\n  );\r\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\r\n    {},\r\n    'tagProducts'\r\n  );\r\n  const [tagEditVisible, setTagEditVisible] = useState(false);\r\n  const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n  const params = useParams();\r\n  const tagId = params['id'];\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const res = await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if(res){\r\n        // @ts-ignore\r\n        setTagDetailData(res); \r\n      }; \r\n\r\n\r\n\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  useEffect(() => {\r\n    const getTagProducts = async () => {\r\n      await handleTagProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getTagProducts();\r\n  }, [tagId]);\r\n\r\n  console.log('tagProductsState', tagProductsState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Expense Detail</h3>\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <>\r\n              <ExpenseEdit\r\n                addNewCategoryVisible={tagEditVisible}\r\n                setAddNewCategoryVisible={setTagEditVisible}\r\n                category={tagDetailData}\r\n                setTagDetailData={setTagDetailData}\r\n              />\r\n              <Button\r\n                onClick={() => setTagEditVisible(true)}\r\n                type='link'\r\n                icon={<EditOutlined />}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          !(Object.keys(tagDetailData).length > 0) && (\r\n            <Empty\r\n              description='No Expense found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <div className='brandDetailContainer__header'>\r\n              <div className='brandDetailContainer__header-info'>\r\n                {tagDetailData['topic'] && (\r\n                  <h3>\r\n                    TOPIC:\r\n                    <span>{tagDetailData['topic']}</span>\r\n                  </h3>\r\n                )}\r\n                {tagDetailData['amount'] && (\r\n                  <h3>\r\n                    AMOUNT:\r\n                    <span>{tagDetailData['amount']}</span>\r\n                  </h3>\r\n                )}\r\n                {tagDetailData['date'] && (\r\n                  <h3>\r\n                    DATE:\r\n                    <span>\r\n                      {tagDetailState['data']['date'] &&\r\n                        moment(tagDetailState['data']['date']).format(\r\n                          'MMMM Do YYYY, h:mm a'\r\n                        )}\r\n                    </span>\r\n                  </h3>\r\n                )}\r\n                {tagDetailData[''] && (\r\n                  <h3>\r\n                    ASSOCIATIVE STAFF:\r\n                    <span>{tagDetailData['date']}</span>\r\n                  </h3>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewBrandDetail;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags,\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'dealerAreaList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('itwhere')\r\n    if (tagState.data && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n  console.log('areaSelectedTaga',selectedTags)\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('dealerAreaList', tagState)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Area found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='Dhanmondi, mirpur'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\nimport Areas from \"./Areas\";\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress: '',\r\n\tzipCode: '',\r\n\tpassword: '',\r\n\tcode: '',\r\n\tcommission: '',\r\n\tdepositMoney: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Dealer Created!',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addDealer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [selectedTags, setSelectedTags] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress: values.address,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcode: values.code,\r\n\t\t\t\tcommission: values.commission,\r\n\t\t\t\tdepositMoney: values.depositMoney,\r\n\t\t\t\tdealerArea: tagIds\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\t// openSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([{\r\n\t\t\t\tid: addCustomerRes['_id'] || '',\r\n\t\t\t\tkey: addCustomerRes['_id'] || '',\r\n\t\t\t\tname: addCustomerRes['firstName'] + ' ' + addCustomerRes['lastName'],\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t},...customerList])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('selectedCountryValue1',selectedCountryValue)\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!addCustomerState['isLoading']) {\r\n\t\t\tconst error = addCustomerState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addCustomerState['isLoading'] &&\r\n\t\t\tObject.keys(addCustomerState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addCustomerState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Dealer Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addCustomerState]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.code \r\n\t\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('cityListState', cityListState)\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Dealer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.code}\r\n\t\t\t\t\t\t\t\t\tname='code'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['code'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['code'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\r\n\t\t\t\t\t\t\t\t\tname='depositMoney'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['depositMoney'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['depositMoney'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Commission'\r\n\t\t\t\t\t\t\t\t\ttype='commission'\r\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\r\n\t\t\t\t\t\t\t\t\tname='commission'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['commission'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['commission'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\r\n\t\t\t\t\t\t\t\t\t\tname='address'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification , Form, Empty } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport Areas from \"./Areas\";\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Dealer Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateDealer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n\r\n\t  const [tagIds, setTagIds] = useState([]);\r\n\t  const [selectedTags, setSelectedTags] = useState([]);\r\n  \r\n\r\n\r\n\t  useEffect(() => {\r\n\r\n\t\tconsole.log('customerAreaCheck',customer)\r\n\t\tif (customer && customer.area && customer.area.length > 0) {\r\n\t\t\tconst tagIds = customer.area.map(item => item._id);\r\n\t\t\t\r\n\t\t\tsetSelectedTags(tagIds);\r\n\t\t\tsetTagIds(tagIds)\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n\t}, [customer.id]);\r\n\t\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n\t\t\temail: values.email,\r\n\t\t\tpassword: values.password,\r\n\t\t\taddress: values.address,\r\n\t\t\tfirstName: values.firstName,\r\n\t\t\tlastName: values.lastName,\r\n\t\t\tcode: values.code,\r\n\t\t\tcommission: values.commission,\r\n\t\t\tdepositMoney: values.depositMoney,\r\n\t\t\tdealerArea: tagIds\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\t// openSuccessNotification(); \r\n\t\t\r\n\t\t\t\tsetvisible(false); \r\n\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, customerList[index], { \r\n\t\t\t\t\t  // @ts-ignore\r\n\t\t\t\t\t...updateCustomerRes, \r\n\t\t\t\t\t\r\n\t\t\t\t\tid: updateCustomerRes['_id'] || '',\r\n\t\t\t\t\tkey: updateCustomerRes['_id'] || '',\r\n\t\t\t\t\tname: updateCustomerRes['firstName'] + ' ' + updateCustomerRes['lastName'],\r\n\r\n\t\t\t\t   });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!updateCustomerState['isLoading']) {\r\n\t\t\tconst error = updateCustomerState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!updateCustomerState['isLoading'] &&\r\n\t\t\tObject.keys(updateCustomerState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (updateCustomerState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Dealer Updated Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [updateCustomerState]);\r\n\r\n\r\n\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t// !values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.code ){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\twidth={'70vw'}\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tdestroyOnClose={true}\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n\r\n\t  {console.log('errorsupdatedealer',errors)}\r\n\r\n<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.code}\r\n\t\t\t\t\t\t\t\t\tname='code'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\r\n\t\t\t\t\t\t\t\t\tname='depositMoney'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Commission'\r\n\t\t\t\t\t\t\t\t\ttype='commission'\r\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\r\n\t\t\t\t\t\t\t\t\tname='commission'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\r\n\t\t\t\t\t\t\t\t\t\tname='address'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewCustomer from \"./AddNewDealer\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nimport moment from \"moment\";\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Dealer Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n  roles?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList, roles}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n   const history = useHistory(); \r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteDealer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Dealer'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n\r\n          \r\n      <Column\r\n           title=\"Code\" \r\n           dataIndex=\"code\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/dealer/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n            \r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/dealer/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n         \r\n     \r\n\r\n          {/* <Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n            /> */}\r\n\r\n  \r\n            \r\n          <Column\r\n           title=\"Commission\" \r\n           dataIndex=\"commission\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n        <Column\r\n           title=\"Deposit Money\" \r\n           dataIndex=\"depositMoney\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n      <Column\r\n\t\t\t\t\ttitle=\"Areas\"\r\n\t\t\t\t\tdataIndex=\"area\"\r\n\t\t\t\t\tkey=\"role\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(areas,record) => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t{areas && areas.length > 0 && areas.slice(0,2).map((tag) => (\r\n              <Tag \r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborderRadius:\"5px\"\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tcolor=\"blue\" key={tag._id}>\r\n\t\t\t\t\t\t\t{tag.name}\r\n\t\t\t\t\t\t\t</Tag>\r\n\t\t\t\t\t\t))}\r\n\r\n          <span \r\n          style={{\r\n            cursor:'pointer'\r\n          }}\r\n          onClick={() => {\r\n             history.push(`/admin/dealer/${record['id']}`)\r\n          }}>\r\n          {areas && areas.length === 2 && '.......'}\r\n          </span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\r\n\r\n      <Column\r\n           width={150}\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              {text && moment(text).format('MMMM Do YYYY, h:mm:ss a')}\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n\r\n{isAccess('postDealer',roles) && (\r\n              <Column\r\n        \r\n              className='classnameofthecolumn'\r\n                title=\"\"\r\n                key=\"action\"\r\n                align='right'\r\n                render={(text, record : any) => (\r\n                  <Space size=\"middle\">\r\n                    <a href='##'>\r\n                     <Tooltip placement=\"top\" title='Edit Dealer'>\r\n                    <span className='iconSize' onClick={() => {\r\n                      setvisible(true)\r\n                      setactiveCategoryForEdit(record); \r\n                    }}> \r\n                    <EditOutlined />\r\n                  \r\n                    </span>\r\n                     </Tooltip>\r\n                     </a>\r\n      \r\n                   \r\n      \r\n                    \r\n                     <Popconfirm \r\n                     \r\n                     onConfirm={() => handleDeleteCustomer(record.id)}\r\n                     title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                 \r\n                 <span \r\n                   className='iconSize iconSize-danger'\r\n                   > \r\n                   <DeleteOutlined/>\r\n                  </span>\r\n             \r\n                 </Popconfirm>\r\n                   \r\n                  </Space>\r\n                )}\r\n              />\r\n          )}\r\n\r\n\r\n\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n  roles: any; \r\n}\r\n\r\nconst CustomerList = ({roles}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'dealerList');\r\n  \r\n\r\n    console.log('dealerList',customerList); \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({\r\n        urlOptions:{\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1'\r\n          }\r\n          }\r\n       }); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n          Dealers\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search dealers..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n\r\n          {isAccess('postDealer',roles) && (\r\n        <Button\r\n        // type=\"primary\"\r\n        className='btnPrimaryClassNameoutline'\r\n        icon={<PlusOutlined />}\r\n        onClick={() => setAddNewCategoryVisible(true)}\r\n      >\r\n      Add New\r\n          \r\n          </Button>\r\n          )}\r\n    \r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        roles={roles}\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Dealer found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewCustomer \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  roles: state.globalState,\r\n})\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(CustomerList);\r\n\r\n\r\n\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification , Form, Empty } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport Areas from \"./Areas\";\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Dealer Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n    visible: any;\r\n    setCustomerDetailData?:any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setCustomerDetailData }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateDealer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n\r\n\t  const [tagIds, setTagIds] = useState([]);\r\n\t  const [selectedTags, setSelectedTags] = useState([]);\r\n  \r\n\r\n\r\n\t  useEffect(() => {\r\n\r\n\t\tconsole.log('customerAreaCheck',customer)\r\n\t\tif (customer && customer.area && customer.area.length > 0) {\r\n\t\t\tconst tagIds = customer.area.map(item => item._id);\r\n\t\t\t\r\n\t\t\tsetSelectedTags(tagIds);\r\n\t\t\tsetTagIds(tagIds)\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n\t}, [customer.id]);\r\n\t\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n\t\t\temail: values.email,\r\n\t\t\tpassword: values.password,\r\n\t\t\taddress: values.address,\r\n\t\t\tfirstName: values.firstName,\r\n\t\t\tlastName: values.lastName,\r\n\t\t\tcode: values.code,\r\n\t\t\tcommission: values.commission,\r\n\t\t\tdepositMoney: values.depositMoney,\r\n\t\t\tdealerArea: tagIds\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\t// openSuccessNotification(); \r\n\t\t\r\n                setvisible(false); \r\n                \r\n                setCustomerDetailData({\r\n                    // @ts-ignore\r\n                    ...updateCustomerRes, \r\n\t\t\t\t\tid: updateCustomerRes['_id'] || '',\r\n\t\t\t\t\tkey: updateCustomerRes['_id'] || '',\r\n\t\t\t\t\tname: updateCustomerRes['firstName'] + ' ' + updateCustomerRes['lastName'],\r\n                })\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!updateCustomerState['isLoading']) {\r\n\t\t\tconst error = updateCustomerState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!updateCustomerState['isLoading'] &&\r\n\t\t\tObject.keys(updateCustomerState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (updateCustomerState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Dealer Updated Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [updateCustomerState]);\r\n\r\n\r\n\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t// !values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.code ){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\twidth={'70vw'}\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tdestroyOnClose={true}\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n\r\n\t  {console.log('errorsupdatedealer',errors)}\r\n\r\n<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.code}\r\n\t\t\t\t\t\t\t\t\tname='code'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\r\n\t\t\t\t\t\t\t\t\tname='depositMoney'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Commission'\r\n\t\t\t\t\t\t\t\t\ttype='commission'\r\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\r\n\t\t\t\t\t\t\t\t\tname='commission'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\r\n\t\t\t\t\t\t\t\t\t\tname='address'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import \r\nimport Moment from \"react-moment\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Spin, Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CustomerEdit from \"./DealerEdit\";\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    roles?: any;\r\n}\r\n\r\nconst NewBrandDetail = ({roles}: Props) => {\r\n    const [customerDetailState, handleCustomerDetailFetch] = useHandleFetch({}, 'dealerDetail');\r\n    const [orderListState, handleOrderListFetch] = useHandleFetch({}, 'dealerOrderList');\r\n    const [registeredCustomerListState, handleRegisteredCustomerListFetch] = useHandleFetch({}, 'dealerRegisteredCustomerList');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [customerDetailData,setCustomerDetailData] = useState({}); \r\n\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const customerId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getCustomerDetail = async () => {\r\n            const customerDetailDataRes = await handleCustomerDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if(customerDetailDataRes){\r\n                // @ts-ignore\r\n                setCustomerDetailData(customerDetailDataRes); \r\n            }\r\n\r\n            console.log('customerDetailDataRes',customerDetailDataRes)\r\n        };\r\n\r\n        getCustomerDetail();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getOrderList = async () => {\r\n            await handleOrderListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderList();\r\n\r\n        const getRegisteredOrderList = async () => {\r\n            await handleRegisteredCustomerListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getRegisteredOrderList();\r\n\r\n\r\n\r\n\r\n    }, [customerId]);\r\n\r\n\r\n    console.log('dealerDetailData', customerDetailData);\r\n\r\n    \r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                 Dealer Detail\r\n                </h3>\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <>\r\n                        <CustomerEdit\r\n                            visible={tagEditVisible}\r\n                            setvisible={setTagEditVisible}\r\n                            customer={customerDetailData}\r\n                            setCustomerDetailData={setCustomerDetailData}\r\n                        />\r\n\r\n                {isAccess('postDealer',roles) && (\r\n                                    <Button\r\n                                    onClick={() => setTagEditVisible(true)}\r\n                                    type='link'\r\n                                    icon={<EditOutlined />}\r\n                                >\r\n                                    Edit\r\n                            </Button>\r\n                                )}\r\n\r\n\r\n                    \r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={customerDetailState.isLoading}>\r\n                {customerDetailState.done && customerDetailData && !(Object.keys(customerDetailData).length > 0) && (\r\n                    <Empty description='No Dealer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {customerDetailData['name']}\r\n                            </h2>\r\n                           \r\n\r\n                           \r\n                            {customerDetailData['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {customerDetailData['code']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n\r\n\r\n                            {customerDetailData['commision'] && (\r\n                                <h3>\r\n                                    COMMISSION:\r\n                                    <span>\r\n                                        {customerDetailData['commision']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                            {customerDetailData['depositMoney'] && (\r\n                                <h3>\r\n                                    DEPOSIT MONEY:\r\n                                    <span>\r\n                                        {customerDetailData['depositMoney']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {customerDetailData['city'] && (\r\n                                <h3>\r\n                                    CITY:\r\n                                    <span>\r\n                                        {customerDetailData['city']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                        \r\n\r\n\r\n                            {customerDetailData['address1'] && (\r\n                                <h3>\r\n                                    ADDRESS:\r\n                                    <span>\r\n                                        {customerDetailData['address1']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                         \r\n\r\n                            {customerDetailData['phone'] && (\r\n                                <h3>\r\n                                    PHONE:\r\n                                    <span>\r\n                                        {customerDetailData['phone']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                             {customerDetailData['email'] && (\r\n                                <h3>\r\n                                    EMAIL:\r\n                                    <span>\r\n                                        {customerDetailData['email']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                              {customerDetailData['area'] && customerDetailData['area'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                        AREAS:\r\n                                        {customerDetailData['area'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    // onClick={() => history.push(`/admin/dealer/area/${cat._id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n        <div className='dealerDetailBodyContainer'>\r\n            <div className='dealerDetailBodyContainer__item'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                     Orders \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {orderListState.isLoading && (\r\n                  <>\r\n                  <div style={{\r\n                    margin: '100px'\r\n                  }}>\r\n                  <Spin size='large' />\r\n                  </div>\r\n                  </>\r\n                )}\r\n\r\n                                {orderListState.done && !(orderListState.data.length > 0) && (\r\n\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orders found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {orderListState.done && orderListState.data && orderListState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={orderListState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                          \r\n          \r\n          \r\n\r\n        <Column\r\n          title=\"Code\"\r\n          dataIndex=\"shortCode\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                #{text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n\r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n\r\n              <Column\r\n                title=\"Total Price\" \r\n                dataIndex=\"total\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                />\r\n\r\n\r\n\r\n\r\n          <Column\r\n            width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n             <a href='##'>\r\n              <span\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n                {text}\r\n             </span> \r\n            </a>\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            </div>\r\n            <div className='dealerDetailBodyContainer__item'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                     Customers \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {registeredCustomerListState.isLoading && (\r\n                  <>\r\n                  <div style={{\r\n                    margin: '100px'\r\n                  }}>\r\n                  <Spin size='large' />\r\n                  </div>\r\n                  </>\r\n                )}\r\n                {registeredCustomerListState.done && !(registeredCustomerListState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Customer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {registeredCustomerListState.done && registeredCustomerListState.data && registeredCustomerListState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={registeredCustomerListState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                          \r\n          \r\n          \r\n                          <Column\r\n                      title=\"Name\" \r\n                      dataIndex=\"name\" \r\n                      key=\"id\" \r\n                      className='classnameofthecolumn'\r\n                      render={(text, record: any) => (\r\n                        <>\r\n                          <h4\r\n                            onClick={() => {\r\n                              history.push(`/admin/customer/${record.id}`)\r\n                              // setcategoryDetailVisible(true);\r\n                            }}\r\n                            style={{\r\n                              fontWeight: 400,\r\n                              color: '#555',\r\n                              cursor: 'pointer'\r\n                            }}>\r\n                            {text}\r\n                          </h4>\r\n                        </>\r\n                      )}\r\n                      />\r\n\r\n         \r\n     \r\n\r\n         \r\n\r\n            \r\n          <Column\r\n           title=\"Order\" \r\n           dataIndex=\"orderCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n        <Column\r\n           title=\"Total Price\" \r\n           dataIndex=\"totalOrderPrice\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    roles: state.globalState,\r\n  })\r\n  \r\n  // @ts-ignore\r\n  export default connect(mapStateToProps, null)(NewBrandDetail);\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport { useHandleFetch } from '../../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Area Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagList?:any; \r\n    tagList?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagList,tagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateDealerArea');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n\t\t\topenSuccessNotification();\r\n\t\t\tsetTagEditVisible(false)\r\n\t\t\t\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }; \r\n \r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n                ...initialValues, \r\n                ...tagDetailData,\r\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\r\n                    bnMetaTitle: tagDetailData['bn']\r\n                    && tagDetailData['bn'].metaTitle\r\n                    && tagDetailData['bn'].metaTitle,\r\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\r\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\r\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\r\n                  })\r\n            }}\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                        \tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n                            title=\"Area Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Area Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addDealerArea');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([{\r\n                id: addTagRes['_id'] || '',\r\n                key: addTagRes['_id'] || '',\r\n                name: addTagRes['name'] || '',\r\n            },...tagList])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Area\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../../components/Placeholders';\r\nimport TagQuickEdit from './AreaQuickEdit';\r\nimport AddNewTag from './AddNewArea';\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Area Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\r\n    {},\r\n    'deleteDealerArea'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteTag = async (id) => {\r\n    const deleteTagRes = await handleDeleteTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Area');\r\n      const newtagList = data.filter((item) => item.id !== id);\r\n      setTagList(newtagList);\r\n    }\r\n  };\r\n\r\n  const handleOk = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/dealer/area/${record.id}`);\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <a href='##'>\r\n                <Tooltip placement='top' title='Edit Area'>\r\n                  <span\r\n                    className='iconSize'\r\n                    onClick={() => {\r\n                      setvisible(true);\r\n                      setactiveCategoryForEdit(record);\r\n                    }}\r\n                  >\r\n                    <EditOutlined />\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteTag(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <TagQuickEdit\r\n          tagList={data}\r\n          setTagList={setTagList}\r\n          tagEditVisible={visible}\r\n          setTagEditVisible={setvisible}\r\n          tagDetailData={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst TagList = ({}: Props) => {\r\n  const [tagList, setTagList] = useState([]);\r\n\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'dealerAreaList');\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tags = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setTagList(tags);\r\n    };\r\n    setTags();\r\n  }, []);\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    if (tagState.data.length > 0) {\r\n      const newTagList = tagState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setTagList(newTagList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n            <h2 className='categoryListContainer__header-title'>Areas</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search areas..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n            />\r\n          </div>\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n          </Button>\r\n        </div>\r\n        <div className='categoryListContainer__categoryList'>\r\n          {tagState.done && tagList.length > 0 && (\r\n            <MyTable setTagList={setTagList} data={tagList} />\r\n          )}\r\n          {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n          {tagState.done && !(tagList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '200px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Area found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AddNewTag\r\n        tagList={tagList}\r\n        setTagList={setTagList}\r\n        addNewCategoryVisible={addNewCategoryVisible}\r\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Area Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateDealerArea');\r\n \r\n    \r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n            })\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }; \r\n\r\n\r\n    // useEffect(()=>{\r\n\r\n    //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\r\n    //         const metaTags = tagDetailData.metaTags.split(','); \r\n\r\n    //         console.log('localMetaTags',metaTags);\r\n           \r\n    //         const bnMetaTags = tagDetailData.bn['metaTags'].split(','); \r\n\r\n    //         setTags(metaTags)\r\n    //         setBnTags(bnMetaTags)\r\n    //     }\r\n\r\n    // },[]); \r\n\r\n\r\n    console.log('tagDetailData',tagDetailData);\r\n\r\n\r\n \r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n                ...initialValues, \r\n                ...tagDetailData,\r\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\r\n                    bnMetaTitle: tagDetailData['bn']\r\n                    && tagDetailData['bn'].metaTitle\r\n                    && tagDetailData['bn'].metaTitle,\r\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\r\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\r\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\r\n                  })\r\n            }}\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                        \tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n                            title=\"Area Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\n// import lib\r\nimport { EditOutlined } from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../../components/Placeholders';\r\nimport TagEdit from './AreaEdit';\r\nimport moment from 'moment';\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'dealerAreaDetail'\r\n  );\r\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\r\n    {},\r\n    'dealerListByArea'\r\n  );\r\n\r\n  const [tagEditVisible, setTagEditVisible] = useState(false);\r\n  const [tagDetailData, setTagDetailData] = useState({});\r\n\r\n  console.log('dealerListByArea', tagProductsState);\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const tagId = params['id'];\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const tagDetailRes = await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (tagDetailRes) {\r\n        console.log('tagDetailRes', tagDetailRes);\r\n        // @ts-ignore\r\n        setTagDetailData(tagDetailRes);\r\n      }\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  useEffect(() => {\r\n    const getTagProducts = async () => {\r\n      await handleTagProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getTagProducts();\r\n  }, [tagId]);\r\n\r\n  console.log('tagProductsState', tagProductsState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Area Detail</h3>\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <>\r\n              <TagEdit\r\n                tagEditVisible={tagEditVisible}\r\n                setTagEditVisible={setTagEditVisible}\r\n                tagDetailData={tagDetailData}\r\n                setTagDetailData={setTagDetailData}\r\n              />\r\n              <Button\r\n                onClick={() => setTagEditVisible(true)}\r\n                type='link'\r\n                icon={<EditOutlined />}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          !(Object.keys(tagDetailData).length > 0) && (\r\n            <Empty\r\n              description='No Area found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <div className='brandDetailContainer__header'>\r\n              <div className='brandDetailContainer__header-info'>\r\n                <h2>{tagDetailData['name']}</h2>\r\n                {tagDetailData['url'] && (\r\n                  <h3>\r\n                    URL:\r\n                    <span>{tagDetailData['url']}</span>\r\n                  </h3>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n      </Skeleton>\r\n\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Dealers</h3>\r\n      </div>\r\n      <div className='brandDetailContainer__body'>\r\n        {tagProductsState.isLoading && <DataTableSkeleton />}\r\n        {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n          <div\r\n            style={{\r\n              marginTop: '100px',\r\n            }}\r\n          >\r\n            <Empty\r\n              description='No Dealer exists for this area'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {tagProductsState.done &&\r\n          tagProductsState.data &&\r\n          tagProductsState.data.length > 0 && (\r\n            <>\r\n              <Table\r\n                style={{\r\n                  paddingTop: '10px',\r\n                  borderRadius: '5px !important',\r\n                  overflow: 'hidden',\r\n                  boxShadow:\r\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\r\n                }}\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={tagProductsState.data}\r\n                tableLayout={'auto'}\r\n                onHeaderRow={(column) => {\r\n                  return {\r\n                    style: {\r\n                      color: 'red !important',\r\n                    },\r\n                  };\r\n                }}\r\n              >\r\n                <Column\r\n                  title='Code'\r\n                  dataIndex='code'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <>\r\n                      <h4\r\n                        onClick={() => {\r\n                          history.push(`/admin/dealer/${record.id}`);\r\n                          // setcategoryDetailVisible(true);\r\n                        }}\r\n                        style={{\r\n                          fontWeight: 400,\r\n                          color: '#555',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      >\r\n                        {text}\r\n                      </h4>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Name'\r\n                  dataIndex='name'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <>\r\n                      <h4\r\n                        onClick={() => {\r\n                          history.push(`/admin/dealer/${record.id}`);\r\n                          // setcategoryDetailVisible(true);\r\n                        }}\r\n                        style={{\r\n                          fontWeight: 400,\r\n                          color: '#555',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      >\r\n                        {text}\r\n                      </h4>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Commission'\r\n                  dataIndex='commission'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Deposit Money'\r\n                  dataIndex='depositMoney'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  width={150}\r\n                  title='Created'\r\n                  dataIndex='created'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <Space size='middle'>\r\n                      <h5>\r\n                        {text && moment(text).format('MMMM Do YYYY, h:mm:ss a')}\r\n                      </h5>\r\n                    </Space>\r\n                  )}\r\n                />\r\n              </Table>\r\n            </>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewBrandDetail;\r\n","import React from 'react';\r\n\r\n// import pages\r\nimport { Overview } from '../../pages/overview';\r\nimport { CategoryList, NewCategoryDetail } from '../../pages/category';\r\nimport {\r\n  ProductBundleDetail,\r\n  ProductBundleList,\r\n} from '../../pages/productBundle';\r\nimport { BrandList, AddNewBrand, NewBrandDetail } from '../../pages/brand';\r\nimport { ProductList, NewProductDetail } from '../../pages/product';\r\nimport { TagList, AddNewTag, NewTagDetail } from '../../pages/tag';\r\nimport { CouponList, CouponDetail } from '../../pages/coupon';\r\nimport { CustomerList, CustomerDetail } from '../../pages/customer';\r\nimport { PagesList, AddNewPage, PageDetail, PageEdit } from '../../pages/pages';\r\nimport { AttributeList } from '../../pages/attribute';\r\nimport {\r\n  OrderList,\r\n  AddNewOrder,\r\n  OrderDetail,\r\n  OrderAnalytics,\r\n  ConfigOrderStatus,\r\n} from '../../pages/order';\r\nimport {\r\n  Component,\r\n  ManageThemes,\r\n  Image,\r\n  Invoice,\r\n  SiteInfo,\r\n} from '../../pages/settings';\r\nimport { Delivery } from '../../pages/delivery';\r\nimport Sms from '../../pages/sms';\r\nimport { Email } from '../../pages/email';\r\nimport { NotificationList } from '../../pages/notification';\r\nimport { AdminList, AdminDetail } from '../../pages/admins';\r\nimport { PostList, PostDetail } from '../../pages/post';\r\nimport { StaffList, StaffDetail } from '../../pages/staff';\r\nimport { ExpenseList, ExpenseDetail } from '../../pages/expense';\r\nimport { DealerList, DealerDetail } from '../../pages/dealer';\r\nimport { AreaDetail, AreaList } from '../../pages/dealer/Area';\r\nimport {\r\n  PostTagList,\r\n  PostCategoryList,\r\n  NewPostCategoryDetail,\r\n  NewPostTagDetail,\r\n} from '../../pages/post';\r\n\r\n// import Login from '../../pages/auth/login';\r\n\r\n// import libraries\r\nimport { Layout } from 'antd';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nconst { Content } = Layout;\r\n\r\ninterface Props {}\r\n\r\nconst ContentComponent = (props: Props) => {\r\n  return (\r\n    <Content\r\n      hasSider={true}\r\n      style={{\r\n        backgroundColor: '#fff',\r\n        paddingTop: '20px',\r\n      }}\r\n    >\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => <Redirect to='/admin/overview' />}\r\n        />\r\n        <Route\r\n          exact\r\n          path='/admin'\r\n          render={() => <Redirect to='/admin/overview' />}\r\n        />\r\n        <Route path='/admin/overview' exact>\r\n          <Overview />\r\n        </Route>\r\n        <Route path='/admin/category' exact>\r\n          <CategoryList />\r\n        </Route>\r\n        <Route path='/admin/category/:id' exact>\r\n          <NewCategoryDetail />\r\n        </Route>\r\n        {/* <Route path='/admin/category/:name' exact>\r\n                    <CategoryDetail />\r\n                </Route> */}\r\n        {/* CategoryDetail */}\r\n        <Route path='/admin/brand/new' exact>\r\n          <AddNewBrand />\r\n        </Route>\r\n        <Route path='/admin/brand' exact>\r\n          <BrandList />\r\n        </Route>\r\n        <Route path='/admin/brand/:id' exact>\r\n          <NewBrandDetail />\r\n        </Route>\r\n        <Route path='/admin/product' exact>\r\n          <ProductList />\r\n        </Route>\r\n        <Route path='/admin/product/:id' exact>\r\n          <NewProductDetail />\r\n        </Route>\r\n        <Route path='/admin/bundle' exact>\r\n          <ProductBundleList />\r\n        </Route>\r\n        <Route path='/admin/bundle/:id' exact>\r\n          <ProductBundleDetail />\r\n        </Route>\r\n        <Route path='/admin/coupon' exact>\r\n          <CouponList />\r\n        </Route>\r\n        <Route path='/admin/posts' exact>\r\n          <PostList />\r\n        </Route>\r\n        <Route path='/admin/posts/tag' exact>\r\n          <PostTagList />\r\n        </Route>\r\n        <Route path='/admin/posts/category' exact>\r\n          <PostCategoryList />\r\n        </Route>\r\n        <Route path='/admin/posts/:id' exact>\r\n          <PostDetail />\r\n        </Route>\r\n        <Route path='/admin/posts/tag/:id' exact>\r\n          <NewPostTagDetail />\r\n        </Route>\r\n        <Route path='/admin/posts/category/:id' exact>\r\n          <NewPostCategoryDetail />\r\n        </Route>\r\n        <Route path='/admin/coupon/:id' exact>\r\n          <CouponDetail />\r\n        </Route>\r\n        <Route path='/admin/notification' exact>\r\n          <NotificationList />\r\n        </Route>\r\n        {/* <Route path='/product/new' exact>\r\n                     <AddNewProduct />\r\n                   </Route> */}\r\n        <Route path='/admin/tag' exact>\r\n          <TagList />\r\n        </Route>\r\n        <Route path='/admin/tag/new' exact>\r\n          <AddNewTag />\r\n        </Route>\r\n        <Route path='/admin/tag/:id' exact>\r\n          <NewTagDetail />\r\n        </Route>\r\n        <Route path='/admin/attribute' exact>\r\n          <AttributeList />\r\n        </Route>\r\n        <Route path='/admin/order' exact>\r\n          <OrderList />\r\n        </Route>\r\n        <Route path='/admin/order/new' exact>\r\n          <AddNewOrder />\r\n        </Route>\r\n        <Route path='/admin/order/overview' exact>\r\n          <OrderAnalytics />\r\n        </Route>\r\n        <Route path='/admin/order/config' exact>\r\n          <ConfigOrderStatus />\r\n        </Route>\r\n        <Route path='/admin/order/:id' exact>\r\n          <OrderDetail />\r\n        </Route>\r\n        <Route path='/admin/dealer' exact>\r\n          <DealerList />\r\n        </Route>\r\n        <Route path='/admin/dealer/area' exact>\r\n          <AreaList />\r\n        </Route>\r\n        <Route path='/admin/dealer/area/:id' exact>\r\n          <AreaDetail />\r\n        </Route>\r\n        <Route path='/admin/dealer/:id' exact>\r\n          <DealerDetail />\r\n        </Route>\r\n        <Route path='/admin/staff' exact>\r\n          <StaffList />\r\n        </Route>\r\n        <Route path='/admin/staff/:id' exact>\r\n          <StaffDetail />\r\n        </Route>\r\n        <Route path='/admin/expense' exact>\r\n          <ExpenseList />\r\n        </Route>\r\n        <Route path='/admin/expense/:id' exact>\r\n          <ExpenseDetail />\r\n        </Route>\r\n\r\n        <Route path='/admin/acccounting/overview' exact>\r\n          <OrderList />\r\n        </Route>\r\n\r\n        <Route path='/admin/customer' exact>\r\n          <CustomerList />\r\n        </Route>\r\n        <Route path='/admin/customer/:id' exact>\r\n          <CustomerDetail />\r\n        </Route>\r\n        <Route path='/admin/page' exact>\r\n          <PagesList />\r\n        </Route>\r\n        <Route path='/admin/page/new' exact>\r\n          <AddNewPage />\r\n        </Route>\r\n        <Route path='/admin/page/edit/:id' exact>\r\n          <PageEdit />\r\n        </Route>\r\n\r\n        <Route path='/admin/page/:id' exact>\r\n          <PageDetail />\r\n        </Route>\r\n        <Route path='/admin/delivery' exact>\r\n          <Delivery />\r\n        </Route>\r\n        <Route path='/admin/settings/components' exact>\r\n          <Component />\r\n        </Route>\r\n        <Route path='/admin/settings/image' exact>\r\n          <Image />\r\n        </Route>\r\n        <Route path='/admin/settings/themes' exact>\r\n          <ManageThemes />\r\n        </Route>\r\n        <Route path='/admin/settings/invoice' exact>\r\n          <Invoice />\r\n        </Route>\r\n        <Route path='/admin/settings/siteInfo' exact>\r\n          <SiteInfo />\r\n        </Route>\r\n        <Route path='/admin/settings/admins' exact>\r\n          <AdminList />\r\n        </Route>\r\n        <Route path='/admin/settings/admins/:id' exact>\r\n          <AdminDetail />\r\n        </Route>\r\n        <Route path='/admin/sms' exact>\r\n          <Sms />\r\n        </Route>\r\n        <Route path='/admin/email' exact>\r\n          <Email />\r\n        </Route>\r\n      </Switch>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ContentComponent;\r\n","import Content from \"./Content\";\r\nexport default Content; ","import React, {useEffect} from 'react';\r\n\r\n// import pages\r\nimport Login from './pages/auth/login';\r\n\r\n// import layouts\r\nimport Sider from './layout/sider';\r\nimport Header from './layout/header';\r\nimport Content from './layout/content';\r\n// import Footer from './layout/footer';\r\n\r\n// import state\r\nimport { glboalOperations } from \"./state/ducks/globalState\";\r\nimport { credentialsOperations } from \"./state/ducks/credentials\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n// import libraries\r\nimport { Layout } from 'antd';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"./hooks\";\r\n\r\nconst App = ({saveRoles,saveCredentials}) => {\r\n\r\n  const [getAdminCredentialState, handleAdminCredentCialsFetch] = useHandleFetch({}, 'getAdminCredential');\r\n\r\n\r\n\r\n  useEffect(() => {\r\n      const getCredenCials = async () => {\r\n          const res = await handleAdminCredentCialsFetch({});\r\n          // saveCredentials(res); \r\n        // @ts-ignore\r\n        if(res && res['role']) {\r\n          saveRoles(res['role'] || [])\r\n        }\r\n      }\r\n      getCredenCials();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path='/admin/login' exact>\r\n          <Login />\r\n        </Route>\r\n      </Switch>\r\n      <Switch>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Header />\r\n\r\n          <Layout className='site-layout'>\r\n            <Sider />\r\n            <Content />\r\n          </Layout>\r\n          {/* <Footer /> */}\r\n        </Layout>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\n\r\nconst mapDispathToProps = {\r\n  saveRoles: glboalOperations.saveRoles,\r\n  saveCredentials: credentialsOperations.saveCredentials,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  globalState: state.globalState,\r\n})\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, mapDispathToProps)(App);\r\n\r\n\r\n\r\n\r\n/* \r\n\r\n#product \r\n#order\r\n#category\r\n#order\r\n#customer\r\n#customer\r\n*/\r\n\r\n/*\r\n\r\nfix ===>\r\n\r\n// # product add -> category name search dile crash kore\r\n// # add order -> make delivery zone align as horizontal\r\n// # double notification -> when creating order \r\n// # customer detail -> customer er order history hobe\r\n// # customer list => add orderCount and totalOrderPrice field to show\r\n# customer List =>  user will be able to sort with them (sort=totalOrderPrice&sortOrder=-1) \r\n// # order analytics -> add metric=deliveryRegion \r\n# at the footer of analytic charts -> add a show data button -> on clicked show data as table \r\n# price price field - make input type number \r\n# delivery region edit\r\n# email api implementation\r\n# check if the tag edit works properly \r\n# on open product quick epit site crashes \r\n# product bundle detail -> show images in product bundle detail \r\n# fix the attach image in bundle \r\n# amount type will be drowpdown\r\n# add meta tags autofill in all items \r\n# add porst/add product => categories scrolbar\r\n# update all the item quick edit to item edit \r\n# make order edit functionality to quick order edit\r\n\r\n\r\nfeat ===> \r\n\r\n# dealer\r\n# bundle edit\r\n# coupon edit\r\n# post edit\r\n# post category edit\r\n# post tag edit (maybe)\r\n# notification\r\n# admin roles\r\n# dynamic order status\r\n# add dealer code at add order. \r\n# add coupon code at add order. \r\n*/\r\n\r\n/* \r\n\r\n*/\r\n\r\n/*\r\n\r\nissus ====> \r\n\r\nerror => product bundle ---> item not defined. \r\nerror => Cannot read property 'offer' of undefined. \r\nerror => coupon cover is coming as array in coupon list.\r\nerror => update post tag => Cannot read property 'name' of undefined. \r\nerror => add post category => checkMime is not defined probably because of the image.\r\npage update => {\"image\":\"selected image are not attached to page with given id\"}.\r\norder list => add delivery filtering drowndown\r\nrecipe category => fix recipe category edit and others'\r\nadd site map => at site info add a extra tab, --sitemap-- then in there show, site maps, and\r\nin below show update button which will update the site map. \r\nmake components images to update at once.  \r\n\r\n*/\r\n\r\n\r\n/* \r\n\r\nOff work left to do: \r\nFiltering order by deliveryzone\r\nmaking Post category work perfectly\r\nupdate component at once. \r\norder status is not working properly\r\nadmin roles\r\ngive resolved images when create a component\r\ncheck if productlist returns cover\r\nmake admin list section work properly\r\n*/","export function actionShouldBlock( meta ) {\r\n    return !meta || !meta.async || !meta.blocking;\r\n}\r\n\r\nexport function actionFinished ( type ) {\r\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\r\n}\r\n","import * as utils from \"./utils\";\r\n\r\nconst busyReducer = ( state = 0, action ) => {\r\n    if ( utils.actionShouldBlock( action.meta ) ) {\r\n        return state;\r\n    }\r\n    if ( utils.actionFinished( action.type ) ) {\r\n        return state - 1;\r\n    }\r\n    return state + 1;\r\n};\r\n\r\nexport default busyReducer;\r\n","import reducer from \"./reducers\";\r\n\r\nexport default reducer;\r\n","export function productPositionInCart(cart, product) {\r\n  return cart.map(item => item.product.id).indexOf(product.id);\r\n}\r\n\r\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\r\n  return {\r\n    product,\r\n    quantity,\r\n    isSelectedForCheckout,\r\n  };\r\n}\r\n","export function getCartItemQuantity(cart, id) {\r\n  return cart.find((item) => item.product.id === id).quantity;\r\n}\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n  if (!cartItems.length > 0) {\r\n    return 0;\r\n  }\r\n\r\n  const prices = cartItems.map((cartItem) => {\r\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\r\n  });\r\n\r\n  const totalPrice = prices.reduce((a, b) => {\r\n    return a + b;\r\n  }, 0);\r\n  return totalPrice;\r\n};\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as cartOperations from \"./operations\";\r\nimport * as cartSelectors from \"./selectors\";\r\n\r\nexport {\r\n    cartOperations,\r\n    cartSelectors,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { product, quantity, isSelectedForCheckout } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    if (index === -1) {\r\n      return [\r\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\r\n        ...state,\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.id\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n\r\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\r\n    const { cartItems } = action.payload;\r\n\r\n    if (cartItems.length > 0) {\r\n      return cartItems;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n\r\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\r\n    const { product } = action.payload;\r\n\r\n    const index = utils.productPositionInCart(state, product.product);\r\n    if (index === -1) {\r\n      return [...state, { ...product, isSelectedForCheckout: true }];\r\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\r\n      const tempArrayWithOutOldProduct = state.filter(\r\n        (item) => item.product.id !== product.product.id\r\n      );\r\n\r\n      return [\r\n        ...tempArrayWithOutOldProduct,\r\n        { ...product, isSelectedForCheckout: true },\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.product.id\r\n    );\r\n\r\n    return [\r\n      ...tempArrayWithOutOldProduct,\r\n      { ...product, isSelectedForCheckout: false },\r\n    ];\r\n  },\r\n\r\n  [types.CHANGE_QUANTITY]: (state, action) => {\r\n    const { product, quantity } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n\r\n    const updatedItem = Object.assign({}, state[index], { quantity });\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default cartReducer;\r\n","export const SET_CART = 'cart/SET';\r\nexport const TOGGLE = 'cart/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\r\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\r\nexport const REMOVE = 'cart/REMOVE';\r\nexport const CLEAR = 'cart/CLEAR';\r\n","export function productPositionInWishList(wishList, productId) {\r\n  return wishList.map(item => item).indexOf(productId);\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as wishListOperations from './operations';\r\nimport * as wishListSelectors from './selectors';\r\n\r\nexport { wishListOperations, wishListSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst wishListReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    if (index === -1) {\r\n      return [...state, productId];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item !== productId\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n  [types.ADD_WISHLIST]: (state, action) => {\r\n    const wishlist = action.payload;\r\n    return [...wishlist];\r\n  },\r\n\r\n  [types.REMOVE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default wishListReducer;\r\n","export const TOGGLE = 'wishList/TOGGLE';\r\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\r\nexport const REMOVE = 'wishList/REMOVE';\r\nexport const CLEAR = 'wishList/CLEAR';\r\n","export function getCartItemQuantity( cart, id ) {\r\n    return cart.find( item => item.product.id === id ).quantity;\r\n}\r\n\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n    if(!cartItems.length > 0){\r\n        return 0; \r\n    }\r\n\r\n    return cartItems.reduce((a,b) => {\r\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\r\n    },0); \r\n\r\n}","import reducer from './reducers';\r\n\r\nimport * as checkoutOperations from './operations';\r\nimport * as checkoutSelectors from './selectors';\r\n\r\nexport { checkoutOperations, checkoutSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst checkoutReducer = createReducer(initialState)({\r\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\r\n    const { products } = action.payload;\r\n\r\n    if (products.length > 0) {\r\n      const uniqueProductsOfCheckout = products.filter(function(product) {\r\n        return state.indexOf(product) == -1;\r\n      });\r\n      return uniqueProductsOfCheckout;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default checkoutReducer;\r\n","export const SET_CART = 'checkout/SET';\r\nexport const TOGGLE = 'checkout/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\r\nexport const REMOVE = 'checkout/REMOVE';\r\nexport const CLEAR = 'checkout/CLEAR';\r\n","export function productPositionInCart( cart, product ) {\r\n    return cart.map( item => item.product.id ).indexOf( product.id );\r\n}\r\n\r\nexport function newCartItem( product, quantity ) {\r\n    return {\r\n        product,\r\n        quantity,\r\n    };\r\n}\r\n","export const ADD = 'serach/ADD';\r\nexport const UPDATE = 'serach/UPDATE';\r\nexport const REMOVE = 'serach/REMOVE';\r\nexport const CLEAR = 'serach/CLEAR';\r\n","export function queryPositionInQueryList(queryList, query) {\r\n  return queryList.map(item => item.key).indexOf(query.key);\r\n}\r\n\r\nexport function newQueryItem(query) {\r\n  return query;\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as queryOperations from './operations';\r\nimport * as querySelectors from './selectors';\r\n\r\nexport { queryOperations, querySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n       id: uniqueId,\r\n       key: 'searchQuery',\r\n       value: string | product => {name,id,image}\r\n       created: Date,\r\n       lastUpdated: Date\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst searyQueryReducer = createReducer(initialState)({\r\n  [types.ADD]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, query);\r\n    if (index === -1) {\r\n      return [utils.newQueryItem(query), ...state];\r\n    }\r\n\r\n    const currentItem = state[index];\r\n    const updatedItem = Object.assign({}, currentItem);\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.UPDATE]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const oldQuery = state.find(item => item.key !== query.key);\r\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\r\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default searyQueryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { createReducer } from \"../../utils\";\r\n\r\n/* State shape\r\n{\r\n    details: product,\r\n    list: [ product ],\r\n}\r\n*/\r\n\r\nconst detailsReducer = createReducer( null )( {\r\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\r\n} );\r\n\r\nconst listReducer = createReducer( [ ] )( {\r\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\r\n} );\r\n\r\nexport default combineReducers( {\r\n    details: detailsReducer,\r\n    list: listReducer,\r\n} );\r\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\r\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\r\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\r\n\r\nexport const FETCH_LIST = \"product/FETCH_LIST\";\r\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\r\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as productOperations from \"./operations\";\r\n\r\nexport {\r\n    productOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst authReducer = createReducer(false)({\r\n  [types.LOGIN]: () => true,\r\n  [types.LOGOUT]: () => false,\r\n});\r\n\r\nconst redirectAfterLoginReducer = createReducer(null)({\r\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\r\n});\r\n\r\nexport default combineReducers({\r\n  isAuthenticated: authReducer,\r\n  redirectAfterLogin: redirectAfterLoginReducer,\r\n});\r\n","export const LOGIN = \"session/LOGIN\";\r\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\r\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\r\nexport const LOGOUT = \"session/LOGOUT\";\r\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\r\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\r\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as sessionOperations from \"./operations\";\r\n\r\nexport {\r\n    sessionOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_CATEGORIES]: (state, action) => {\r\n    const { categories } = action.payload;\r\n\r\n    if (categories) {\r\n      return categories;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_CATEGORIES]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\r\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\r\n","import reducer from './reducers';\r\n\r\nimport * as categoryOperations from './operations';\r\nimport * as categorySelectors from './selectors';\r\n\r\nexport { categoryOperations, categorySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = {};\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\r\n    const { response } = action.payload;\r\n\r\n    if (response) {\r\n      return { ...state, ...response };\r\n    }\r\n\r\n    return { ...state };\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\r\n","import reducer from './reducers';\r\n\r\nimport * as cacheOperations from './operations';\r\nimport * as cacheSelectors from './selectors';\r\n\r\nexport { cacheOperations, cacheSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_BRAND]: (state, action) => {\r\n    const { brands } = action.payload;\r\n\r\n    if (brands) {\r\n      return brands;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_BRAND]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_BRAND = 'category/ADD_BRAND';\r\nexport const GET_BRAND = 'category/GET_BRAND';\r\n","import reducer from './reducers';\r\n\r\nimport * as brandOperations from './operations';\r\nimport * as brandSelectors from './selectors';\r\n\r\nexport { brandOperations, brandSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_TAGS]: (state, action) => {\r\n    const { tags } = action.payload;\r\n\r\n    if (tags) {\r\n      return tags;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_TAGS]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_TAGS = 'tag/ADD_TAGS';\r\nexport const GET_TAGS = 'tag/GET_TAGS';\r\n","import reducer from './reducers';\r\n\r\nimport * as tagOperations from './operations';\r\nimport * as tagSelectors from './selectors';\r\n\r\nexport { tagOperations, tagSelectors };\r\n\r\nexport default reducer;\r\n","import { fetch } from \"../utils\";\r\n\r\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\r\n\r\nconst apiService = ( ) => ( next ) => ( action ) => {\r\n    const result = next( action );\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return result;\r\n    }\r\n\r\n    const { path, method = \"GET\", body } = action.meta;\r\n\r\n    if ( !path ) {\r\n        throw new Error( `'path' not specified for async action ${ action.type }` );\r\n    }\r\n\r\n    const url = `${ baseUrl }${ path }`;\r\n\r\n    return fetch( url, method, body ).then(\r\n        res => handleResponse( res, action, next ),\r\n        err => handleErrors( err, action, next ),\r\n    );\r\n};\r\n\r\nexport default apiService;\r\n\r\nfunction handleErrors( err, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_FAILED`,\r\n        payload: err,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return Promise.reject( err );\r\n}\r\n\r\nfunction handleResponse( res, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_COMPLETED`,\r\n        payload: res,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return res;\r\n}\r\n","const REGULAR = [\r\n    \"background: blue\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst SUCCESS = [\r\n    \"background: green\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst STARTED = [\r\n    \"background: darkorange\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst FAILURE = [\r\n    \"background: red\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\r\n    if ( !active ) {\r\n        return next( action );\r\n    }\r\n\r\n    const prevState = store.getState( );\r\n    const result = next( action );\r\n    const nextState = store.getState( );\r\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\r\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\r\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\r\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\r\n    logGroupEnd( );\r\n    return result;\r\n};\r\n\r\nexport default createLogger;\r\n\r\nfunction logGroupCollapsed( ...args ) {\r\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logGroupEnd( ...args ) {\r\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logInfo( ...args ) {\r\n    console.info( ...args );\r\n}\r\n\r\nfunction determineStyle( action ) {\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return REGULAR;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\r\n        return SUCCESS;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\r\n        return FAILURE;\r\n    }\r\n\r\n    return STARTED;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport * as reducers from './ducks';\r\nimport { apiService } from './middlewares';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst persistConfig = {\r\n  key: 'shop',\r\n  storage: storage,\r\n  // whitelist: ['session'], // which reducer want to store\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(\r\n    pReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(apiService),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (f) => f\r\n    )\r\n  );\r\n}\r\n\r\nconst store = configureStore({});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './App';\n\n// import redux store\nimport { store } from './state/store';\n\n// import the main files of styles\nimport './styles/_main.scss';\n\n\n// importing react hot loader for hot loading\nimport { AppContainer } from 'react-hot-loader';\n\n\n// Wrap the rendering in a function:\nconst render = () => {\n\tReactDOM.render(\n\t\t<ReduxProvider store={store}>\n\t\t\t<AppContainer>\n\t\t\t\t<App />\n\t\t\t</AppContainer>\n\t\t</ReduxProvider>,\n\t\tdocument.getElementById('root')\n\t);\n};\n\n\n// Render once\nrender();\n\n\n\n// Webpack Hot Module Replacement API\nif (module['hot']) {\n\tmodule['hot'].accept('./App', () => {\n\t\trender();\n\t});\n}\n\n\n"],"sourceRoot":""}